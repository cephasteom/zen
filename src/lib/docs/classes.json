{
	"id": 0,
	"name": "zen-3",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "Pattern",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "Pattern",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Patterns are the building blocks of Zen. They are used to generate patterns of values in interesting, concise ways. The first value passed to a pattern is either time "
							},
							{
								"kind": "code",
								"text": "`t`"
							},
							{
								"kind": "text",
								"text": " or a position in space "
							},
							{
								"kind": "code",
								"text": "`x`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`y`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`z`"
							},
							{
								"kind": "text",
								"text": ", depending on whether the pattern is assigned to a stream's "
							},
							{
								"kind": "code",
								"text": "`p`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`px`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`py`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`pz`"
							},
							{
								"kind": "text",
								"text": " property. Patterns methods can be chained together applying each new method to the value passed from the previous one in the chain."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ns0.p.amp.range(0,1)\ns0.px.drive.sine(0,1)\ns0.py.modi.range(0,10).mul((t%q)/q)\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 19,
							"name": "$",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 95,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L95"
								}
							],
							"getSignature": {
								"id": 20,
								"name": "$",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Return the Pattern that instantiated this Pattern if it exists, otherwise return this Pattern.\nUseful when using any of the dollar methods, which spawn new Patterns, allowing you to return to this parent pattern."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns1.set({inst: 'synth', cut: 1})\ns1.p.n\n .$if(t%3).set(57).$\n .$else.scales('d-dorian', 16)\ns1.e.every(1)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 95,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L95"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 21,
							"name": "$$",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 113,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L113"
								}
							],
							"getSignature": {
								"id": 22,
								"name": "$$",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Return the original Pattern in the chain.\nUseful when using any of the dollar methods, which spawn new Patterns, allowing you to return to the original pattern."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.set({inst: 'synth', n: 50})\n   s0.e.every(5)\n\n   s1.set({inst: 'synth', cut: [0,1]})\n   s1.p.n\n       .$if(s0.e).set(57).$add.saw(1,16).$.$mul.range(1,2,0,0.25).$$\n       .$else.scales('d-dorian', 16)\n   s1.e.every(1)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 113,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L113"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 47,
							"name": "$and",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 214,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L214"
								}
							],
							"getSignature": {
								"id": 48,
								"name": "$and",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Initialise a new pattern and compare it with the previous chain"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.every(3).$and.every(2)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 214,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L214"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 284,
							"name": "$coin",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 996,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L996"
								}
							],
							"getSignature": {
								"id": 285,
								"name": "$coin",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Alias for "
										},
										{
											"kind": "code",
											"text": "`$sometimes`"
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 996,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L996"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 56,
							"name": "$else",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 258,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L258"
								}
							],
							"getSignature": {
								"id": 57,
								"name": "$else",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Initialise a new pattern and apply if preceding value is false"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.n.every(3).$if.set(48).$else.set(36)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 258,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L258"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 296,
							"name": "$often",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1042,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1042"
								}
							],
							"getSignature": {
								"id": 297,
								"name": "$often",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "75/25 chance of adding another pattern to the stack"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.scales('d-dorian', 16).$often.add(12)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 1042,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1042"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 49,
							"name": "$or",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 224,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L224"
								}
							],
							"getSignature": {
								"id": 50,
								"name": "$or",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Initialise a new pattern and compare it with the previous chain"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.every(3).$or.every(2)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 224,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L224"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 290,
							"name": "$rarely",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1019,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1019"
								}
							],
							"getSignature": {
								"id": 291,
								"name": "$rarely",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "25/75 chance of adding another pattern to the stack"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.scales('d-dorian', 16).$rarely.add(12)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 1019,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1019"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 278,
							"name": "$sometimes",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 981,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L981"
								}
							],
							"getSignature": {
								"id": 279,
								"name": "$sometimes",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "50/50 chance of adding another pattern to the stack. Also, use "
										},
										{
											"kind": "code",
											"text": "`$coin`"
										},
										{
											"kind": "text",
											"text": "."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.scales('d-dorian', 16).$sometimes.add(12)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 981,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L981"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 51,
							"name": "$xor",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 234,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L234"
								}
							],
							"getSignature": {
								"id": 52,
								"name": "$xor",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Initialise a new pattern and compare it with the previous chain"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.every(3).$xor.every(2)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 234,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L234"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 53,
							"name": "$if",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 246,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L246"
								}
							],
							"signatures": [
								{
									"id": 54,
									"name": "$if",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Apply following chain of methods if condition is true\nAlso, accepts an instance of a Pattern"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.n.$if(t%2).set(48).$else.set(36)\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.n.$if(s1.e)).set(48).$else.set(36)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 246,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L246"
										}
									],
									"parameters": [
										{
											"id": 55,
											"name": "condition",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 2,
														"name": "Pattern",
														"package": "zen-3"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 251,
							"name": "abs",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 873,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L873"
								}
							],
							"signatures": [
								{
									"id": 252,
									"name": "abs",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the absolute value of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 873,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L873"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 244,
							"name": "acos",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 845,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L845"
								}
							],
							"signatures": [
								{
									"id": 245,
									"name": "acos",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arccosine of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 845,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L845"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 29,
							"name": "add",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 138,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L138"
								}
							],
							"signatures": [
								{
									"id": 30,
									"name": "add",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Add a value to the previous value in the pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).add(12)\nOr, use $add to create a new pattern and add it to the previous pattern in the chain.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).$add.noise(0,12,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 138,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L138"
										}
									],
									"parameters": [
										{
											"id": 31,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to add"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 242,
							"name": "asin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 836,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L836"
								}
							],
							"signatures": [
								{
									"id": 243,
									"name": "asin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arctangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 836,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L836"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 246,
							"name": "atan",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 854,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L854"
								}
							],
							"signatures": [
								{
									"id": 247,
									"name": "atan",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arctangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 854,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L854"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 248,
							"name": "atan2",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 864,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L864"
								}
							],
							"signatures": [
								{
									"id": 249,
									"name": "atan2",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arctangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 864,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L864"
										}
									],
									"parameters": [
										{
											"id": 250,
											"name": "y",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to divide by"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 137,
							"name": "bin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 533,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L533"
								}
							],
							"signatures": [
								{
									"id": 138,
									"name": "bin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate truthy or falsy values from a binary string."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.bin('1111') // output depends on the number of division per cycle / canvas. If 16, returns 1 every 4 divisions, 0 otherwise\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 533,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L533"
										}
									],
									"parameters": [
										{
											"id": 139,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "binary string"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'10000000'"
										},
										{
											"id": 140,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 141,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 142,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 219,
							"name": "btms",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 758,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L758"
								}
							],
							"signatures": [
								{
									"id": 220,
									"name": "btms",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert the previous value from beats to milliseconds, scaling by bpm"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.dur(1).btms()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 758,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L758"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 217,
							"name": "bts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 748,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L748"
								}
							],
							"signatures": [
								{
									"id": 218,
									"name": "bts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert the previous value from beats to seconds, scaling by bpm"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.dur(1).bts().mul(1000)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 748,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L748"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 253,
							"name": "ceil",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 882,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L882"
								}
							],
							"signatures": [
								{
									"id": 254,
									"name": "ceil",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the ceiling of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 882,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L882"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 232,
							"name": "chords",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 800,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L800"
								}
							],
							"signatures": [
								{
									"id": 233,
									"name": "chords",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Use the previous value in the pattern chain as an index to retrieve a chord from an array of musical chords"
											}
										],
										"blockTags": [
											{
												"tag": "@todo",
												"content": [
													{
														"kind": "text",
														"text": "show link to available chords"
													}
												]
											},
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.chords(['d-min7', 'g-dom7'])\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 800,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L800"
										}
									],
									"parameters": [
										{
											"id": 234,
											"name": "names",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "name of chord or array of chord names. Chords follow root-chord format, e.g. 'd-min7'."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 235,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 159,
							"name": "clamp",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 596,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L596"
								}
							],
							"signatures": [
								{
									"id": 160,
									"name": "clamp",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Clamp the previous value in the pattern chain to a range."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 596,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L596"
										}
									],
									"parameters": [
										{
											"id": 161,
											"name": "min",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "minimum value"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 162,
											"name": "max",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "maximum value"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 280,
							"name": "coin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 988,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L988"
								}
							],
							"signatures": [
								{
									"id": 281,
									"name": "coin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`sometimes`"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 988,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L988"
										}
									],
									"parameters": [
										{
											"id": 282,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 283,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 238,
							"name": "cos",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 818,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L818"
								}
							],
							"signatures": [
								{
									"id": 239,
									"name": "cos",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the cosine of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 818,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L818"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 92,
							"name": "cosine",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 412,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L412"
								}
							],
							"signatures": [
								{
									"id": 93,
									"name": "cosine",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a cosine wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.cosine(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 412,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L412"
										}
									],
									"parameters": [
										{
											"id": 94,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 95,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 96,
											"name": "step",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "step size to round the output. Default is 0, which means no rounding."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 97,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 41,
							"name": "div",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 190,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L190"
								}
							],
							"signatures": [
								{
									"id": 42,
									"name": "div",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Divide the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).div(2)\nOr, use $div to create a new pattern and divide it by the previous pattern in the chain.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).$div.noise(0,12,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 190,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L190"
										}
									],
									"parameters": [
										{
											"id": 43,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to divide by"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 44,
							"name": "divr",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 203,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L203"
								}
							],
							"signatures": [
								{
									"id": 45,
									"name": "divr",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reverse divide the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.noise(1,2).divr(2)\nOr, use $divr to create a new pattern and divide it by the previous pattern in the chain.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,12,1).$divr.noise(60,72,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 203,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L203"
										}
									],
									"parameters": [
										{
											"id": 46,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to divide by"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 69,
							"name": "e",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 321,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L321"
								}
							],
							"signatures": [
								{
									"id": 70,
									"name": "e",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`eval`"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 321,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L321"
										}
									],
									"parameters": [
										{
											"id": 71,
											"name": "pattern",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2,
												"name": "Pattern",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 183,
							"name": "eq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 658,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L658"
								}
							],
							"signatures": [
								{
									"id": 184,
									"name": "eq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is equal to a value using ==."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 658,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L658"
										}
									],
									"parameters": [
										{
											"id": 185,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 186,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 187,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 188,
							"name": "eqq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 670,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L670"
								}
							],
							"signatures": [
								{
									"id": 189,
									"name": "eqq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is equal to a value using ===."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 670,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L670"
										}
									],
									"parameters": [
										{
											"id": 190,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 191,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 192,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 66,
							"name": "eval",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 313,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L313"
								}
							],
							"signatures": [
								{
									"id": 67,
									"name": "eval",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the current value of another pattern, replaces the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.odd()\ns1.e.eval(s0.e).neq(1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 313,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L313"
										}
									],
									"parameters": [
										{
											"id": 68,
											"name": "pattern",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "an instance of another pattern"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2,
												"name": "Pattern",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 209,
							"name": "even",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 726,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L726"
								}
							],
							"signatures": [
								{
									"id": 210,
									"name": "even",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is an even number"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 726,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L726"
										}
									],
									"parameters": [
										{
											"id": 211,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 212,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 132,
							"name": "every",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 519,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L519"
								}
							],
							"signatures": [
								{
									"id": 133,
									"name": "every",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate truthy or falsy values every n divisions."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(4) // return 1 every 4 divisions, 0 otherwise\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.every(2, 60, 72) // return 60 every 2 divisions, 72 otherwise\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 519,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L519"
										}
									],
									"parameters": [
										{
											"id": 134,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of divisions"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 135,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 136,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 259,
							"name": "exp",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 909,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L909"
								}
							],
							"signatures": [
								{
									"id": 260,
									"name": "exp",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the exponential of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 909,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L909"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 255,
							"name": "floor",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 891,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L891"
								}
							],
							"signatures": [
								{
									"id": 256,
									"name": "floor",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the floor of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 891,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L891"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 221,
							"name": "fn",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 769,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L769"
								}
							],
							"signatures": [
								{
									"id": 222,
									"name": "fn",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Provide a callback function to the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.seq([0,1,2,3]).fn(x => x * 2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 769,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L769"
										}
									],
									"parameters": [
										{
											"id": 223,
											"name": "cb",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 224,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "classes/Pattern.ts",
															"line": 769,
															"character": 11,
															"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L769"
														}
													],
													"signatures": [
														{
															"id": 225,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "classes/Pattern.ts",
																	"line": 769,
																	"character": 12,
																	"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L769"
																}
															],
															"parameters": [
																{
																	"id": 226,
																	"name": "x",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "src/lib/zen/types.ts",
																			"qualifiedName": "patternValue"
																		},
																		"name": "patternValue",
																		"package": "zen-3"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/zen/types.ts",
																	"qualifiedName": "patternValue"
																},
																"name": "patternValue",
																"package": "zen-3"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 163,
							"name": "gt",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 609,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L609"
								}
							],
							"signatures": [
								{
									"id": 164,
									"name": "gt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is greater than a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,1).gt(0.3, 60, 72)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 609,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L609"
										}
									],
									"parameters": [
										{
											"id": 165,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 166,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 167,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 173,
							"name": "gte",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 634,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L634"
								}
							],
							"signatures": [
								{
									"id": 174,
									"name": "gte",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is greater than or equal to a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,1).gte(0.3, 60, 72)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 634,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L634"
										}
									],
									"parameters": [
										{
											"id": 175,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 176,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 177,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 213,
							"name": "if",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 737,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L737"
								}
							],
							"signatures": [
								{
									"id": 214,
									"name": "if",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is a truthy or falsy value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 737,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L737"
										}
									],
									"parameters": [
										{
											"id": 215,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 216,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 298,
							"name": "inversion",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1053,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1053"
								}
							],
							"signatures": [
								{
									"id": 299,
									"name": "inversion",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Invert the previous chord in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.chords('d-dorian', 16).i(1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1053,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1053"
										}
									],
									"parameters": [
										{
											"id": 300,
											"name": "i",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "inversion"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 203,
							"name": "invert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 704,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L704"
								}
							],
							"signatures": [
								{
									"id": 204,
									"name": "invert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Invert the previous value in the pattern chain - like a bitwise NOT.\nReturns a 0 if true, and a 1 if false."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 704,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L704"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 261,
							"name": "log",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 918,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L918"
								}
							],
							"signatures": [
								{
									"id": 262,
									"name": "log",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the natural log of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 918,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L918"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 168,
							"name": "lt",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 621,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L621"
								}
							],
							"signatures": [
								{
									"id": 169,
									"name": "lt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is less than a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 621,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L621"
										}
									],
									"parameters": [
										{
											"id": 170,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 171,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 172,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 178,
							"name": "lte",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 646,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L646"
								}
							],
							"signatures": [
								{
									"id": 179,
									"name": "lte",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is less than or equal to a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 646,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L646"
										}
									],
									"parameters": [
										{
											"id": 180,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 181,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 182,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 263,
							"name": "max",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 928,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L928"
								}
							],
							"signatures": [
								{
									"id": 264,
									"name": "max",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the maximum of the previous value in the pattern chain and a given value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 928,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L928"
										}
									],
									"parameters": [
										{
											"id": 265,
											"name": "compare",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to compare to"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 266,
							"name": "min",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 938,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L938"
								}
							],
							"signatures": [
								{
									"id": 267,
									"name": "min",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the minimum of the previous value in the pattern chain and a given value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 938,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L938"
										}
									],
									"parameters": [
										{
											"id": 268,
											"name": "compare",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to compare to"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 153,
							"name": "mod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 575,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L575"
								}
							],
							"signatures": [
								{
									"id": 154,
									"name": "mod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Modulo the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 575,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L575"
										}
									],
									"parameters": [
										{
											"id": 155,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to modulo by"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 38,
							"name": "mul",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 177,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L177"
								}
							],
							"signatures": [
								{
									"id": 39,
									"name": "mul",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Multiply the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).mul(2)\nOr, use $mul to create a new pattern and multiply it by the previous pattern in the chain.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).$mul.noise(0,12,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 177,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L177"
										}
									],
									"parameters": [
										{
											"id": 40,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to multiply by"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 193,
							"name": "neq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 682,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L682"
								}
							],
							"signatures": [
								{
									"id": 194,
									"name": "neq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is not equal to a value using !=."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 682,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L682"
										}
									],
									"parameters": [
										{
											"id": 195,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 196,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 197,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 198,
							"name": "neqq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 694,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L694"
								}
							],
							"signatures": [
								{
									"id": 199,
									"name": "neqq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is not equal to a value using !==."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 694,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L694"
										}
									],
									"parameters": [
										{
											"id": 200,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 201,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 202,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 126,
							"name": "noise",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 503,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L503"
								}
							],
							"signatures": [
								{
									"id": 127,
									"name": "noise",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a number between lo and hi, using a simplex noise function."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.pan.noise(0, 1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 503,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L503"
										}
									],
									"parameters": [
										{
											"id": 128,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 129,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 130,
											"name": "step",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "step size to round the output. Default is 0, which means no rounding."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 131,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 74,
							"name": "not",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 342,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L342"
								}
							],
							"signatures": [
								{
									"id": 75,
									"name": "not",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Negate the value passed as the first argument"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3)\ns1.e.not(s0.e)\ns2.e.not(!(t%3))\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 342,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L342"
										}
									],
									"parameters": [
										{
											"id": 76,
											"name": "x",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a boolean or pattern"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 2,
														"name": "Pattern",
														"package": "zen-3"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 143,
							"name": "ntbin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 552,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L552"
								}
							],
							"signatures": [
								{
									"id": 144,
									"name": "ntbin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert a number to binary string, then passes it to .bin()."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.ntbin(9, 8) // 9 in binary is 1001, padded out to 8 digits. Passes 00001001 to .bin()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 552,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L552"
										}
									],
									"parameters": [
										{
											"id": 145,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a number"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "8"
										},
										{
											"id": 146,
											"name": "q",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the length of the binary string"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "16"
										},
										{
											"id": 147,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 148,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 205,
							"name": "odd",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 715,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L715"
								}
							],
							"signatures": [
								{
									"id": 206,
									"name": "odd",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is an odd number"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 715,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L715"
										}
									],
									"parameters": [
										{
											"id": 207,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 208,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 292,
							"name": "often",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1031,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1031"
								}
							],
							"signatures": [
								{
									"id": 293,
									"name": "often",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "75/25 chance of returning a 1 or 0"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.often()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1031,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1031"
										}
									],
									"parameters": [
										{
											"id": 294,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return if true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 295,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return if false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 269,
							"name": "pow",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 948,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L948"
								}
							],
							"signatures": [
								{
									"id": 270,
									"name": "pow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Multiply the previous value in the pattern chain to the power of a given value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 948,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L948"
										}
									],
									"parameters": [
										{
											"id": 271,
											"name": "exponent",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to multiply by"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 110,
							"name": "pulse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 460,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L460"
								}
							],
							"signatures": [
								{
									"id": 111,
									"name": "pulse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a pulse wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.pulse(0, 10, 0.25)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 460,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L460"
										}
									],
									"parameters": [
										{
											"id": 112,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 113,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 114,
											"name": "width",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "width of the pulse. Default is 0.5, which means a square wave."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.5"
										},
										{
											"id": 115,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 121,
							"name": "random",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 489,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L489"
								}
							],
							"signatures": [
								{
									"id": 122,
									"name": "random",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a random number between lo and hi."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.random(60,72,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 489,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L489"
										}
									],
									"parameters": [
										{
											"id": 123,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 124,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 125,
											"name": "step",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "step size to round the output. Default is 0, which means no rounding."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 80,
							"name": "range",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 379,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L379"
								}
							],
							"signatures": [
								{
									"id": 81,
									"name": "range",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a range of values between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.range(0, 10, 1, 2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 379,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L379"
										}
									],
									"parameters": [
										{
											"id": 82,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 83,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 84,
											"name": "step",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "step size to round the output. Default is 0, which means no rounding."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 85,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 286,
							"name": "rarely",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1008,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1008"
								}
							],
							"signatures": [
								{
									"id": 287,
									"name": "rarely",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "25/75 chance of returning 1 or 0"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.rarely()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1008,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1008"
										}
									],
									"parameters": [
										{
											"id": 288,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return if true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 289,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return if false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 257,
							"name": "round",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 900,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L900"
								}
							],
							"signatures": [
								{
									"id": 258,
									"name": "round",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Round the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 900,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L900"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 98,
							"name": "saw",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 430,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L430"
								}
							],
							"signatures": [
								{
									"id": 99,
									"name": "saw",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a saw wave between lo and hi. Alias of range. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.saw(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 430,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L430"
										}
									],
									"parameters": [
										{
											"id": 100,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 101,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 102,
											"name": "step",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "step size to round the output. Default is 0, which means no rounding."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 103,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 227,
							"name": "scales",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 783,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L783"
								}
							],
							"signatures": [
								{
									"id": 228,
									"name": "scales",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Use the previous value in the pattern chain as an index to retrieve a value from an array of musical scales"
											}
										],
										"blockTags": [
											{
												"tag": "@todo",
												"content": [
													{
														"kind": "text",
														"text": "show link to available scales"
													}
												]
											},
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.scales('c-dorian', 16)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 783,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L783"
										}
									],
									"parameters": [
										{
											"id": 229,
											"name": "names",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "name of scale or array of scale names. Scales follow root-scale format, e.g. 'c-major'."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 230,
											"name": "length",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "length of each scale"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "8"
										},
										{
											"id": 231,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 149,
							"name": "seq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 563,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L563"
								}
							],
							"signatures": [
								{
									"id": 150,
									"name": "seq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Choose from a sequence of values. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.seq([60,72,74,76])\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 563,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L563"
										}
									],
									"parameters": [
										{
											"id": 151,
											"name": "values",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "an array of values"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											"defaultValue": "[]"
										},
										{
											"id": 152,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the sequence, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 58,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 269,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L269"
								}
							],
							"signatures": [
								{
									"id": 59,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set a single value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.set(1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 269,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L269"
										}
									],
									"parameters": [
										{
											"id": 60,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a single string or number or array of strings or numbers"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternValue"
												},
												"name": "patternValue",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 236,
							"name": "sin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 809,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L809"
								}
							],
							"signatures": [
								{
									"id": 237,
									"name": "sin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the sine of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 809,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L809"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 86,
							"name": "sine",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 393,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L393"
								}
							],
							"signatures": [
								{
									"id": 87,
									"name": "sine",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a sine wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.sine(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 393,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L393"
										}
									],
									"parameters": [
										{
											"id": 88,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 89,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 90,
											"name": "step",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "step size to round the output. Default is 0, which means no rounding."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 91,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 274,
							"name": "sometimes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 970,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L970"
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "sometimes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "50/50 chance of returning 1 or 0. Also, use "
											},
											{
												"kind": "code",
												"text": "`coin()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.sometimes()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 970,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L970"
										}
									],
									"parameters": [
										{
											"id": 276,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return if true"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 277,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return if false"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 272,
							"name": "sqrt",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 957,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L957"
								}
							],
							"signatures": [
								{
									"id": 273,
									"name": "sqrt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the square root of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 957,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L957"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 116,
							"name": "square",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 476,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L476"
								}
							],
							"signatures": [
								{
									"id": 117,
									"name": "square",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a square wave between lo and hi. Use as the first call in a pattern chain. See also pulse."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.square(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 476,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L476"
										}
									],
									"parameters": [
										{
											"id": 118,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 119,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 120,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 156,
							"name": "step",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 585,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L585"
								}
							],
							"signatures": [
								{
									"id": 157,
									"name": "step",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Round the previous value in the pattern chain to the step value.\\"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 585,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L585"
										}
									],
									"parameters": [
										{
											"id": 158,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to round to"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 32,
							"name": "sub",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 151,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L151"
								}
							],
							"signatures": [
								{
									"id": 33,
									"name": "sub",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Subtract a value from the previous value in the pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).sub(12)\nOr, use $sub to create a new pattern and subtract it from the previous pattern in the chain.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).$sub.noise(0,12,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 151,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L151"
										}
									],
									"parameters": [
										{
											"id": 34,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to subtract"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 35,
							"name": "subr",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 164,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L164"
								}
							],
							"signatures": [
								{
									"id": 36,
									"name": "subr",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reverse subtract a value from the previous value in the pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.noise(0.5,0.25).subr(1)\nOr, use $subr to create a new pattern and subtract it from the previous pattern in the chain.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,12,1).$subr.noise(60,72,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 164,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L164"
										}
									],
									"parameters": [
										{
											"id": 37,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to subtract"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 240,
							"name": "tan",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 827,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L827"
								}
							],
							"signatures": [
								{
									"id": 241,
									"name": "tan",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the tangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 827,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L827"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 77,
							"name": "toggle",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 361,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L361"
								}
							],
							"signatures": [
								{
									"id": 78,
									"name": "toggle",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Toggle on or off using the value passed as the first argument\nA true value will toggle the pattern on, a false value will toggle it off\nAccepts a boolean or pattern as the first argument"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3)\ns1.e.toggle(s0.e)\ns2.e.toggle(!(t%3))\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 361,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L361"
										}
									],
									"parameters": [
										{
											"id": 79,
											"name": "x",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a boolean or pattern"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 2,
														"name": "Pattern",
														"package": "zen-3"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 104,
							"name": "tri",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 443,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L443"
								}
							],
							"signatures": [
								{
									"id": 105,
									"name": "tri",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a triangle wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.harm.tri(0, 4, 0.25)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 443,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L443"
										}
									],
									"parameters": [
										{
											"id": 106,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 107,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 108,
											"name": "step",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "step size to round the output. Default is 0, which means no rounding."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 109,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 63,
							"name": "use",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 300,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L300"
								}
							],
							"signatures": [
								{
									"id": 64,
									"name": "use",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Inset another pattern's stack into the current pattern's stack"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.sine()\ns1.p.pan.use(s0.p.amp);\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 300,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L300"
										}
									],
									"parameters": [
										{
											"id": 65,
											"name": "pattern",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "an instance of another pattern"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2,
												"name": "Pattern",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"children": [
								19,
								21,
								47,
								284,
								56,
								296,
								49,
								290,
								278,
								51
							]
						},
						{
							"title": "Methods",
							"children": [
								53,
								251,
								244,
								29,
								242,
								246,
								248,
								137,
								219,
								217,
								253,
								232,
								159,
								280,
								238,
								92,
								41,
								44,
								69,
								183,
								188,
								66,
								209,
								132,
								259,
								255,
								221,
								163,
								173,
								213,
								298,
								203,
								261,
								168,
								178,
								263,
								266,
								153,
								38,
								193,
								198,
								126,
								74,
								143,
								205,
								292,
								269,
								110,
								121,
								80,
								286,
								257,
								98,
								227,
								149,
								58,
								236,
								86,
								274,
								272,
								116,
								156,
								32,
								35,
								240,
								77,
								104,
								63
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Pattern.ts",
							"line": 23,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L23"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Pattern.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Pattern.ts#L1"
				}
			]
		},
		{
			"id": 406,
			"name": "Stream",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 407,
					"name": "Stream",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A stream is a collection of patterns that can be mapped across time and space. A stream's position can be moved around time and space. When a stream triggers an event, musical parameters are determined by the stream's position in time and space. Similarly, when a stream mutates an event, all active events are mutated based on the stream's position in time and space.\n\nStreams are available within your code as "
							},
							{
								"kind": "code",
								"text": "`s0`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s1`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s2`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s3`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s4`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s5`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s6`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s7`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ns0.set({inst: 'synth', n: 60}) // set the stream's default parameters\ns0.p.lag.set(1).btms()\ns0.px._modi.saw(1,10) // map the synth's modulation index across the x axis\ns0.py._harm.range(0,10,1) // map the synth's harmonic series across the y axis\ns0.x.range(0,16,1) // move the stream across the x axis of the canvas\ns0.y.noise(0,16,1,0.5) // move the stream across the y axis of the canvas\ns0.e.every(4) // trigger a middle C every 4 divisions\ns0.m.eval(s0.e).neq(1)\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 425,
							"name": "e",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for determining whether the stream should trigger an event"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.e.set(1) // trigger an event every division\ns0.e.every(4) // trigger an event every 4 divisions\ns0.e.bin('1000 1001') // use a binary pattern to trigger events\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 107,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L107"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 426,
							"name": "m",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for determining whether to mutate all active events in the stream. Only mutates parameters prefixed with "
									},
									{
										"kind": "code",
										"text": "`_`"
									},
									{
										"kind": "text",
										"text": ", e.g. "
									},
									{
										"kind": "code",
										"text": "`_amp`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.m.set(1) // mutate all active events every division\ns0.m.every(4) // mutate all active events every 4 divisions\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 115,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L115"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 429,
							"name": "map",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to map parameter names to different keys. Useful for mapping to MIDI controllers"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.map = {amp: 'cc1', cutoff: 'cc74'}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 138,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L138"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 430,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 138,
											"character": 10,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L138"
										}
									]
								}
							},
							"defaultValue": "{}"
						},
						{
							"id": 427,
							"name": "mute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for determining whether to mute the stream"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.mute.set(1) // mute the stream every division\ns0.mute.every(4) // mute the stream every 4 divisions\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 123,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L123"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 416,
							"name": "p",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across time"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.p.amp.range(0,1) // ramp amp from 0 to 1 across the cycle\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 42,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L42"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							}
						},
						{
							"id": 417,
							"name": "px",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the x axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.px.amp.range(0,1) // ramp amp from 0 to 1 across the x axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 49,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L49"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							}
						},
						{
							"id": 418,
							"name": "py",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the y axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.py.amp.range(0,1) // ramp amp from 0 to 1 across the y axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 56,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							}
						},
						{
							"id": 419,
							"name": "pz",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the z axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.pz.amp.range(0,1) // ramp amp from 0 to 1 across the z axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 63,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L63"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							}
						},
						{
							"id": 428,
							"name": "solo",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for determining whether to solo the stream. If true, mutes all other streams"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.solo.set(1) // solo the stream every division\ns0.solo.every(4) // solo the stream every 4 divisions\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 131,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L131"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 420,
							"name": "t",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting the stream's position in time"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.t.sine(0,16,1) // override the global t with a sine wave between 0 and 16\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 70,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L70"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 421,
							"name": "x",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting the stream's position in space"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.x.saw(0,16,1) // move the stream across the x axis of the canvas with a saw wave between 0 and 16\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 77,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L77"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 424,
							"name": "xyz",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting all axes of the stream's position at the same time. Expects an array of values"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.xyz.set([t,8,0])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 98,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L98"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 422,
							"name": "y",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting the stream's position in space"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.y.saw(0,16,1) // move the stream across the y axis of the canvas with a saw wave between 0 and 16\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 84,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L84"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 423,
							"name": "z",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting the stream's position in space"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.z.saw(0,16,1) // move the stream across the z axis of the canvas with a saw wave between 0 and 16\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 91,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L91"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 440,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 179,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L179"
								}
							],
							"signatures": [
								{
									"id": 441,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set multiple stream parameter using key/value pairs"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 179,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L179"
										}
									],
									"parameters": [
										{
											"id": 442,
											"name": "ps",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "key/value pairs"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "Dictionary"
												},
												"name": "Dictionary",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								425,
								426,
								429,
								427,
								416,
								417,
								418,
								419,
								428,
								420,
								421,
								424,
								422,
								423
							]
						},
						{
							"title": "Methods",
							"children": [
								440
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Stream.ts",
							"line": 21,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L21"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 319,
							"name": "Zen"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						407
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Stream.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L1"
				}
			]
		},
		{
			"id": 318,
			"name": "Zen",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 319,
					"name": "Zen",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Zen class allows you to set global parameters. It is available within your code as "
							},
							{
								"kind": "code",
								"text": "`z`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nz.t.range(0, 16, 1) // pattern time\nz.bpm.range(60, 120, 1) // pattern bpm\nz.s = 16 // size of canvas\nz.q = 16 // frames per cycle\nz.update = 1 // when to update the executed code, 1 is on the next division, q is on the next cycle etc.\nz.set({reverb: 1, rsize: 0.5}) // set global parameters for all streams. Can be overwritten by stream parameters\nz.p.n.scales('d-dorian', 16) // set global time parameters using z.p\nz.px._modi.range(0, 1, 0.25) // set global stream parameters using z.px\netc.\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 323,
							"name": "bpm",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting the global bpm"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nz.bpm.saw(60,120,0.5) // set the global bpm with a saw wave between 60 and 120, over 2 cycles\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 36,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L36"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "..."
						},
						{
							"id": 359,
							"name": "e",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for determining whether the stream should trigger an event"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.e.set(1) // trigger an event every division\ns0.e.every(4) // trigger an event every 4 divisions\ns0.e.bin('1000 1001') // use a binary pattern to trigger events\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 107,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L107"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 425,
								"name": "Stream.e"
							}
						},
						{
							"id": 360,
							"name": "m",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for determining whether to mutate all active events in the stream. Only mutates parameters prefixed with "
									},
									{
										"kind": "code",
										"text": "`_`"
									},
									{
										"kind": "text",
										"text": ", e.g. "
									},
									{
										"kind": "code",
										"text": "`_amp`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.m.set(1) // mutate all active events every division\ns0.m.every(4) // mutate all active events every 4 divisions\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 115,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L115"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 426,
								"name": "Stream.m"
							}
						},
						{
							"id": 363,
							"name": "map",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to map parameter names to different keys. Useful for mapping to MIDI controllers"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.map = {amp: 'cc1', cutoff: 'cc74'}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 138,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L138"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 364,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 138,
											"character": 10,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L138"
										}
									]
								}
							},
							"defaultValue": "{}",
							"inheritedFrom": {
								"type": "reference",
								"target": 429,
								"name": "Stream.map"
							}
						},
						{
							"id": 361,
							"name": "mute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for determining whether to mute the stream"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.mute.set(1) // mute the stream every division\ns0.mute.every(4) // mute the stream every 4 divisions\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 123,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L123"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 427,
								"name": "Stream.mute"
							}
						},
						{
							"id": 351,
							"name": "p",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across time"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.p.amp.range(0,1) // ramp amp from 0 to 1 across the cycle\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 42,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L42"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 416,
								"name": "Stream.p"
							}
						},
						{
							"id": 352,
							"name": "px",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the x axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.px.amp.range(0,1) // ramp amp from 0 to 1 across the x axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 49,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L49"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 417,
								"name": "Stream.px"
							}
						},
						{
							"id": 353,
							"name": "py",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the y axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.py.amp.range(0,1) // ramp amp from 0 to 1 across the y axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 56,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 418,
								"name": "Stream.py"
							}
						},
						{
							"id": 354,
							"name": "pz",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the z axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.pz.amp.range(0,1) // ramp amp from 0 to 1 across the z axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 63,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L63"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 419,
								"name": "Stream.pz"
							}
						},
						{
							"id": 362,
							"name": "solo",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for determining whether to solo the stream. If true, mutes all other streams"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.solo.set(1) // solo the stream every division\ns0.solo.every(4) // solo the stream every 4 divisions\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 131,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L131"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 428,
								"name": "Stream.solo"
							}
						},
						{
							"id": 322,
							"name": "t",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting the global time. The outcome of the pattern updates the variable "
									},
									{
										"kind": "code",
										"text": "`t`"
									},
									{
										"kind": "text",
										"text": " within your code."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nz.t.sine(0,16,1) // set the global t with a sine wave between 0 and 16\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 29,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"target": 420,
								"name": "Stream.t"
							}
						},
						{
							"id": 355,
							"name": "x",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting the stream's position in space"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.x.saw(0,16,1) // move the stream across the x axis of the canvas with a saw wave between 0 and 16\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 77,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L77"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 421,
								"name": "Stream.x"
							}
						},
						{
							"id": 358,
							"name": "xyz",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting all axes of the stream's position at the same time. Expects an array of values"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.xyz.set([t,8,0])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 98,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L98"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 424,
								"name": "Stream.xyz"
							}
						},
						{
							"id": 356,
							"name": "y",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting the stream's position in space"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.y.saw(0,16,1) // move the stream across the y axis of the canvas with a saw wave between 0 and 16\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 84,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L84"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 422,
								"name": "Stream.y"
							}
						},
						{
							"id": 357,
							"name": "z",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Pattern for setting the stream's position in space"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.z.saw(0,16,1) // move the stream across the z axis of the canvas with a saw wave between 0 and 16\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 91,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L91"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"name": "Pattern",
								"package": "zen-3"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 423,
								"name": "Stream.z"
							}
						},
						{
							"id": 333,
							"name": "c",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 75,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L75"
								}
							],
							"getSignature": {
								"id": 334,
								"name": "c",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Get the current cycle. This is available within your code as "
										},
										{
											"kind": "code",
											"text": "`c`"
										},
										{
											"kind": "text",
											"text": "."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.every(c%2 ? 1 : 4) // every 1 frame on odd cycles, every 4 frames on even cycles\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 75,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L75"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 329,
							"name": "q",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 66,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L66"
								}
							],
							"setSignature": {
								"id": 331,
								"name": "q",
								"variant": "signature",
								"kind": 1048576,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set the number of divisions per cycle. Changing this value updates the variable "
										},
										{
											"kind": "code",
											"text": "`q`"
										},
										{
											"kind": "text",
											"text": " within your code."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.q = 16 // set the number of divisions per cycle to 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 66,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L66"
									}
								],
								"parameters": [
									{
										"id": 332,
										"name": "value",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						},
						{
							"id": 325,
							"name": "s",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 52,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L52"
								}
							],
							"setSignature": {
								"id": 327,
								"name": "s",
								"variant": "signature",
								"kind": 1048576,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set the size of the canvas. Changing this value updates the variable "
										},
										{
											"kind": "code",
											"text": "`s`"
										},
										{
											"kind": "text",
											"text": " within your code."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.s = 16 // set the size of the canvas to 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 52,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L52"
									}
								],
								"parameters": [
									{
										"id": 328,
										"name": "value",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						},
						{
							"id": 335,
							"name": "update",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 93,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L93"
								}
							],
							"setSignature": {
								"id": 337,
								"name": "update",
								"variant": "signature",
								"kind": 1048576,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set when to update the executed code"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.update = 1 // update on every frame\nz.update = 4 // update on every 4th frame\nz.update = q // update on the next cycle\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 93,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L93"
									}
								],
								"parameters": [
									{
										"id": 338,
										"name": "value",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						},
						{
							"id": 374,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 179,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L179"
								}
							],
							"signatures": [
								{
									"id": 375,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set multiple stream parameter using key/value pairs"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 179,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Stream.ts#L179"
										}
									],
									"parameters": [
										{
											"id": 376,
											"name": "ps",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "key/value pairs"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "Dictionary"
												},
												"name": "Dictionary",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 441,
										"name": "Stream.set"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 440,
								"name": "Stream.set"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								323,
								359,
								360,
								363,
								361,
								351,
								352,
								353,
								354,
								362,
								322,
								355,
								358,
								356,
								357
							]
						},
						{
							"title": "Accessors",
							"children": [
								333,
								329,
								325,
								335
							]
						},
						{
							"title": "Methods",
							"children": [
								374
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Zen.ts",
							"line": 18,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L18"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 407,
							"name": "Stream",
							"package": "zen-3"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						319
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Zen.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/e6e3916/src/lib/zen/classes/Zen.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				406,
				318
			]
		}
	],
	"packageName": "zen-3",
	"readme": [
		{
			"kind": "text",
			"text": "# ZEN3\nZen is a Javascript library for expressing complex patterns with very little code. It was written to take advantage of JS's flexibility and is primed for pattern interference. Zen allows you to map musical parameters across time and 3D space. Plot multiple trajectories around the canvas and trigger sonic events and modulations whose parameters are determined by the stream's current position in time and space.\n\nZen is designed to be used as a live coding tool and is available for experimentation at TODO. It can also be integrated into other projects requiring pattern generation. See section TODO for further guidance.\n## Basics\nZen provides you with 4 const variables, 8 streams, and a global settings interface:\n### Variables\n* t: an incrementing integer representing time\n* q: integer, number of divisions per cycle\n* c: integer, current cycle. ie. floor(t / q)\n* s: integer, size of canvas\n\n### Streams\n8 instances of the "
		},
		{
			"kind": "code",
			"text": "`Stream`"
		},
		{
			"kind": "text",
			"text": " class (see below), assigned to the variables "
		},
		{
			"kind": "code",
			"text": "`s0`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s1`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s2`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s3`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s4`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s5`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s6`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s7`"
		},
		{
			"kind": "text",
			"text": ". Used to map musical parameters across each cycle or the canvas, and determine the stream's trajectory across time and space.\n### Zen\nAn instance of the "
		},
		{
			"kind": "code",
			"text": "`Zen`"
		},
		{
			"kind": "text",
			"text": " class (see below), assigned to the variable "
		},
		{
			"kind": "code",
			"text": "`z`"
		},
		{
			"kind": "text",
			"text": ". It is used to update the global "
		},
		{
			"kind": "code",
			"text": "`q`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`s`"
		},
		{
			"kind": "text",
			"text": " values. You are also able to pattern "
		},
		{
			"kind": "code",
			"text": "`z.t`"
		},
		{
			"kind": "text",
			"text": " to override the global time and "
		},
		{
			"kind": "code",
			"text": "`z.bpm`"
		},
		{
			"kind": "text",
			"text": " to control tempo.\n## Syntax\n### Pattern\nPatterns are at the heart of Zen, allowing you to create complex patterns of number values. You don't usually instantiate the "
		},
		{
			"kind": "code",
			"text": "`Pattern`"
		},
		{
			"kind": "text",
			"text": " class, or call the "
		},
		{
			"kind": "code",
			"text": "`get()`"
		},
		{
			"kind": "text",
			"text": " method, directly; they are properties of a "
		},
		{
			"kind": "code",
			"text": "`Stream`"
		},
		{
			"kind": "text",
			"text": " or "
		},
		{
			"kind": "code",
			"text": "`Zen`"
		},
		{
			"kind": "text",
			"text": " (see below) and values are obtained under the hood. However, to illustrate how patterns work:\n"
		},
		{
			"kind": "code",
			"text": "```js\nconst p = new Pattern()\n// create a range of values from 0 to 4 and query the value at t\np.range(0,4).get(t, q) // args are time and divisions\n// create a sine function from 0 to 10. Query the value at t\np.sine(0,10).get(t, q)\n// chain methods together\np.tri(0,256,1).add(4).div(0.5).pow(2).clamp(0, 1024)\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### Snap\nSnap a sample to the number of divisions.\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.px.snap.set(s)\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### Dur, Lag, ADSR\nAll of these values should be given in milliseconds. If you wish to quantize these values to the project tempo use "
		},
		{
			"kind": "code",
			"text": "`.btms()`"
		},
		{
			"kind": "text",
			"text": " - beats to milliseconds.\n"
		},
		{
			"kind": "code",
			"text": "```js\nz.bpm.set(139)\ns0.p.dur.set(1).btms() // plays for 1 beat, regardless of the bpm\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Stream\n#### Time and Space\nTODO: s0.x, s0.t\n#### Parameters\nMusical parameters can be mapped in different ways across a cycle, or across each axis of the canvas, using methods "
		},
		{
			"kind": "code",
			"text": "`.p(key: string)`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`.px(key: string)`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`.py(key: string)`"
		},
		{
			"kind": "text",
			"text": ", and "
		},
		{
			"kind": "code",
			"text": "`.pz(key: string)`"
		},
		{
			"kind": "text",
			"text": ". Each method returns an instance of the "
		},
		{
			"kind": "code",
			"text": "`Pattern`"
		},
		{
			"kind": "text",
			"text": " class which enables you to map values in a variety of ways. E.g.\n"
		},
		{
			"kind": "code",
			"text": "```js\n// map parameter across a cycle using a range function\ns0.p.foo.range(0,2)\n// map parameter across the x axis using a sine function\ns0.px.bar.sine(0,2)\n// set a constant value\ns0.p.foo.set(8)\n// chain methods together for greater complexity\ns0.pz.bar.saw(0,16).mul(2)\n```"
		},
		{
			"kind": "text",
			"text": "\nOn each division of a cycle, each pattern is evaluated to create a list of parameters key / value pairs. Each method passes its value to the next in the chain, with the first value being the current time "
		},
		{
			"kind": "code",
			"text": "`t`"
		},
		{
			"kind": "text",
			"text": ". This allows you manipulate time or space using arithmetic.\n"
		},
		{
			"kind": "code",
			"text": "```js\n// offset foo by half a cycle\ns0.p.foo.add(0.5).range(0,256)\n// move across the x axis at twice the speed\ns0.x.set(t)\ns0.x.mul(2).range(0,s)\n```"
		},
		{
			"kind": "text",
			"text": "\n\nYou can reference other streams' parameters:\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.p.foo.tri(16,24,1).add(32)\ns1.p.bar.use(s0.p('foo')).mod(6)\n```"
		},
		{
			"kind": "text",
			"text": "\n\nOr simply get their value:\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.p.foo.tri(16,24,1).add(32)\ns1.p.bar.set(s0.p('foo').get(t/q))\n```"
		},
		{
			"kind": "text",
			"text": "\n#### Events and Mutations\nUse a stream's "
		},
		{
			"kind": "code",
			"text": "`e`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`m`"
		},
		{
			"kind": "text",
			"text": " properties to trigger musical events - discrete synth voices - or mutations - the modulation of all voices in a stream. Each property is, once again, an instance of the "
		},
		{
			"kind": "code",
			"text": "`Pattern`"
		},
		{
			"kind": "text",
			"text": " class, but evaluates the result as a boolean type, rather than a number. True triggers an event or mutation, false is ignored. JavaScript is able to infer boolean values from non-boolean types. As "
		},
		{
			"kind": "code",
			"text": "`0`"
		},
		{
			"kind": "text",
			"text": " is false and any value greater than "
		},
		{
			"kind": "code",
			"text": "`0`"
		},
		{
			"kind": "text",
			"text": " is true, we are able to pattern numbers in order to trigger our events.\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n// trigger an event every division\ns0.e.set(1)\n// trigger an event every other division\ns0.e.set(t%2)\n// or...\ns0.e.set(t).odd()\n// use every to get regular rhythms\ns0.e.every(1) // every cycle\ns0.e.every(4) // every 4 cycles\ns0.e.every(0.5) // twice per cycle - if q is regular\n// various logic available to output 1s or 0s\ns0.e.sine(0,1).gt(0.75) // greater than\ns0.e.random(0,1,0.25).eq(0.75) // equal to\n// convert numbers to binary patterns\ns0.e.ntbin(76543, 16)\n// or binary strings to binary patterns\ns0.e.bin('01100101001010')\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### Key Mapping\nYou can map alternative key names using the "
		},
		{
			"kind": "code",
			"text": "`.map`"
		},
		{
			"kind": "text",
			"text": " property of a stream, which accepts an object. For example, to use more descriptive keys when sending midi messages, whilst still compiling parameters to use a "
		},
		{
			"kind": "code",
			"text": "`cc1`"
		},
		{
			"kind": "text",
			"text": " format:\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.map={cutoff: 'cc74'}\n```"
		},
		{
			"kind": "text",
			"text": "\nYou may extend Zen by adding your own mappings in TBC. There is one map available:\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.map=keymap.nordlead1a\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### Solo | Mute\nYou can solo and mute streams. Solo and mute properties are also Patterns.\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.solo.set(1)\ns0.solo.every(1)\n\ns0.mute.set(1)\n```"
		}
	],
	"symbolIdMap": {
		"1": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern"
		},
		"19": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$"
		},
		"20": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$"
		},
		"21": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$$"
		},
		"22": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$$"
		},
		"29": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.add"
		},
		"30": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.add"
		},
		"31": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"32": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sub"
		},
		"33": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sub"
		},
		"34": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"35": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.subr"
		},
		"36": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.subr"
		},
		"37": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"38": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mul"
		},
		"39": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mul"
		},
		"40": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"41": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.div"
		},
		"42": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.div"
		},
		"43": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"44": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.divr"
		},
		"45": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.divr"
		},
		"46": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"47": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$and"
		},
		"48": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$and"
		},
		"49": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$or"
		},
		"50": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$or"
		},
		"51": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$xor"
		},
		"52": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$xor"
		},
		"53": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$if"
		},
		"54": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$if"
		},
		"55": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "condition"
		},
		"56": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$else"
		},
		"57": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$else"
		},
		"58": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.set"
		},
		"59": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.set"
		},
		"60": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"63": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.use"
		},
		"64": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.use"
		},
		"65": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "pattern"
		},
		"66": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eval"
		},
		"67": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eval"
		},
		"68": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "pattern"
		},
		"69": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.e"
		},
		"70": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.e"
		},
		"71": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "pattern"
		},
		"74": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.not"
		},
		"75": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.not"
		},
		"76": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"77": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.toggle"
		},
		"78": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.toggle"
		},
		"79": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"80": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.range"
		},
		"81": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.range"
		},
		"82": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"83": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"84": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "step"
		},
		"85": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"86": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sine"
		},
		"87": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sine"
		},
		"88": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"89": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"90": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "step"
		},
		"91": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"92": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cosine"
		},
		"93": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cosine"
		},
		"94": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"95": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"96": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "step"
		},
		"97": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"98": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.saw"
		},
		"99": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.saw"
		},
		"100": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"101": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"102": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "step"
		},
		"103": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"104": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tri"
		},
		"105": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tri"
		},
		"106": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"107": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"108": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "step"
		},
		"109": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"110": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pulse"
		},
		"111": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pulse"
		},
		"112": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"113": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"114": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "width"
		},
		"115": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"116": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.square"
		},
		"117": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.square"
		},
		"118": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"119": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"120": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"121": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.random"
		},
		"122": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.random"
		},
		"123": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"124": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"125": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "step"
		},
		"126": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.noise"
		},
		"127": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.noise"
		},
		"128": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"129": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"130": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "step"
		},
		"131": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"132": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.every"
		},
		"133": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.every"
		},
		"134": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"135": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"136": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"137": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bin"
		},
		"138": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bin"
		},
		"139": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"140": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"141": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"142": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"143": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ntbin"
		},
		"144": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ntbin"
		},
		"145": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"146": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "q"
		},
		"147": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"148": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"149": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.seq"
		},
		"150": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.seq"
		},
		"151": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "values"
		},
		"152": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"153": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mod"
		},
		"154": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mod"
		},
		"155": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"156": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.step"
		},
		"157": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.step"
		},
		"158": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"159": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.clamp"
		},
		"160": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.clamp"
		},
		"161": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "min"
		},
		"162": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "max"
		},
		"163": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gt"
		},
		"164": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gt"
		},
		"165": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"166": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"167": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"168": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lt"
		},
		"169": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lt"
		},
		"170": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"171": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"172": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"173": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gte"
		},
		"174": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gte"
		},
		"175": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"176": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"177": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"178": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lte"
		},
		"179": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lte"
		},
		"180": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"181": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"182": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"183": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eq"
		},
		"184": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eq"
		},
		"185": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"186": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"187": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"188": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eqq"
		},
		"189": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eqq"
		},
		"190": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"191": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"192": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"193": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.neq"
		},
		"194": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.neq"
		},
		"195": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"196": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"197": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"198": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.neqq"
		},
		"199": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.neqq"
		},
		"200": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"201": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"202": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"203": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.invert"
		},
		"204": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.invert"
		},
		"205": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.odd"
		},
		"206": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.odd"
		},
		"207": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"208": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"209": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.even"
		},
		"210": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.even"
		},
		"211": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"212": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"213": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.if"
		},
		"214": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.if"
		},
		"215": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"216": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"217": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bts"
		},
		"218": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bts"
		},
		"219": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.btms"
		},
		"220": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.btms"
		},
		"221": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.fn"
		},
		"222": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.fn"
		},
		"223": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "cb"
		},
		"224": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"225": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"226": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"227": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.scales"
		},
		"228": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.scales"
		},
		"229": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "names"
		},
		"230": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "length"
		},
		"231": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"232": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.chords"
		},
		"233": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.chords"
		},
		"234": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "names"
		},
		"235": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"236": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sin"
		},
		"237": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sin"
		},
		"238": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cos"
		},
		"239": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cos"
		},
		"240": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tan"
		},
		"241": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tan"
		},
		"242": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.asin"
		},
		"243": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.asin"
		},
		"244": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.acos"
		},
		"245": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.acos"
		},
		"246": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan"
		},
		"247": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan"
		},
		"248": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan2"
		},
		"249": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan2"
		},
		"250": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "y"
		},
		"251": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.abs"
		},
		"252": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.abs"
		},
		"253": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ceil"
		},
		"254": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ceil"
		},
		"255": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.floor"
		},
		"256": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.floor"
		},
		"257": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.round"
		},
		"258": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.round"
		},
		"259": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.exp"
		},
		"260": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.exp"
		},
		"261": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.log"
		},
		"262": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.log"
		},
		"263": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.max"
		},
		"264": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.max"
		},
		"265": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "compare"
		},
		"266": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.min"
		},
		"267": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.min"
		},
		"268": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "compare"
		},
		"269": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pow"
		},
		"270": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pow"
		},
		"271": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "exponent"
		},
		"272": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sqrt"
		},
		"273": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sqrt"
		},
		"274": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sometimes"
		},
		"275": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sometimes"
		},
		"276": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"277": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"278": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$sometimes"
		},
		"279": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$sometimes"
		},
		"280": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.coin"
		},
		"281": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.coin"
		},
		"282": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"283": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"284": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$coin"
		},
		"285": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$coin"
		},
		"286": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.rarely"
		},
		"287": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.rarely"
		},
		"288": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"289": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"290": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$rarely"
		},
		"291": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$rarely"
		},
		"292": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.often"
		},
		"293": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.often"
		},
		"294": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"295": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"296": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$often"
		},
		"297": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$often"
		},
		"298": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.inversion"
		},
		"299": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.inversion"
		},
		"300": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "i"
		},
		"318": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": ""
		},
		"319": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen"
		},
		"322": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.t"
		},
		"323": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.bpm"
		},
		"325": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.s"
		},
		"327": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.s"
		},
		"328": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "value"
		},
		"329": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.q"
		},
		"331": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.q"
		},
		"332": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "value"
		},
		"333": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.c"
		},
		"334": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.c"
		},
		"335": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.update"
		},
		"337": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.update"
		},
		"338": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "value"
		},
		"351": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.p"
		},
		"352": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.px"
		},
		"353": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.py"
		},
		"354": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.pz"
		},
		"355": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"356": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"357": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"358": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"359": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"360": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"361": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"362": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"363": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.map"
		},
		"364": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object"
		},
		"374": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"375": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"376": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		},
		"406": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": ""
		},
		"407": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream"
		},
		"416": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.p"
		},
		"417": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.px"
		},
		"418": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.py"
		},
		"419": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.pz"
		},
		"420": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.t"
		},
		"421": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"422": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"423": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"424": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"425": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"426": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"427": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"428": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"429": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.map"
		},
		"430": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object"
		},
		"440": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"441": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"442": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		}
	}
}