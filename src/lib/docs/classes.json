{
	"id": 0,
	"name": "zen-3",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "Pattern",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "Pattern",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Patterns are the building blocks of Zen. They are used to generate patterns of values in interesting, concise ways. \nPattern methods can be chained together.\nPattern methods can be prefixed with a $ to create a new pattern; for example, $add. The results of each pattern are combined together."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ns0.p.amp.range(0,1)\ns0.px.drive.sine(0,1)\ns0.py.modi.range(0,10).mul((t%q)/q)\ns0.e.every(3).$and.every(4)\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 15,
							"name": "aliases",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shorthand aliases for pattern methods."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\na: 'add',\nan: 'and',\nb: 'bin',\nbm: 'btms',\nbs: 'bts',\ncl: 'clamp',\nc: 'coin',\nco: 'cosine',\ncu: 'curve',\nd: 'div',\ndr: 'divr',\ne: 'else',\neq: 'eq',\nev: 'every',\ni: 'if',\nintrp: 'interpolate',\ninv: 'inversion',\nin: 'invert',\nla: 'layer',\nmo: 'mod',\nm: 'mul',\nn: 'not',\nno: 'noise',\nnb: 'ntbin',\no: 'or',\nof: 'often',\npu: 'pulse',\nrd: 'random',\nra: 'range',\nr: 'rarely',\nsa: 'saw',\nse: 'seq',\nv: 'set',\nsi: 'sine',\nsq: 'square',\nst: 'step',\nso: 'sometimes',\ns: 'sub',\nsr: 'subr',\nt: 'toggle',\ntr: 'tri',\ntrig: 'trigger',\ntu: 'tune',\nu: 'use',\nx: 'xor'\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 117,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L117"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 17,
											"name": "a",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 118,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L118"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'add'"
										},
										{
											"id": 18,
											"name": "an",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 119,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L119"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'and'"
										},
										{
											"id": 19,
											"name": "b",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 120,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L120"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'bin'"
										},
										{
											"id": 20,
											"name": "bm",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 121,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L121"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'btms'"
										},
										{
											"id": 21,
											"name": "bs",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 122,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L122"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'bts'"
										},
										{
											"id": 23,
											"name": "c",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 124,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L124"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'coin'"
										},
										{
											"id": 22,
											"name": "cl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 123,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L123"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'clamp'"
										},
										{
											"id": 24,
											"name": "co",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 125,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L125"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'cosine'"
										},
										{
											"id": 25,
											"name": "cu",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 126,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L126"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'curve'"
										},
										{
											"id": 26,
											"name": "d",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 127,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L127"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'div'"
										},
										{
											"id": 27,
											"name": "dr",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 128,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L128"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'divr'"
										},
										{
											"id": 28,
											"name": "e",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 129,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L129"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'else'"
										},
										{
											"id": 29,
											"name": "eq",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 130,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L130"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'eq'"
										},
										{
											"id": 30,
											"name": "ev",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 131,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L131"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'every'"
										},
										{
											"id": 31,
											"name": "i",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 132,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L132"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'if'"
										},
										{
											"id": 34,
											"name": "in",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 135,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L135"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'invert'"
										},
										{
											"id": 32,
											"name": "intrp",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 133,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L133"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'interpolate'"
										},
										{
											"id": 33,
											"name": "inv",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 134,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L134"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'inversion'"
										},
										{
											"id": 35,
											"name": "la",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 136,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L136"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'layer'"
										},
										{
											"id": 37,
											"name": "m",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 138,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L138"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'mul'"
										},
										{
											"id": 36,
											"name": "mo",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 137,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L137"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'mod'"
										},
										{
											"id": 38,
											"name": "n",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 139,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L139"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'not'"
										},
										{
											"id": 40,
											"name": "nb",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 141,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L141"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'ntbin'"
										},
										{
											"id": 39,
											"name": "no",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 140,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L140"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'noise'"
										},
										{
											"id": 41,
											"name": "o",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 142,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L142"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'or'"
										},
										{
											"id": 42,
											"name": "of",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 143,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L143"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'often'"
										},
										{
											"id": 43,
											"name": "pu",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 144,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L144"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'pulse'"
										},
										{
											"id": 46,
											"name": "r",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 147,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L147"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'rarely'"
										},
										{
											"id": 45,
											"name": "ra",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 146,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L146"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'range'"
										},
										{
											"id": 44,
											"name": "rd",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 145,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L145"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'random'"
										},
										{
											"id": 54,
											"name": "s",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 155,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L155"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'sub'"
										},
										{
											"id": 47,
											"name": "sa",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 148,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L148"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'saw'"
										},
										{
											"id": 48,
											"name": "se",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 149,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L149"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'seq'"
										},
										{
											"id": 50,
											"name": "si",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 151,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L151"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'sine'"
										},
										{
											"id": 53,
											"name": "so",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 154,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L154"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'sometimes'"
										},
										{
											"id": 51,
											"name": "sq",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 152,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L152"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'square'"
										},
										{
											"id": 55,
											"name": "sr",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 156,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L156"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'subr'"
										},
										{
											"id": 52,
											"name": "st",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 153,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L153"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'step'"
										},
										{
											"id": 56,
											"name": "t",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 157,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L157"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'toggle'"
										},
										{
											"id": 57,
											"name": "tr",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 158,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L158"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'tri'"
										},
										{
											"id": 58,
											"name": "trig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 159,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L159"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'trigger'"
										},
										{
											"id": 59,
											"name": "tu",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 160,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L160"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'tune'"
										},
										{
											"id": 60,
											"name": "u",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 161,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L161"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'use'"
										},
										{
											"id": 49,
											"name": "v",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 150,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L150"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'set'"
										},
										{
											"id": 61,
											"name": "x",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 162,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L162"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'xor'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												17,
												18,
												19,
												20,
												21,
												23,
												22,
												24,
												25,
												26,
												27,
												28,
												29,
												30,
												31,
												34,
												32,
												33,
												35,
												37,
												36,
												38,
												40,
												39,
												41,
												42,
												43,
												46,
												45,
												44,
												54,
												47,
												48,
												50,
												53,
												51,
												55,
												52,
												56,
												57,
												58,
												59,
												60,
												49,
												61
											]
										}
									],
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 117,
											"character": 14,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L117"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 111,
							"name": "$add",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 417,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L417"
								}
							],
							"getSignature": {
								"id": 112,
								"name": "$add",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and add the result to the previous value in the pattern chain"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.noise(60,72,1).$add.noise(0,12,1)\n```"
												}
											]
										},
										{
											"tag": "@returns",
											"content": []
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 417,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L417"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 146,
							"name": "$and",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 583,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L583"
								}
							],
							"getSignature": {
								"id": 147,
								"name": "$and",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and compare the previous value in the pattern chain with a value."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.every(3).$and.every(2)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 583,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L583"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 281,
							"name": "$at",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1235,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1235"
								}
							],
							"getSignature": {
								"id": 282,
								"name": "$at",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and use the resulting value to get a value from the previous value in the pattern chain, at index n\nExpects the previous value to be an array"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.set('Ddor%16').$at.saw(0,16,1)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 1235,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1235"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 131,
							"name": "$div",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 507,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L507"
								}
							],
							"getSignature": {
								"id": 132,
								"name": "$div",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and divide the previous value in the pattern chain"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.noise(60,72,1).$div.noise(0,12,1)\n```"
												}
											]
										},
										{
											"tag": "@returns",
											"content": []
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 507,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L507"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 136,
							"name": "$divr",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 531,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L531"
								}
							],
							"getSignature": {
								"id": 137,
								"name": "$divr",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and divide the previous value in the pattern chain"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.noise(0,12,1).$divr.noise(60,72,1)\n```"
												}
											]
										},
										{
											"tag": "@returns",
											"content": []
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 531,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L531"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 106,
							"name": "$else",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 393,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L393"
								}
							],
							"getSignature": {
								"id": 107,
								"name": "$else",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and test if the previous value in the pattern chain is a truthy or falsy value\nIf false return outcome of pattern"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.x.coin().$if.set(4)._.$else.set(12)\ns0.e.set(0)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 393,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L393"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 246,
							"name": "$eq",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1073,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1073"
								}
							],
							"getSignature": {
								"id": 247,
								"name": "$eq",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and test if the previous value in the pattern chain is equal to the Pattern's value, using ==."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.noise(0,16).$eq.square(0,12)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 1073,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1073"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 193,
							"name": "$every",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 823,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L823"
								}
							],
							"getSignature": {
								"id": 194,
								"name": "$every",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and generate truthy or falsy values every n divisions, where n is a number generated by the new Pattern."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.$every.sine(1,16,1)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 823,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L823"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 226,
							"name": "$gt",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 968,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L968"
								}
							],
							"getSignature": {
								"id": 227,
								"name": "$gt",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and test if the previous value in the pattern chain is greater than the Pattern's value."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.noise(0,16).$gt.square(0,12)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 968,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L968"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 236,
							"name": "$gte",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1021,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1021"
								}
							],
							"getSignature": {
								"id": 237,
								"name": "$gte",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and test if the previous value in the pattern chain is greater than or equal to the Pattern's value."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.noise(0,16).$gte.square(0,12)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 1021,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1021"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 101,
							"name": "$if",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 368,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L368"
								}
							],
							"getSignature": {
								"id": 102,
								"name": "$if",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and test if the previous value in the pattern chain is a truthy or falsy value\nIf true return outcome of pattern"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.x.coin().$if.set(4)._.$else.set(12)\ns0.e.set(1)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 368,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L368"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 276,
							"name": "$inversion",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1208,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1208"
								}
							],
							"getSignature": {
								"id": 277,
								"name": "$inversion",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and use the resulting value to invert the previous chord in the pattern chain"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.set('Dmi7').$inversion.noise(0,8,1)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 1208,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1208"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 286,
							"name": "$layer",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1257,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1257"
								}
							],
							"getSignature": {
								"id": 287,
								"name": "$layer",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and use the resulting value to layer a value on top of the previous value in the pattern chain, forming an array of values"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.set('Ddor%16..*16').$layer.set('Flyd%12..*16')\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 1257,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1257"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 231,
							"name": "$lt",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 994,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L994"
								}
							],
							"getSignature": {
								"id": 232,
								"name": "$lt",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and test if the previous value in the pattern chain is less than the Pattern's value."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.noise(0,16).$lt.square(0,12)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 994,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L994"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 241,
							"name": "$lte",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1047,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1047"
								}
							],
							"getSignature": {
								"id": 242,
								"name": "$lte",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and test if the previous value in the pattern chain is less than or equal to the Pattern's value."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.noise(0,16).$lte.square(0,12)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 1047,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1047"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 141,
							"name": "$mod",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 558,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L558"
								}
							],
							"getSignature": {
								"id": 142,
								"name": "$mod",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and modulo the previous value in the pattern chain"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.noise(0,12,1).$mod.noise(60,72,1)\n```"
												}
											]
										},
										{
											"tag": "@returns",
											"content": []
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 558,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L558"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 126,
							"name": "$mul",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 483,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L483"
								}
							],
							"getSignature": {
								"id": 127,
								"name": "$mul",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and multiply the previous value in the pattern chain"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.noise(60,72,1).$mul.noise(0,12,1)\n```"
												}
											]
										},
										{
											"tag": "@returns",
											"content": []
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 483,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L483"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 251,
							"name": "$neq",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1099,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1099"
								}
							],
							"getSignature": {
								"id": 252,
								"name": "$neq",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and test if the previous value in the pattern chain is not equal to the Pattern's value, using !=."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.noise(0,16).$neq.square(0,12)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 1099,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1099"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 91,
							"name": "$not",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 313,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L313"
								}
							],
							"getSignature": {
								"id": 92,
								"name": "$not",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and negate the outcome of the pattern"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.$not.square(0,1,1)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 313,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L313"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 151,
							"name": "$or",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 605,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L605"
								}
							],
							"getSignature": {
								"id": 152,
								"name": "$or",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and compare the previous value in the pattern chain with a value."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.every(3).$or.every(2)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 605,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L605"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 213,
							"name": "$step",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 894,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L894"
								}
							],
							"getSignature": {
								"id": 214,
								"name": "$step",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and round the previous value in the pattern chain to the step value, where the step value is a number generated by the new Pattern."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.noise(0,1).$step.noise(0,12,1)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 894,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L894"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 116,
							"name": "$sub",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 439,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L439"
								}
							],
							"getSignature": {
								"id": 117,
								"name": "$sub",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and subtract the result from the previous value in the pattern chain"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.noise(60,72,1).$sub.noise(0,12,1)\n```"
												}
											]
										},
										{
											"tag": "@returns",
											"content": []
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 439,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L439"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 121,
							"name": "$subr",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 461,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L461"
								}
							],
							"getSignature": {
								"id": 122,
								"name": "$subr",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and subtract the previous value in the pattern chain"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.noise(0,12,1).$subr.noise(60,72,1)\n```"
												}
											]
										},
										{
											"tag": "@returns",
											"content": []
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 461,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L461"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 96,
							"name": "$toggle",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 342,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L342"
								}
							],
							"getSignature": {
								"id": 97,
								"name": "$toggle",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "See toggle."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 342,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L342"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 218,
							"name": "$tune",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 927,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L927"
								}
							],
							"getSignature": {
								"id": 219,
								"name": "$tune",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and round the previous value in the pattern chain to the nearest value in an array, where the array is generated by the pattern."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.p.n.noise(0,24,1,2).tune('Cdor').add(48)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 927,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L927"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 156,
							"name": "$xor",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 627,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L627"
								}
							],
							"getSignature": {
								"id": 157,
								"name": "$xor",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Instantiate a new Pattern and compare the previous value in the pattern chain with a value."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.every(3).$xor.every(2)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 627,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L627"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 67,
							"name": "_",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 216,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L216"
								}
							],
							"getSignature": {
								"id": 68,
								"name": "_",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Return to parent Pattern or Stream\nUseful when using any of the dollar methods, which spawn new Patterns, allowing you to return to this original pattern.\nOr, use as shorthand to access the underlying stream"
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": []
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns1.set({inst: 'synth', cut: 1})\ns1.p.n.coin()\n .$if.set(57)._\n .$else.set('Ddor..*16')\ns1.e.every(1)\n```"
												}
											]
										},
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.x.set(8)._.y.set(8)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Pattern.ts",
										"line": 216,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L216"
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2,
											"name": "Pattern",
											"package": "zen-3"
										},
										{
											"type": "reference",
											"target": 458,
											"name": "Stream",
											"package": "zen-3"
										}
									]
								}
							}
						},
						{
							"id": 303,
							"name": "abs",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1332,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1332"
								}
							],
							"signatures": [
								{
									"id": 304,
									"name": "abs",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the absolute value of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1332,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1332"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 296,
							"name": "acos",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1304,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1304"
								}
							],
							"signatures": [
								{
									"id": 297,
									"name": "acos",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arccosine of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1304,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1304"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 108,
							"name": "add",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 407,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L407"
								}
							],
							"signatures": [
								{
									"id": 109,
									"name": "add",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Add a value to the previous value in the pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).add(12)\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).add('0?12*16')\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 407,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L407"
										}
									],
									"parameters": [
										{
											"id": 110,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 143,
							"name": "and",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 573,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L573"
								}
							],
							"signatures": [
								{
									"id": 144,
									"name": "and",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Compare the previous value in the pattern chain with a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3).add(t%2)\nOr, use $and to create a new pattern and compare it with the previous pattern in the chain.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3).$and.every(2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 573,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L573"
										}
									],
									"parameters": [
										{
											"id": 145,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 294,
							"name": "asin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1295,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1295"
								}
							],
							"signatures": [
								{
									"id": 295,
									"name": "asin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arctangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1295,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1295"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 278,
							"name": "at",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1221,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1221"
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "at",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get a value from the previous value in the pattern chain, at index n\nExpects the previous value to be an array"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set('Ddor%16').at(t%16)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1221,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1221"
										}
									],
									"parameters": [
										{
											"id": 280,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "index of value to retrieve"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 298,
							"name": "atan",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1313,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1313"
								}
							],
							"signatures": [
								{
									"id": 299,
									"name": "atan",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arctangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1313,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1313"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 300,
							"name": "atan2",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1323,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1323"
								}
							],
							"signatures": [
								{
									"id": 301,
									"name": "atan2",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arctangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1323,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1323"
										}
									],
									"parameters": [
										{
											"id": 302,
											"name": "y",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to divide by"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 195,
							"name": "bin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 838,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L838"
								}
							],
							"signatures": [
								{
									"id": 196,
									"name": "bin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate truthy or falsy values from a binary string."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.bin('1111') // output depends on the number of division per cycle / canvas. If 16, returns 1 every 4 divisions, 0 otherwise\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 838,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L838"
										}
									],
									"parameters": [
										{
											"id": 197,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "binary string"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'10000000'"
										},
										{
											"id": 198,
											"name": "rest",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 263,
							"name": "btms",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1158,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1158"
								}
							],
							"signatures": [
								{
									"id": 264,
									"name": "btms",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert the previous value from beats to milliseconds, scaling by bpm"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.dur(1).btms()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1158,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1158"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 261,
							"name": "bts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1148,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1148"
								}
							],
							"signatures": [
								{
									"id": 262,
									"name": "bts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert the previous value from beats to seconds, scaling by bpm"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.dur(1).bts().mul(1000)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1148,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1148"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 305,
							"name": "ceil",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1341,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1341"
								}
							],
							"signatures": [
								{
									"id": 306,
									"name": "ceil",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the ceiling of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1341,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1341"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 220,
							"name": "clamp",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 939,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L939"
								}
							],
							"signatures": [
								{
									"id": 221,
									"name": "clamp",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Clamp the previous value in the pattern chain to a range."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 939,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L939"
										}
									],
									"parameters": [
										{
											"id": 222,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 332,
							"name": "coin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1452,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1452"
								}
							],
							"signatures": [
								{
									"id": 333,
									"name": "coin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`sometimes`"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1452,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1452"
										}
									],
									"parameters": [
										{
											"id": 334,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 290,
							"name": "cos",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1277,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1277"
								}
							],
							"signatures": [
								{
									"id": 291,
									"name": "cos",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the cosine of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1277,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1277"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 164,
							"name": "cosine",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 679,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L679"
								}
							],
							"signatures": [
								{
									"id": 165,
									"name": "cosine",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a cosine wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.cosine(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 679,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L679"
										}
									],
									"parameters": [
										{
											"id": 166,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 170,
							"name": "curve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 709,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L709"
								}
							],
							"signatures": [
								{
									"id": 171,
									"name": "curve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a curve between lo and hi. Use as the first call in a pattern chain."
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 709,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L709"
										}
									],
									"parameters": [
										{
											"id": 172,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 128,
							"name": "div",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 497,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L497"
								}
							],
							"signatures": [
								{
									"id": 129,
									"name": "div",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Divide the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).div(2)\nOr, use $div to create a new pattern and divide it by the previous pattern in the chain.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).$div.noise(0,12,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 497,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L497"
										}
									],
									"parameters": [
										{
											"id": 130,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 133,
							"name": "divr",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 521,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L521"
								}
							],
							"signatures": [
								{
									"id": 134,
									"name": "divr",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reverse divide the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.noise(1,2).divr(2)\nOr, use $divr to create a new pattern and divide it by the previous pattern in the chain.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,12,1).$divr.noise(60,72,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 521,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L521"
										}
									],
									"parameters": [
										{
											"id": 135,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 103,
							"name": "else",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 380,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L380"
								}
							],
							"signatures": [
								{
									"id": 104,
									"name": "else",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is a truthy or falsy value\nIf false return new value, if true, simply pass on the previous value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 380,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L380"
										}
									],
									"parameters": [
										{
											"id": 105,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 243,
							"name": "eq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1060,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1060"
								}
							],
							"signatures": [
								{
									"id": 244,
									"name": "eq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is equal to a value using ==."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1060,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1060"
										}
									],
									"parameters": [
										{
											"id": 245,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 258,
							"name": "even",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1135,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1135"
								}
							],
							"signatures": [
								{
									"id": 259,
									"name": "even",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is an even number"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1135,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1135"
										}
									],
									"parameters": [
										{
											"id": 260,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 190,
							"name": "every",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 810,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L810"
								}
							],
							"signatures": [
								{
									"id": 191,
									"name": "every",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate truthy or falsy values every n divisions."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(4) // return 1 every 4 divisions, 0 otherwise\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.every(2, 60, 72) // return 60 every 2 divisions, 72 otherwise\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 810,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L810"
										}
									],
									"parameters": [
										{
											"id": 192,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 311,
							"name": "exp",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1368,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1368"
								}
							],
							"signatures": [
								{
									"id": 312,
									"name": "exp",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the exponential of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1368,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1368"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 307,
							"name": "floor",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1350,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1350"
								}
							],
							"signatures": [
								{
									"id": 308,
									"name": "floor",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the floor of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1350,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1350"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 267,
							"name": "fn",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1179,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1179"
								}
							],
							"signatures": [
								{
									"id": 268,
									"name": "fn",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Provide a callback function to the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.seq([0,1,2,3]).fn(x => x * 2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1179,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1179"
										}
									],
									"parameters": [
										{
											"id": 269,
											"name": "cb",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 270,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "classes/Pattern.ts",
															"line": 1179,
															"character": 11,
															"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1179"
														}
													],
													"signatures": [
														{
															"id": 271,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "classes/Pattern.ts",
																	"line": 1179,
																	"character": 12,
																	"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1179"
																}
															],
															"parameters": [
																{
																	"id": 272,
																	"name": "x",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "src/lib/zen/types.ts",
																			"qualifiedName": "patternValue"
																		},
																		"name": "patternValue",
																		"package": "zen-3"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "src/lib/zen/types.ts",
																	"qualifiedName": "patternValue"
																},
																"name": "patternValue",
																"package": "zen-3"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 223,
							"name": "gt",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 955,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L955"
								}
							],
							"signatures": [
								{
									"id": 224,
									"name": "gt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is greater than a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,1).gt(0.3, 60, 72)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 955,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L955"
										}
									],
									"parameters": [
										{
											"id": 225,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 233,
							"name": "gte",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1008,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1008"
								}
							],
							"signatures": [
								{
									"id": 234,
									"name": "gte",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is greater than or equal to a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,1).gte(0.3, 60, 72)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1008,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1008"
										}
									],
									"parameters": [
										{
											"id": 235,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 98,
							"name": "if",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 355,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L355"
								}
							],
							"signatures": [
								{
									"id": 99,
									"name": "if",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is a truthy or falsy value\nIf true return new value, if false, simply pass on the previous value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 355,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L355"
										}
									],
									"parameters": [
										{
											"id": 100,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 326,
							"name": "interpolate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1427,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1427"
								}
							],
							"signatures": [
								{
									"id": 327,
									"name": "interpolate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Interpolate between a value and the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.y.sine(0,15,1).$intrp.sine(15,0,1,0.5)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1427,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1427"
										}
									],
									"parameters": [
										{
											"id": 328,
											"name": "val",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to interpolate to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 273,
							"name": "inversion",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1191,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1191"
								}
							],
							"signatures": [
								{
									"id": 274,
									"name": "inversion",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Invert the previous chord in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set('Cmi7').inversion(1)\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set('Cmi7').$inversion.range(0,8,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1191,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1191"
										}
									],
									"parameters": [
										{
											"id": 275,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "inversion"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 253,
							"name": "invert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1110,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1110"
								}
							],
							"signatures": [
								{
									"id": 254,
									"name": "invert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Invert the previous value in the pattern chain - like a bitwise NOT.\nReturns a 0 if true, and a 1 if false."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1110,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1110"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 283,
							"name": "layer",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1247,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1247"
								}
							],
							"signatures": [
								{
									"id": 284,
									"name": "layer",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Layer a value on top of the previous value in the pattern chain, forming an array of values"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set('Ddor%16..*16').layer(62)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1247,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1247"
										}
									],
									"parameters": [
										{
											"id": 285,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 313,
							"name": "log",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1377,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1377"
								}
							],
							"signatures": [
								{
									"id": 314,
									"name": "log",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the natural log of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1377,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1377"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 228,
							"name": "lt",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 981,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L981"
								}
							],
							"signatures": [
								{
									"id": 229,
									"name": "lt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is less than a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 981,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L981"
										}
									],
									"parameters": [
										{
											"id": 230,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 238,
							"name": "lte",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1034,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1034"
								}
							],
							"signatures": [
								{
									"id": 239,
									"name": "lte",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is less than or equal to a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1034,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1034"
										}
									],
									"parameters": [
										{
											"id": 240,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 315,
							"name": "max",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1387,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1387"
								}
							],
							"signatures": [
								{
									"id": 316,
									"name": "max",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the maximum of the previous value in the pattern chain and a given value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1387,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1387"
										}
									],
									"parameters": [
										{
											"id": 317,
											"name": "compare",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to compare to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 318,
							"name": "min",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1397,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1397"
								}
							],
							"signatures": [
								{
									"id": 319,
									"name": "min",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the minimum of the previous value in the pattern chain and a given value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1397,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1397"
										}
									],
									"parameters": [
										{
											"id": 320,
											"name": "compare",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to compare to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 138,
							"name": "mod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 545,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L545"
								}
							],
							"signatures": [
								{
									"id": 139,
									"name": "mod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Modulo the previous value in the pattern chain by a value.\nOr, use $mod to pass the outcome of a pattern to the function"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.n.set(t).mod(12).add(36)\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.n.set(t).$mod.set(12)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 545,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L545"
										}
									],
									"parameters": [
										{
											"id": 140,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 123,
							"name": "mul",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 473,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L473"
								}
							],
							"signatures": [
								{
									"id": 124,
									"name": "mul",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Multiply the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).mul(2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 473,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L473"
										}
									],
									"parameters": [
										{
											"id": 125,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 248,
							"name": "neq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1086,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1086"
								}
							],
							"signatures": [
								{
									"id": 249,
									"name": "neq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is not equal to a value using !=."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1086,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1086"
										}
									],
									"parameters": [
										{
											"id": 250,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 187,
							"name": "noise",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 793,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L793"
								}
							],
							"signatures": [
								{
									"id": 188,
									"name": "noise",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a number between lo and hi, using a simplex noise function."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.pan.noise(0, 1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 793,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L793"
										}
									],
									"parameters": [
										{
											"id": 189,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 88,
							"name": "not",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 302,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L302"
								}
							],
							"signatures": [
								{
									"id": 89,
									"name": "not",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Negate the value passed as the first argument"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3)\ns1.e.not(s0.e)\ns2.e.not(!(t%3))\ns3.e.not('1?0*16')\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 302,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L302"
										}
									],
									"parameters": [
										{
											"id": 90,
											"name": "x",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 199,
							"name": "ntbin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 860,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L860"
								}
							],
							"signatures": [
								{
									"id": 200,
									"name": "ntbin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert a number to binary string, then passes it to .bin()."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.ntbin(9, 8) // 9 in binary is 1001, padded out to 8 digits. Passes 00001001 to .bin()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 860,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L860"
										}
									],
									"parameters": [
										{
											"id": 201,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a number"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											},
											"defaultValue": "0"
										},
										{
											"id": 202,
											"name": "q",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the length of the binary string"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "8"
										},
										{
											"id": 203,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											},
											"defaultValue": "1"
										},
										{
											"id": 204,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when true"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											},
											"defaultValue": "1"
										},
										{
											"id": 205,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to return when false"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 255,
							"name": "odd",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1121,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1121"
								}
							],
							"signatures": [
								{
									"id": 256,
									"name": "odd",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is an odd number"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1121,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1121"
										}
									],
									"parameters": [
										{
											"id": 257,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 338,
							"name": "often",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1484,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1484"
								}
							],
							"signatures": [
								{
									"id": 339,
									"name": "often",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "75/25 chance of returning a 1 or 0"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.often()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1484,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1484"
										}
									],
									"parameters": [
										{
											"id": 340,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 148,
							"name": "or",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 595,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L595"
								}
							],
							"signatures": [
								{
									"id": 149,
									"name": "or",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Compare the previous value in the pattern chain with a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3).or(t%2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 595,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L595"
										}
									],
									"parameters": [
										{
											"id": 150,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 321,
							"name": "pow",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1407,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1407"
								}
							],
							"signatures": [
								{
									"id": 322,
									"name": "pow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Multiply the previous value in the pattern chain to the power of a given value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1407,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1407"
										}
									],
									"parameters": [
										{
											"id": 323,
											"name": "exponent",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to multiply by"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											},
											"defaultValue": "2"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 341,
							"name": "print",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1496,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1496"
								}
							],
							"signatures": [
								{
									"id": 342,
									"name": "print",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Post the current value to the console"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1496,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1496"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 176,
							"name": "pulse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 745,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L745"
								}
							],
							"signatures": [
								{
									"id": 177,
									"name": "pulse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a pulse wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.pulse(0, 10, 0.25)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 745,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L745"
										}
									],
									"parameters": [
										{
											"id": 178,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 184,
							"name": "random",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 775,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L775"
								}
							],
							"signatures": [
								{
									"id": 185,
									"name": "random",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a random number between lo and hi."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.random(60,72,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 775,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L775"
										}
									],
									"parameters": [
										{
											"id": 186,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 158,
							"name": "range",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 643,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L643"
								}
							],
							"signatures": [
								{
									"id": 159,
									"name": "range",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a range of values between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.range(0, 10, 1, 2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 643,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L643"
										}
									],
									"parameters": [
										{
											"id": 160,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 335,
							"name": "rarely",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1468,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1468"
								}
							],
							"signatures": [
								{
									"id": 336,
									"name": "rarely",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "25/75 chance of returning 1 or 0"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.rarely()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1468,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1468"
										}
									],
									"parameters": [
										{
											"id": 337,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 309,
							"name": "round",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1359,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1359"
								}
							],
							"signatures": [
								{
									"id": 310,
									"name": "round",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Round the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1359,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1359"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 167,
							"name": "saw",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 698,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L698"
								}
							],
							"signatures": [
								{
									"id": 168,
									"name": "saw",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a saw wave between lo and hi. Alias of range. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.saw(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 698,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L698"
										}
									],
									"parameters": [
										{
											"id": 169,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 206,
							"name": "seq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 871,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L871"
								}
							],
							"signatures": [
								{
									"id": 207,
									"name": "seq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Choose from a sequence of values. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.seq([60,72,74,76])\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 871,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L871"
										}
									],
									"parameters": [
										{
											"id": 208,
											"name": "values",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "an array of values"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											"defaultValue": "[]"
										},
										{
											"id": 209,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the sequence, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 77,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 249,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L249"
								}
							],
							"signatures": [
								{
									"id": 78,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set a single value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.set(1)\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns1.e.set(s0.e)\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.set('1?0*16')\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 249,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L249"
										}
									],
									"parameters": [
										{
											"id": 79,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a single string or number or array of strings or numbers, or a Pattern, or a Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 288,
							"name": "sin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1268,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1268"
								}
							],
							"signatures": [
								{
									"id": 289,
									"name": "sin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the sine of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1268,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1268"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 161,
							"name": "sine",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 660,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L660"
								}
							],
							"signatures": [
								{
									"id": 162,
									"name": "sine",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a sine wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.sine(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 660,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L660"
										}
									],
									"parameters": [
										{
											"id": 163,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 329,
							"name": "sometimes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1441,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1441"
								}
							],
							"signatures": [
								{
									"id": 330,
									"name": "sometimes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "50/50 chance of returning 1 or 0. Also, use "
											},
											{
												"kind": "code",
												"text": "`coin()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.sometimes()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1441,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1441"
										}
									],
									"parameters": [
										{
											"id": 331,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 324,
							"name": "sqrt",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1416,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1416"
								}
							],
							"signatures": [
								{
									"id": 325,
									"name": "sqrt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the square root of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1416,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1416"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 179,
							"name": "square",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 762,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L762"
								}
							],
							"signatures": [
								{
									"id": 180,
									"name": "square",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a square wave between lo and hi. Use as the first call in a pattern chain. See also pulse."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.square(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 762,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L762"
										}
									],
									"parameters": [
										{
											"id": 181,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 182,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 183,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 210,
							"name": "step",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 884,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L884"
								}
							],
							"signatures": [
								{
									"id": 211,
									"name": "step",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Round the previous value in the pattern chain to the step value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 884,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L884"
										}
									],
									"parameters": [
										{
											"id": 212,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to round to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 113,
							"name": "sub",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 429,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L429"
								}
							],
							"signatures": [
								{
									"id": 114,
									"name": "sub",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Subtract a value from the previous value in the pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).sub(12)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 429,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L429"
										}
									],
									"parameters": [
										{
											"id": 115,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 118,
							"name": "subr",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 451,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L451"
								}
							],
							"signatures": [
								{
									"id": 119,
									"name": "subr",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reverse subtract. Subtract the previous value in the pattern chain from a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.noise(0.5,0.25).subr(1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 451,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L451"
										}
									],
									"parameters": [
										{
											"id": 120,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 292,
							"name": "tan",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1286,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1286"
								}
							],
							"signatures": [
								{
									"id": 293,
									"name": "tan",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the tangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1286,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1286"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 93,
							"name": "toggle",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 330,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L330"
								}
							],
							"signatures": [
								{
									"id": 94,
									"name": "toggle",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Toggle on or off using the value passed as the first argument\nA true value will toggle the pattern on, a false value will toggle it off"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3)\ns1.e.toggle(s0.e)\ns2.e.toggle(!(t%3))\ns3.e.toggle('1?0*16')\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 330,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L330"
										}
									],
									"parameters": [
										{
											"id": 95,
											"name": "x",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 173,
							"name": "tri",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 727,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L727"
								}
							],
							"signatures": [
								{
									"id": 174,
									"name": "tri",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a triangle wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.harm.tri(0, 4, 0.25)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 727,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L727"
										}
									],
									"parameters": [
										{
											"id": 175,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen-3"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 265,
							"name": "ttms",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1168,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1168"
								}
							],
							"signatures": [
								{
									"id": 266,
									"name": "ttms",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert the previous value from divisions of a bar to seconds, scaling by bpm"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.set(q).ttms()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1168,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1168"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 215,
							"name": "tune",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 906,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L906"
								}
							],
							"signatures": [
								{
									"id": 216,
									"name": "tune",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Round the previous value in the pattern chain to the nearest value in an array."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,12).tune([0,2,4,5,7,9,11,12]).add(36)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 906,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L906"
										}
									],
									"parameters": [
										{
											"id": 217,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of values to round to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 83,
							"name": "use",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 278,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L278"
								}
							],
							"signatures": [
								{
									"id": 84,
									"name": "use",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Inset another pattern's stack into the current pattern's stack"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.sine()\ns1.p.pan.use(s0.p.amp);\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 278,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L278"
										}
									],
									"parameters": [
										{
											"id": 85,
											"name": "pattern",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "an instance of another pattern"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2,
												"name": "Pattern",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						},
						{
							"id": 153,
							"name": "xor",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 617,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L617"
								}
							],
							"signatures": [
								{
									"id": 154,
									"name": "xor",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Compare the previous value in the pattern chain with a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3).xor(t%2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 617,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L617"
										}
									],
									"parameters": [
										{
											"id": 155,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen-3"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15
							]
						},
						{
							"title": "Accessors",
							"children": [
								111,
								146,
								281,
								131,
								136,
								106,
								246,
								193,
								226,
								236,
								101,
								276,
								286,
								231,
								241,
								141,
								126,
								251,
								91,
								151,
								213,
								116,
								121,
								96,
								218,
								156,
								67
							]
						},
						{
							"title": "Methods",
							"children": [
								303,
								296,
								108,
								143,
								294,
								278,
								298,
								300,
								195,
								263,
								261,
								305,
								220,
								332,
								290,
								164,
								170,
								128,
								133,
								103,
								243,
								258,
								190,
								311,
								307,
								267,
								223,
								233,
								98,
								326,
								273,
								253,
								283,
								313,
								228,
								238,
								315,
								318,
								138,
								123,
								248,
								187,
								88,
								199,
								255,
								338,
								148,
								321,
								341,
								176,
								184,
								158,
								335,
								309,
								167,
								206,
								77,
								288,
								161,
								329,
								324,
								179,
								210,
								113,
								118,
								292,
								93,
								173,
								265,
								215,
								83,
								153
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Pattern.ts",
							"line": 32,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L32"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Pattern.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Pattern.ts#L1"
				}
			]
		},
		{
			"id": 457,
			"name": "Stream",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 458,
					"name": "Stream",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A stream is a musical layer. You can use a stream to map musical parameters across time and space. \nWhen a stream triggers an event, musical parameters are determined by the stream's position in time and space.\nWhen a stream triggers a mutation, all active events are mutated based on the stream's position in time and space.\n\nStreams are available within Zen as "
							},
							{
								"kind": "code",
								"text": "`s0`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s1`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s2`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s3`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s4`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s5`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s6`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s7`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ns0.set({inst: 'synth', n: 60}) // set the stream's default parameters\ns0.p.lag.set(1).btms()\ns0.px._modi.saw(1,10) // map the synth's modulation index across the x axis\ns0.py._harm.range(0,10,1) // map the synth's harmonic series across the y axis\ns0.x.range(0,16,1) // move the stream across the x axis of the canvas\ns0.y.noise(0,16,1,0.5) // move the stream across the y axis of the canvas\ns0.e.every(4) // trigger an event every 4 divisions\ns0.m.not(s0.e)\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 500,
							"name": "_aliases",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shorthand aliases for pattern methods"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n    add: 'a',\n    and: 'an',\n    }\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 195,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L195"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 501,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 503,
											"name": "mute",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 197,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L197"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'mu'"
										},
										{
											"id": 504,
											"name": "set",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 198,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L198"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'v'"
										},
										{
											"id": 502,
											"name": "solo",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 196,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L196"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'so'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												503,
												504,
												502
											]
										}
									],
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 195,
											"character": 15,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L195"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 498,
							"name": "map",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to map parameter names to different keys. Useful for mapping to MIDI controllers"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.map = {amp: 'cc1', cutoff: 'cc74'}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 185,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L185"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 499,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 185,
											"character": 10,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L185"
										}
									]
								}
							},
							"defaultValue": "{}"
						},
						{
							"id": 467,
							"name": "p",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across time"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.p.amp.range(0,1) // ramp amp from 0 to 1 across the cycle\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 44,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L44"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							}
						},
						{
							"id": 468,
							"name": "px",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the x axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.px.amp.range(0,1) // ramp amp from 0 to 1 across the x axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 51,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							}
						},
						{
							"id": 469,
							"name": "py",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the y axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.py.amp.range(0,1) // ramp amp from 0 to 1 across the y axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 58,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L58"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							}
						},
						{
							"id": 470,
							"name": "pz",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the z axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.pz.amp.range(0,1) // ramp amp from 0 to 1 across the z axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 65,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L65"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							}
						},
						{
							"id": 487,
							"name": "e",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 136,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L136"
								}
							],
							"getSignature": {
								"id": 488,
								"name": "e",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether the stream should trigger an event"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.set(1) // trigger an event every division\ns0.e.every(4) // trigger an event every 4 divisions\ns0.e.bin('1000 1001') // use a binary pattern to trigger events\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 136,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L136"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 490,
							"name": "m",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 149,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L149"
								}
							],
							"getSignature": {
								"id": 491,
								"name": "m",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to mutate all active events in the stream. Only mutates parameters prefixed with "
										},
										{
											"kind": "code",
											"text": "`_`"
										},
										{
											"kind": "text",
											"text": ", e.g. "
										},
										{
											"kind": "code",
											"text": "`_amp`"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.m.set(1) // mutate all active events every division\ns0.m.every(4) // mutate all active events every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 149,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L149"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 493,
							"name": "mute",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 162,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L162"
								}
							],
							"getSignature": {
								"id": 494,
								"name": "mute",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to mute the stream"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.mute.set(1) // mute the stream every division\ns0.mute.every(4) // mute the stream every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 162,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L162"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 496,
							"name": "solo",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 175,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L175"
								}
							],
							"getSignature": {
								"id": 497,
								"name": "solo",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to solo the stream. If true, mutes all other streams"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.solo.set(1) // solo the stream every division\ns0.solo.every(4) // solo the stream every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 175,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L175"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 472,
							"name": "t",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 74,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L74"
								}
							],
							"getSignature": {
								"id": 473,
								"name": "t",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in time"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.t.sine(0,16,1) // override the global t with a sine wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 74,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L74"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 475,
							"name": "x",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 86,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L86"
								}
							],
							"getSignature": {
								"id": 476,
								"name": "x",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.x.saw(0,16,1) // move the stream across the x axis of the canvas with a saw wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 86,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L86"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 484,
							"name": "xyz",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 122,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L122"
								}
							],
							"getSignature": {
								"id": 485,
								"name": "xyz",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting all axes of the stream's position at the same time. Expects an array of values"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.xyz.set([t,8,0])\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 122,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L122"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 478,
							"name": "y",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 98,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L98"
								}
							],
							"getSignature": {
								"id": 479,
								"name": "y",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.y.saw(0,16,1) // move the stream across the y axis of the canvas with a saw wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 98,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L98"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 481,
							"name": "z",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 110,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L110"
								}
							],
							"getSignature": {
								"id": 482,
								"name": "z",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.z.saw(0,16,1) // move the stream across the z axis of the canvas with a saw wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 110,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L110"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 514,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 246,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L246"
								}
							],
							"signatures": [
								{
									"id": 515,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set multiple stream parameter using key/value pairs"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 246,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L246"
										}
									],
									"parameters": [
										{
											"id": 516,
											"name": "ps",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "key/value pairs"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "Dictionary"
												},
												"name": "Dictionary",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 458,
										"name": "Stream",
										"package": "zen-3"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								500,
								498,
								467,
								468,
								469,
								470
							]
						},
						{
							"title": "Accessors",
							"children": [
								487,
								490,
								493,
								496,
								472,
								475,
								484,
								478,
								481
							]
						},
						{
							"title": "Methods",
							"children": [
								514
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Stream.ts",
							"line": 23,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L23"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 351,
							"name": "Zen"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						458
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Stream.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L1"
				}
			]
		},
		{
			"id": 350,
			"name": "Zen",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 351,
					"name": "Zen",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Zen class allows you to set global parameters. It is available within Zen as "
							},
							{
								"kind": "code",
								"text": "`z`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nz.t.range(0, 16, 1) // pattern time\nz.bpm.range(60, 120, 1) // pattern bpm\nz.s = 16 // size of canvas\nz.q = 16 // frames per cycle\nz.update = 1 // when to update the executed code, 1 is on the next division, q is on the next cycle etc.\nz.set({reverb: 1, rsize: 0.5}) // set global parameters for all streams. Can be overwritten by stream parameters\nz.p.n.scales('d-dorian', 16) // set global time parameters using z.p\nz.px._modi.range(0, 1, 0.25) // set global stream parameters using z.px\netc.\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 417,
							"name": "_aliases",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shorthand aliases for pattern methods"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n    add: 'a',\n    and: 'an',\n    }\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 195,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L195"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 418,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 420,
											"name": "mute",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 197,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L197"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'mu'"
										},
										{
											"id": 421,
											"name": "set",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 198,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L198"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'v'"
										},
										{
											"id": 419,
											"name": "solo",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 196,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L196"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'so'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												420,
												421,
												419
											]
										}
									],
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 195,
											"character": 15,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L195"
										}
									]
								}
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 500,
								"name": "Stream._aliases"
							}
						},
						{
							"id": 415,
							"name": "map",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to map parameter names to different keys. Useful for mapping to MIDI controllers"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.map = {amp: 'cc1', cutoff: 'cc74'}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 185,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L185"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 416,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 185,
											"character": 10,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L185"
										}
									]
								}
							},
							"defaultValue": "{}",
							"inheritedFrom": {
								"type": "reference",
								"target": 498,
								"name": "Stream.map"
							}
						},
						{
							"id": 387,
							"name": "p",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across time"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.p.amp.range(0,1) // ramp amp from 0 to 1 across the cycle\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 44,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L44"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 467,
								"name": "Stream.p"
							}
						},
						{
							"id": 388,
							"name": "px",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the x axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.px.amp.range(0,1) // ramp amp from 0 to 1 across the x axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 51,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 468,
								"name": "Stream.px"
							}
						},
						{
							"id": 389,
							"name": "py",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the y axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.py.amp.range(0,1) // ramp amp from 0 to 1 across the y axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 58,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L58"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 469,
								"name": "Stream.py"
							}
						},
						{
							"id": 390,
							"name": "pz",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the z axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.pz.amp.range(0,1) // ramp amp from 0 to 1 across the z axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 65,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L65"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen-3"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 470,
								"name": "Stream.pz"
							}
						},
						{
							"id": 358,
							"name": "bpm",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 43,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L43"
								}
							],
							"getSignature": {
								"id": 359,
								"name": "bpm",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the global bpm"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.bpm.saw(60,120,0.5) // set the global bpm with a saw wave between 60 and 120, over 2 cycles\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 43,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L43"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								}
							}
						},
						{
							"id": 369,
							"name": "c",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 85,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L85"
								}
							],
							"getSignature": {
								"id": 370,
								"name": "c",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Get the current cycle. This is available within your code as "
										},
										{
											"kind": "code",
											"text": "`c`"
										},
										{
											"kind": "text",
											"text": "."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.every(c%2 ? 1 : 4) // every 1 frame on odd cycles, every 4 frames on even cycles\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 85,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L85"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 404,
							"name": "e",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 136,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L136"
								}
							],
							"getSignature": {
								"id": 405,
								"name": "e",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether the stream should trigger an event"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.set(1) // trigger an event every division\ns0.e.every(4) // trigger an event every 4 divisions\ns0.e.bin('1000 1001') // use a binary pattern to trigger events\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 136,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L136"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.e"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 487,
								"name": "Stream.e"
							}
						},
						{
							"id": 407,
							"name": "m",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 149,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L149"
								}
							],
							"getSignature": {
								"id": 408,
								"name": "m",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to mutate all active events in the stream. Only mutates parameters prefixed with "
										},
										{
											"kind": "code",
											"text": "`_`"
										},
										{
											"kind": "text",
											"text": ", e.g. "
										},
										{
											"kind": "code",
											"text": "`_amp`"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.m.set(1) // mutate all active events every division\ns0.m.every(4) // mutate all active events every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 149,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L149"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.m"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 490,
								"name": "Stream.m"
							}
						},
						{
							"id": 410,
							"name": "mute",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 162,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L162"
								}
							],
							"getSignature": {
								"id": 411,
								"name": "mute",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to mute the stream"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.mute.set(1) // mute the stream every division\ns0.mute.every(4) // mute the stream every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 162,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L162"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.mute"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 493,
								"name": "Stream.mute"
							}
						},
						{
							"id": 365,
							"name": "q",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 76,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L76"
								}
							],
							"setSignature": {
								"id": 367,
								"name": "q",
								"variant": "signature",
								"kind": 1048576,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set the number of divisions per cycle. Changing this value updates the variable "
										},
										{
											"kind": "code",
											"text": "`q`"
										},
										{
											"kind": "text",
											"text": " within your code."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.q = 16 // set the number of divisions per cycle to 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 76,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L76"
									}
								],
								"parameters": [
									{
										"id": 368,
										"name": "value",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						},
						{
							"id": 361,
							"name": "s",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 62,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L62"
								}
							],
							"setSignature": {
								"id": 363,
								"name": "s",
								"variant": "signature",
								"kind": 1048576,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set the size of the canvas. Changing this value updates the variable "
										},
										{
											"kind": "code",
											"text": "`s`"
										},
										{
											"kind": "text",
											"text": " within your code."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.s = 16 // set the size of the canvas to 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 62,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L62"
									}
								],
								"parameters": [
									{
										"id": 364,
										"name": "value",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						},
						{
							"id": 413,
							"name": "solo",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 175,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L175"
								}
							],
							"getSignature": {
								"id": 414,
								"name": "solo",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to solo the stream. If true, mutes all other streams"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.solo.set(1) // solo the stream every division\ns0.solo.every(4) // solo the stream every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 175,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L175"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.solo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 496,
								"name": "Stream.solo"
							}
						},
						{
							"id": 355,
							"name": "t",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 31,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L31"
								}
							],
							"getSignature": {
								"id": 356,
								"name": "t",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the global time. The outcome of the pattern updates the variable "
										},
										{
											"kind": "code",
											"text": "`t`"
										},
										{
											"kind": "text",
											"text": " within your code."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.t.sine(0,16,1) // set the global t with a sine wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 31,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L31"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								},
								"overwrites": {
									"type": "reference",
									"target": -1,
									"name": "Stream.t"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 472,
								"name": "Stream.t"
							}
						},
						{
							"id": 371,
							"name": "update",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 103,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L103"
								}
							],
							"setSignature": {
								"id": 373,
								"name": "update",
								"variant": "signature",
								"kind": 1048576,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set when to update the executed code"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.update = 1 // update on every frame\nz.update = 4 // update on every 4th frame\nz.update = q // update on the next cycle\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 103,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L103"
									}
								],
								"parameters": [
									{
										"id": 374,
										"name": "value",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						},
						{
							"id": 392,
							"name": "x",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 86,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L86"
								}
							],
							"getSignature": {
								"id": 393,
								"name": "x",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.x.saw(0,16,1) // move the stream across the x axis of the canvas with a saw wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 86,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L86"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.x"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 475,
								"name": "Stream.x"
							}
						},
						{
							"id": 401,
							"name": "xyz",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 122,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L122"
								}
							],
							"getSignature": {
								"id": 402,
								"name": "xyz",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting all axes of the stream's position at the same time. Expects an array of values"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.xyz.set([t,8,0])\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 122,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L122"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.xyz"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 484,
								"name": "Stream.xyz"
							}
						},
						{
							"id": 395,
							"name": "y",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 98,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L98"
								}
							],
							"getSignature": {
								"id": 396,
								"name": "y",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.y.saw(0,16,1) // move the stream across the y axis of the canvas with a saw wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 98,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L98"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.y"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 478,
								"name": "Stream.y"
							}
						},
						{
							"id": 398,
							"name": "z",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 110,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L110"
								}
							],
							"getSignature": {
								"id": 399,
								"name": "z",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.z.saw(0,16,1) // move the stream across the z axis of the canvas with a saw wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 110,
										"character": 4,
										"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L110"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen-3"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.z"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 481,
								"name": "Stream.z"
							}
						},
						{
							"id": 431,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 246,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L246"
								}
							],
							"signatures": [
								{
									"id": 432,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set multiple stream parameter using key/value pairs"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 246,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Stream.ts#L246"
										}
									],
									"parameters": [
										{
											"id": 433,
											"name": "ps",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "key/value pairs"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/lib/zen/types.ts",
													"qualifiedName": "Dictionary"
												},
												"name": "Dictionary",
												"package": "zen-3"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 351,
										"name": "Zen",
										"package": "zen-3"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 515,
										"name": "Stream.set"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 514,
								"name": "Stream.set"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								417,
								415,
								387,
								388,
								389,
								390
							]
						},
						{
							"title": "Accessors",
							"children": [
								358,
								369,
								404,
								407,
								410,
								365,
								361,
								413,
								355,
								371,
								392,
								401,
								395,
								398
							]
						},
						{
							"title": "Methods",
							"children": [
								431
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Zen.ts",
							"line": 18,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L18"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 458,
							"name": "Stream",
							"package": "zen-3"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						351
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Zen.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/a2c1395/src/lib/zen/classes/Zen.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				457,
				350
			]
		}
	],
	"packageName": "zen-3",
	"readme": [
		{
			"kind": "text",
			"text": "# ZEN3\nZen is a Javascript library for expressing complex patterns with very little code. It was written to take advantage of JS's flexibility and is primed for pattern interference. Zen allows you to map musical parameters across time and 3D space. Plot multiple trajectories around the canvas and trigger sonic events and modulations whose parameters are determined by the stream's current position in time and space.\n\nZen is designed to be used as a live coding tool and is available for experimentation at TODO. It can also be integrated into other projects requiring pattern generation. See section TODO for further guidance.\n## Basics\nZen provides you with 4 const variables, 8 streams, and a global settings interface:\n### Variables\n* t: an incrementing integer representing time\n* q: integer, number of divisions per cycle\n* c: integer, current cycle. ie. floor(t / q)\n* s: integer, size of canvas\n\n### Streams\n8 instances of the "
		},
		{
			"kind": "code",
			"text": "`Stream`"
		},
		{
			"kind": "text",
			"text": " class (see below), assigned to the variables "
		},
		{
			"kind": "code",
			"text": "`s0`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s1`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s2`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s3`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s4`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s5`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s6`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`s7`"
		},
		{
			"kind": "text",
			"text": ". Used to map musical parameters across each cycle or the canvas, and determine the stream's trajectory across time and space.\n### Zen\nAn instance of the "
		},
		{
			"kind": "code",
			"text": "`Zen`"
		},
		{
			"kind": "text",
			"text": " class (see below), assigned to the variable "
		},
		{
			"kind": "code",
			"text": "`z`"
		},
		{
			"kind": "text",
			"text": ". It is used to update the global "
		},
		{
			"kind": "code",
			"text": "`q`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`s`"
		},
		{
			"kind": "text",
			"text": " values. You are also able to pattern "
		},
		{
			"kind": "code",
			"text": "`z.t`"
		},
		{
			"kind": "text",
			"text": " to override the global time and "
		},
		{
			"kind": "code",
			"text": "`z.bpm`"
		},
		{
			"kind": "text",
			"text": " to control tempo.\n## Syntax\n### Pattern\nPatterns are at the heart of Zen, allowing you to create complex patterns of number values. You don't usually instantiate the "
		},
		{
			"kind": "code",
			"text": "`Pattern`"
		},
		{
			"kind": "text",
			"text": " class, or call the "
		},
		{
			"kind": "code",
			"text": "`get()`"
		},
		{
			"kind": "text",
			"text": " method, directly; they are properties of a "
		},
		{
			"kind": "code",
			"text": "`Stream`"
		},
		{
			"kind": "text",
			"text": " or "
		},
		{
			"kind": "code",
			"text": "`Zen`"
		},
		{
			"kind": "text",
			"text": " (see below) and values are obtained under the hood. However, to illustrate how patterns work:\n"
		},
		{
			"kind": "code",
			"text": "```js\nconst p = new Pattern()\n// create a range of values from 0 to 4 and query the value at t\np.range(0,4).get(t, q) // args are time and divisions\n// create a sine function from 0 to 10. Query the value at t\np.sine(0,10).get(t, q)\n// chain methods together\np.tri(0,256,1).add(4).div(0.5).pow(2).clamp(0, 1024)\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### Snap\nSnap a sample to the number of divisions.\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.px.snap.set(s)\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### Dur, Lag, ADSR\nAll of these values should be given in milliseconds. If you wish to quantize these values to the project tempo use "
		},
		{
			"kind": "code",
			"text": "`.btms()`"
		},
		{
			"kind": "text",
			"text": " - beats to milliseconds.\n"
		},
		{
			"kind": "code",
			"text": "```js\nz.bpm.set(139)\ns0.p.dur.set(1).btms() // plays for 1 beat, regardless of the bpm\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Stream\n#### Time and Space\nTODO: s0.x, s0.t\n#### Parameters\nMusical parameters can be mapped in different ways across a cycle, or across each axis of the canvas, using methods "
		},
		{
			"kind": "code",
			"text": "`.p(key: string)`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`.px(key: string)`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`.py(key: string)`"
		},
		{
			"kind": "text",
			"text": ", and "
		},
		{
			"kind": "code",
			"text": "`.pz(key: string)`"
		},
		{
			"kind": "text",
			"text": ". Each method returns an instance of the "
		},
		{
			"kind": "code",
			"text": "`Pattern`"
		},
		{
			"kind": "text",
			"text": " class which enables you to map values in a variety of ways. E.g.\n"
		},
		{
			"kind": "code",
			"text": "```js\n// map parameter across a cycle using a range function\ns0.p.foo.range(0,2)\n// map parameter across the x axis using a sine function\ns0.px.bar.sine(0,2)\n// set a constant value\ns0.p.foo.set(8)\n// chain methods together for greater complexity\ns0.pz.bar.saw(0,16).mul(2)\n```"
		},
		{
			"kind": "text",
			"text": "\nOn each division of a cycle, each pattern is evaluated to create a list of parameters key / value pairs. Each method passes its value to the next in the chain, with the first value being the current time "
		},
		{
			"kind": "code",
			"text": "`t`"
		},
		{
			"kind": "text",
			"text": ". This allows you manipulate time or space using arithmetic.\n"
		},
		{
			"kind": "code",
			"text": "```js\n// offset foo by half a cycle\ns0.p.foo.add(0.5).range(0,256)\n// move across the x axis at twice the speed\ns0.x.set(t)\ns0.x.mul(2).range(0,s)\n```"
		},
		{
			"kind": "text",
			"text": "\n\nYou can reference other streams' parameters:\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.p.foo.tri(16,24,1).add(32)\ns1.p.bar.use(s0.p('foo')).mod(6)\n```"
		},
		{
			"kind": "text",
			"text": "\n\nOr simply get their value:\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.p.foo.tri(16,24,1).add(32)\ns1.p.bar.set(s0.p('foo').get(t/q))\n```"
		},
		{
			"kind": "text",
			"text": "\n#### Events and Mutations\nUse a stream's "
		},
		{
			"kind": "code",
			"text": "`e`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`m`"
		},
		{
			"kind": "text",
			"text": " properties to trigger musical events - discrete synth voices - or mutations - the modulation of all voices in a stream. Each property is, once again, an instance of the "
		},
		{
			"kind": "code",
			"text": "`Pattern`"
		},
		{
			"kind": "text",
			"text": " class, but evaluates the result as a boolean type, rather than a number. True triggers an event or mutation, false is ignored. JavaScript is able to infer boolean values from non-boolean types. As "
		},
		{
			"kind": "code",
			"text": "`0`"
		},
		{
			"kind": "text",
			"text": " is false and any value greater than "
		},
		{
			"kind": "code",
			"text": "`0`"
		},
		{
			"kind": "text",
			"text": " is true, we are able to pattern numbers in order to trigger our events.\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n// trigger an event every division\ns0.e.set(1)\n// trigger an event every other division\ns0.e.set(t%2)\n// or...\ns0.e.set(t).odd()\n// use every to get regular rhythms\ns0.e.every(1) // every cycle\ns0.e.every(4) // every 4 cycles\ns0.e.every(0.5) // twice per cycle - if q is regular\n// various logic available to output 1s or 0s\ns0.e.sine(0,1).gt(0.75) // greater than\ns0.e.random(0,1,0.25).eq(0.75) // equal to\n// convert numbers to binary patterns\ns0.e.ntbin(76543, 16)\n// or binary strings to binary patterns\ns0.e.bin('01100101001010')\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### Key Mapping\nYou can map alternative key names using the "
		},
		{
			"kind": "code",
			"text": "`.map`"
		},
		{
			"kind": "text",
			"text": " property of a stream, which accepts an object. For example, to use more descriptive keys when sending midi messages, whilst still compiling parameters to use a "
		},
		{
			"kind": "code",
			"text": "`cc1`"
		},
		{
			"kind": "text",
			"text": " format:\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.map={cutoff: 'cc74'}\n```"
		},
		{
			"kind": "text",
			"text": "\nYou may extend Zen by adding your own mappings in TBC. There is one map available:\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.map=keymap.nordlead1a\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### Solo | Mute\nYou can solo and mute streams. Solo and mute properties are also Patterns.\n"
		},
		{
			"kind": "code",
			"text": "```js\ns0.solo.set(1)\ns0.solo.every(1)\n\ns0.mute.set(1)\n```"
		}
	],
	"symbolIdMap": {
		"1": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern"
		},
		"15": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.aliases"
		},
		"16": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object"
		},
		"17": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.a"
		},
		"18": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.an"
		},
		"19": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.b"
		},
		"20": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.bm"
		},
		"21": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.bs"
		},
		"22": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.cl"
		},
		"23": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.c"
		},
		"24": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.co"
		},
		"25": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.cu"
		},
		"26": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.d"
		},
		"27": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.dr"
		},
		"28": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.e"
		},
		"29": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.eq"
		},
		"30": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.ev"
		},
		"31": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.i"
		},
		"32": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.intrp"
		},
		"33": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.inv"
		},
		"34": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.in"
		},
		"35": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.la"
		},
		"36": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.mo"
		},
		"37": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.m"
		},
		"38": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.n"
		},
		"39": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.no"
		},
		"40": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.nb"
		},
		"41": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.o"
		},
		"42": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.of"
		},
		"43": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.pu"
		},
		"44": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.rd"
		},
		"45": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.ra"
		},
		"46": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.r"
		},
		"47": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.sa"
		},
		"48": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.se"
		},
		"49": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.v"
		},
		"50": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.si"
		},
		"51": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.sq"
		},
		"52": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.st"
		},
		"53": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.so"
		},
		"54": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.s"
		},
		"55": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.sr"
		},
		"56": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.t"
		},
		"57": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.tr"
		},
		"58": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.trig"
		},
		"59": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.tu"
		},
		"60": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.u"
		},
		"61": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.x"
		},
		"67": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern._"
		},
		"68": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern._"
		},
		"77": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.set"
		},
		"78": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.set"
		},
		"79": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"83": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.use"
		},
		"84": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.use"
		},
		"85": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "pattern"
		},
		"88": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.not"
		},
		"89": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.not"
		},
		"90": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"91": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$not"
		},
		"92": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$not"
		},
		"93": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.toggle"
		},
		"94": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.toggle"
		},
		"95": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"96": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$toggle"
		},
		"97": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$toggle"
		},
		"98": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.if"
		},
		"99": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.if"
		},
		"100": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"101": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$if"
		},
		"102": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$if"
		},
		"103": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.else"
		},
		"104": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.else"
		},
		"105": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"106": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$else"
		},
		"107": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$else"
		},
		"108": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.add"
		},
		"109": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.add"
		},
		"110": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"111": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$add"
		},
		"112": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$add"
		},
		"113": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sub"
		},
		"114": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sub"
		},
		"115": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"116": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$sub"
		},
		"117": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$sub"
		},
		"118": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.subr"
		},
		"119": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.subr"
		},
		"120": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"121": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$subr"
		},
		"122": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$subr"
		},
		"123": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mul"
		},
		"124": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mul"
		},
		"125": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"126": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$mul"
		},
		"127": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$mul"
		},
		"128": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.div"
		},
		"129": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.div"
		},
		"130": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"131": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$div"
		},
		"132": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$div"
		},
		"133": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.divr"
		},
		"134": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.divr"
		},
		"135": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"136": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$divr"
		},
		"137": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$divr"
		},
		"138": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mod"
		},
		"139": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mod"
		},
		"140": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"141": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$mod"
		},
		"142": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$mod"
		},
		"143": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.and"
		},
		"144": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.and"
		},
		"145": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"146": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$and"
		},
		"147": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$and"
		},
		"148": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.or"
		},
		"149": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.or"
		},
		"150": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"151": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$or"
		},
		"152": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$or"
		},
		"153": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.xor"
		},
		"154": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.xor"
		},
		"155": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"156": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$xor"
		},
		"157": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$xor"
		},
		"158": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.range"
		},
		"159": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.range"
		},
		"160": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"161": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sine"
		},
		"162": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sine"
		},
		"163": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"164": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cosine"
		},
		"165": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cosine"
		},
		"166": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"167": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.saw"
		},
		"168": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.saw"
		},
		"169": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"170": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.curve"
		},
		"171": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.curve"
		},
		"172": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"173": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tri"
		},
		"174": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tri"
		},
		"175": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"176": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pulse"
		},
		"177": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pulse"
		},
		"178": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"179": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.square"
		},
		"180": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.square"
		},
		"181": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"182": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"183": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"184": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.random"
		},
		"185": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.random"
		},
		"186": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"187": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.noise"
		},
		"188": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.noise"
		},
		"189": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"190": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.every"
		},
		"191": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.every"
		},
		"192": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"193": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$every"
		},
		"194": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$every"
		},
		"195": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bin"
		},
		"196": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bin"
		},
		"197": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"198": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "rest"
		},
		"199": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ntbin"
		},
		"200": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ntbin"
		},
		"201": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"202": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "q"
		},
		"203": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"204": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "a"
		},
		"205": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "b"
		},
		"206": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.seq"
		},
		"207": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.seq"
		},
		"208": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "values"
		},
		"209": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"210": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.step"
		},
		"211": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.step"
		},
		"212": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"213": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$step"
		},
		"214": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$step"
		},
		"215": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tune"
		},
		"216": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tune"
		},
		"217": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "array"
		},
		"218": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$tune"
		},
		"219": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$tune"
		},
		"220": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.clamp"
		},
		"221": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.clamp"
		},
		"222": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"223": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gt"
		},
		"224": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gt"
		},
		"225": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"226": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$gt"
		},
		"227": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$gt"
		},
		"228": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lt"
		},
		"229": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lt"
		},
		"230": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"231": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$lt"
		},
		"232": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$lt"
		},
		"233": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gte"
		},
		"234": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gte"
		},
		"235": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"236": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$gte"
		},
		"237": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$gte"
		},
		"238": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lte"
		},
		"239": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lte"
		},
		"240": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"241": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$lte"
		},
		"242": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$lte"
		},
		"243": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eq"
		},
		"244": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eq"
		},
		"245": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"246": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$eq"
		},
		"247": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$eq"
		},
		"248": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.neq"
		},
		"249": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.neq"
		},
		"250": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"251": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$neq"
		},
		"252": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$neq"
		},
		"253": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.invert"
		},
		"254": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.invert"
		},
		"255": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.odd"
		},
		"256": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.odd"
		},
		"257": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"258": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.even"
		},
		"259": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.even"
		},
		"260": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"261": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bts"
		},
		"262": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bts"
		},
		"263": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.btms"
		},
		"264": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.btms"
		},
		"265": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ttms"
		},
		"266": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ttms"
		},
		"267": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.fn"
		},
		"268": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.fn"
		},
		"269": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "cb"
		},
		"270": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"271": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"272": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"273": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.inversion"
		},
		"274": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.inversion"
		},
		"275": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"276": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$inversion"
		},
		"277": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$inversion"
		},
		"278": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.at"
		},
		"279": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.at"
		},
		"280": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"281": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$at"
		},
		"282": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$at"
		},
		"283": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.layer"
		},
		"284": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.layer"
		},
		"285": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"286": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$layer"
		},
		"287": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.$layer"
		},
		"288": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sin"
		},
		"289": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sin"
		},
		"290": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cos"
		},
		"291": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cos"
		},
		"292": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tan"
		},
		"293": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tan"
		},
		"294": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.asin"
		},
		"295": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.asin"
		},
		"296": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.acos"
		},
		"297": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.acos"
		},
		"298": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan"
		},
		"299": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan"
		},
		"300": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan2"
		},
		"301": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan2"
		},
		"302": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "y"
		},
		"303": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.abs"
		},
		"304": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.abs"
		},
		"305": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ceil"
		},
		"306": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ceil"
		},
		"307": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.floor"
		},
		"308": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.floor"
		},
		"309": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.round"
		},
		"310": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.round"
		},
		"311": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.exp"
		},
		"312": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.exp"
		},
		"313": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.log"
		},
		"314": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.log"
		},
		"315": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.max"
		},
		"316": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.max"
		},
		"317": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "compare"
		},
		"318": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.min"
		},
		"319": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.min"
		},
		"320": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "compare"
		},
		"321": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pow"
		},
		"322": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pow"
		},
		"323": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "exponent"
		},
		"324": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sqrt"
		},
		"325": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sqrt"
		},
		"326": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.interpolate"
		},
		"327": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.interpolate"
		},
		"328": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "val"
		},
		"329": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sometimes"
		},
		"330": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sometimes"
		},
		"331": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"332": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.coin"
		},
		"333": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.coin"
		},
		"334": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"335": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.rarely"
		},
		"336": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.rarely"
		},
		"337": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"338": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.often"
		},
		"339": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.often"
		},
		"340": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"341": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.print"
		},
		"342": {
			"sourceFileName": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.print"
		},
		"350": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": ""
		},
		"351": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen"
		},
		"355": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.t"
		},
		"356": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.t"
		},
		"358": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.bpm"
		},
		"359": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.bpm"
		},
		"361": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.s"
		},
		"363": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.s"
		},
		"364": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "value"
		},
		"365": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.q"
		},
		"367": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.q"
		},
		"368": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "value"
		},
		"369": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.c"
		},
		"370": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.c"
		},
		"371": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.update"
		},
		"373": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.update"
		},
		"374": {
			"sourceFileName": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "value"
		},
		"387": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.p"
		},
		"388": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.px"
		},
		"389": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.py"
		},
		"390": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.pz"
		},
		"392": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"393": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"395": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"396": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"398": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"399": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"401": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"402": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"404": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"405": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"407": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"408": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"410": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"411": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"413": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"414": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"415": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.map"
		},
		"416": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object"
		},
		"417": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream._aliases"
		},
		"418": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object"
		},
		"419": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object.solo"
		},
		"420": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object.mute"
		},
		"421": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object.set"
		},
		"431": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"432": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"433": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		},
		"457": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": ""
		},
		"458": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream"
		},
		"467": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.p"
		},
		"468": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.px"
		},
		"469": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.py"
		},
		"470": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.pz"
		},
		"472": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.t"
		},
		"473": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.t"
		},
		"475": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"476": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"478": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"479": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"481": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"482": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"484": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"485": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"487": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"488": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"490": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"491": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"493": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"494": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"496": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"497": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"498": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.map"
		},
		"499": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object"
		},
		"500": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream._aliases"
		},
		"501": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object"
		},
		"502": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object.solo"
		},
		"503": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object.mute"
		},
		"504": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object.set"
		},
		"514": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"515": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"516": {
			"sourceFileName": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		}
	}
}