{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "zen",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "Pattern",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "Pattern",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Patterns are the building blocks of Zen. They are used to generate patterns of values in interesting, concise ways."
							}
						]
					},
					"children": [
						{
							"id": 17,
							"name": "aliases",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shorthand aliases for pattern methods."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nqm: 'qmeasurement',\nqms: 'qmeasurements',\nqpb: 'qprobability',\nqpbs: 'qprobabilities',\nqph: 'qphase',\nqphs: 'qphases',\nqr: 'qresult',\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 79,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L79"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 19,
											"name": "qm",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 80,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L80"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'qmeasurement'"
										},
										{
											"id": 20,
											"name": "qms",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 81,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L81"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'qmeasurements'"
										},
										{
											"id": 21,
											"name": "qpb",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 82,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L82"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'qprobability'"
										},
										{
											"id": 22,
											"name": "qpbs",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 83,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L83"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'qprobabilities'"
										},
										{
											"id": 23,
											"name": "qph",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 84,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L84"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'qphase'"
										},
										{
											"id": 24,
											"name": "qphs",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 85,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L85"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'qphases'"
										},
										{
											"id": 25,
											"name": "qr",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "classes/Pattern.ts",
													"line": 86,
													"character": 8,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L86"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'qresult'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												19,
												20,
												21,
												22,
												23,
												24,
												25
											]
										}
									],
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 79,
											"character": 14,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L79"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 306,
							"name": "abs",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1178,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1178"
								}
							],
							"signatures": [
								{
									"id": 307,
									"name": "abs",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the absolute value of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1178,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1178"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 299,
							"name": "acos",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1150,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1150"
								}
							],
							"signatures": [
								{
									"id": 300,
									"name": "acos",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arccosine of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1150,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1150"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 99,
							"name": "add",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 432,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L432"
								}
							],
							"signatures": [
								{
									"id": 100,
									"name": "add",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Add a value to the previous value in the pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).add(12)\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).add('0?12*16')\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 432,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L432"
										}
									],
									"parameters": [
										{
											"id": 101,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 120,
							"name": "and",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 513,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L513"
								}
							],
							"signatures": [
								{
									"id": 121,
									"name": "and",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Compare the previous value in the pattern chain with a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3).and(t().mod(5))\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 513,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L513"
										}
									],
									"parameters": [
										{
											"id": 122,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 297,
							"name": "asin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1141,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1141"
								}
							],
							"signatures": [
								{
									"id": 298,
									"name": "asin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arctangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1141,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1141"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 250,
							"name": "at",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 981,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L981"
								}
							],
							"signatures": [
								{
									"id": 251,
									"name": "at",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get a value, or values, from the previous value in the pattern chain\nIt is assumed that the previous value is an array"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.set({inst:0, cut:0})\ns0.p.n.set('Ddor%16').at('0..8?*16')\ns0.e.every(1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 981,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L981"
										}
									],
									"parameters": [
										{
											"id": 252,
											"name": "i",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "index of value to retrieve, or array of indexes to retrieve. Negative numbers are counted from the end of the array."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"packageName": "zen",
														"packagePath": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 301,
							"name": "atan",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1159,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1159"
								}
							],
							"signatures": [
								{
									"id": 302,
									"name": "atan",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arctangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1159,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1159"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 303,
							"name": "atan2",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1169,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1169"
								}
							],
							"signatures": [
								{
									"id": 304,
									"name": "atan2",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the arctangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1169,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1169"
										}
									],
									"parameters": [
										{
											"id": 305,
											"name": "y",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to divide by"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 253,
							"name": "atr",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1007,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1007"
								}
							],
							"signatures": [
								{
									"id": 254,
									"name": "atr",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "At, but reversed. Given an array of values, it returns the value at the index provided by the previous value in the pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.x.t().atr([0,1,5,4]).div(16)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1007,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1007"
										}
									],
									"parameters": [
										{
											"id": 255,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of values"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 185,
							"name": "bin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 708,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L708"
								}
							],
							"signatures": [
								{
									"id": 186,
									"name": "bin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate truthy or falsy values from a binary string."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.bin('1111') // output depends on the number of division per cycle / canvas. If 16, returns 1 every 4 divisions, 0 otherwise\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 708,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L708"
										}
									],
									"parameters": [
										{
											"id": 187,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "binary string"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'10000000'"
										},
										{
											"id": 188,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 237,
							"name": "btms",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 928,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L928"
								}
							],
							"signatures": [
								{
									"id": 238,
									"name": "btms",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert the previous value from beats to milliseconds, scaling by bpm"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.dur(1).btms()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 928,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L928"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 235,
							"name": "bts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 918,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L918"
								}
							],
							"signatures": [
								{
									"id": 236,
									"name": "bts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert the previous value from beats to seconds, scaling by bpm"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.dur(1).bts().mul(1000)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 918,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L918"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 45,
							"name": "c",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 178,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L178"
								}
							],
							"signatures": [
								{
									"id": 46,
									"name": "c",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return the current cycle"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.set(1)\ns0.x.c()\n```"
													}
												]
											},
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 178,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L178"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 365,
							"name": "cache",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1454,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1454"
								}
							],
							"signatures": [
								{
									"id": 366,
									"name": "cache",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Cache the value. Set how many values to cache and how many times to repeat the cache before it clears"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.random(0,1,1).cache(16,4)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1454,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1454"
										}
									],
									"parameters": [
										{
											"id": 367,
											"name": "size",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of values to cache"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 368,
											"name": "repeats",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of times to repeat the cache before it clears. Default is 1."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 308,
							"name": "ceil",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1187,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1187"
								}
							],
							"signatures": [
								{
									"id": 309,
									"name": "ceil",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the ceiling of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1187,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1187"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 207,
							"name": "clamp",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 797,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L797"
								}
							],
							"signatures": [
								{
									"id": 208,
									"name": "clamp",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Clamp the previous value in the pattern chain to a range."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 797,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L797"
										}
									],
									"parameters": [
										{
											"id": 209,
											"name": "min",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "minimum value"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										},
										{
											"id": 210,
											"name": "max",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "maximum value"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 337,
							"name": "coin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1303,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1303"
								}
							],
							"signatures": [
								{
									"id": 338,
									"name": "coin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`sometimes`"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1303,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1303"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 293,
							"name": "cos",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1123,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1123"
								}
							],
							"signatures": [
								{
									"id": 294,
									"name": "cos",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the cosine of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1123,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1123"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 139,
							"name": "cosine",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 578,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L578"
								}
							],
							"signatures": [
								{
									"id": 140,
									"name": "cosine",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a cosine wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.cosine(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 578,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L578"
										}
									],
									"parameters": [
										{
											"id": 141,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 142,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 143,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 58,
							"name": "count",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 237,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L237"
								}
							],
							"signatures": [
								{
									"id": 59,
									"name": "count",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.x.count(s0.e).div(16)\ns0.e.every('0?1*4|*2')\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 237,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L237"
										}
									],
									"parameters": [
										{
											"id": 60,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 61,
							"name": "counter",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 256,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L256"
								}
							],
							"signatures": [
								{
									"id": 62,
									"name": "counter",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Count up from 0 to n-1 or Infinity if n is 0. \nRestarts the counter each time reset is true."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.set({inst: 1, bank: 'bd'})\ns0.x.counter(16, s0.e).div(z.q)\ns0.e.set('3:8')\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 256,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L256"
										}
									],
									"parameters": [
										{
											"id": 63,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the number to count up to, default is 0"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 64,
											"name": "reset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string that resets the counter"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 149,
							"name": "curve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 606,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L606"
								}
							],
							"signatures": [
								{
									"id": 150,
									"name": "curve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a curve between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 606,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L606"
										}
									],
									"parameters": [
										{
											"id": 151,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 152,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 153,
											"name": "curve",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "curve of the pattern. Default is 0.5, which means a linear curve."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0.5"
										},
										{
											"id": 154,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 332,
							"name": "degrade",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1283,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1283"
								}
							],
							"signatures": [
								{
									"id": 333,
									"name": "degrade",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Degrade the pattern, replacing values with 0 based on a probability"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1283,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1283"
										}
									],
									"parameters": [
										{
											"id": 334,
											"name": "amt",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "amount to degrade by. 1 is fully degraded (all 0s), 0 is not degraded at all"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 111,
							"name": "div",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 476,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L476"
								}
							],
							"signatures": [
								{
									"id": 112,
									"name": "div",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Divide the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).div(2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 476,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L476"
										}
									],
									"parameters": [
										{
											"id": 113,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 114,
							"name": "divr",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 487,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L487"
								}
							],
							"signatures": [
								{
									"id": 115,
									"name": "divr",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reverse divide the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.noise(1,2).divr(2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 487,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L487"
										}
									],
									"parameters": [
										{
											"id": 116,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 90,
							"name": "else",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 399,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L399"
								}
							],
							"signatures": [
								{
									"id": 91,
									"name": "else",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the previous value in the pattern chain is falsy, return a new value, otherwise return previous value."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "- use ifelse() instead, kept for backwards compatibility"
													}
												]
											},
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 399,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L399"
										}
									],
									"parameters": [
										{
											"id": 92,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 223,
							"name": "eq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 864,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L864"
								}
							],
							"signatures": [
								{
									"id": 224,
									"name": "eq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is equal to a value using ==."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 864,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L864"
										}
									],
									"parameters": [
										{
											"id": 225,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to test against"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 233,
							"name": "even",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 908,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L908"
								}
							],
							"signatures": [
								{
									"id": 234,
									"name": "even",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is an even number"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 908,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L908"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 182,
							"name": "every",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 696,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L696"
								}
							],
							"signatures": [
								{
									"id": 183,
									"name": "every",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate truthy or falsy values every n divisions."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(4) // return 1 every 4 divisions, 0 otherwise\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 696,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L696"
										}
									],
									"parameters": [
										{
											"id": 184,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of divisions"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 314,
							"name": "exp",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1214,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1214"
								}
							],
							"signatures": [
								{
									"id": 315,
									"name": "exp",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the exponential of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1214,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1214"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 272,
							"name": "filter",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1063,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1063"
								}
							],
							"signatures": [
								{
									"id": 273,
									"name": "filter",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Filter - filter the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1063,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1063"
										}
									],
									"parameters": [
										{
											"id": 274,
											"name": "cb",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "callback function to apply to each value"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 275,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "classes/Pattern.ts",
															"line": 1063,
															"character": 15,
															"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1063"
														}
													],
													"signatures": [
														{
															"id": 276,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "classes/Pattern.ts",
																	"line": 1063,
																	"character": 16,
																	"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1063"
																}
															],
															"parameters": [
																{
																	"id": 277,
																	"name": "x",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zen",
																			"packagePath": "src/lib/zen/types.ts",
																			"qualifiedName": "patternValue"
																		},
																		"name": "patternValue",
																		"package": "zen"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 310,
							"name": "floor",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1196,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1196"
								}
							],
							"signatures": [
								{
									"id": 311,
									"name": "floor",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the floor of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1196,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1196"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 241,
							"name": "fn",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 949,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L949"
								}
							],
							"signatures": [
								{
									"id": 242,
									"name": "fn",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Provide a callback function to the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.seq([0,1,2,3]).fn(x => x * 2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 949,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L949"
										}
									],
									"parameters": [
										{
											"id": 243,
											"name": "cb",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 244,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "classes/Pattern.ts",
															"line": 949,
															"character": 11,
															"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L949"
														}
													],
													"signatures": [
														{
															"id": 245,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "classes/Pattern.ts",
																	"line": 949,
																	"character": 12,
																	"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L949"
																}
															],
															"parameters": [
																{
																	"id": 246,
																	"name": "x",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zen",
																			"packagePath": "src/lib/zen/types.ts",
																			"qualifiedName": "patternValue"
																		},
																		"name": "patternValue",
																		"package": "zen"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zen",
																	"packagePath": "src/lib/zen/types.ts",
																	"qualifiedName": "patternValue"
																},
																"name": "patternValue",
																"package": "zen"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 211,
							"name": "gt",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 811,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L811"
								}
							],
							"signatures": [
								{
									"id": 212,
									"name": "gt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is greater than a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,1).gt(0.3).ifelse(60, 72)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 811,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L811"
										}
									],
									"parameters": [
										{
											"id": 213,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to test against"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 217,
							"name": "gte",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 838,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L838"
								}
							],
							"signatures": [
								{
									"id": 218,
									"name": "gte",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is greater than or equal to a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,1).gte(0.3).ifelse(60, 72)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 838,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L838"
										}
									],
									"parameters": [
										{
											"id": 219,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to test against"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 65,
							"name": "hold",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 276,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L276"
								}
							],
							"signatures": [
								{
									"id": 66,
									"name": "hold",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When trigger is true, samples the value returned by the previous pattern in the chain, and holds it until the next trigger."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(5)\ns0.x.noise().hold(s0.e)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 276,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L276"
										}
									],
									"parameters": [
										{
											"id": 67,
											"name": "trigger",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 87,
							"name": "if",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 383,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L383"
								}
							],
							"signatures": [
								{
									"id": 88,
									"name": "if",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the previous value in the pattern chain is truthy, return a new value, otherwise return previous value."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "- use ifelse() instead, kept for backwards compatibility"
													}
												]
											},
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 383,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L383"
										}
									],
									"parameters": [
										{
											"id": 89,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 83,
							"name": "ifelse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 368,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L368"
								}
							],
							"signatures": [
								{
									"id": 84,
									"name": "ifelse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is a truthy or falsy value\nIf true return new value, if false, simply pass on the previous value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 368,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L368"
										}
									],
									"parameters": [
										{
											"id": 85,
											"name": "ifValue",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 86,
											"name": "elseValue",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 329,
							"name": "interpolate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1273,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1273"
								}
							],
							"signatures": [
								{
									"id": 330,
									"name": "interpolate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Interpolate between a value and the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.y.sine().intrp(sine(1,0,0,0.5))\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1273,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1273"
										}
									],
									"parameters": [
										{
											"id": 331,
											"name": "val",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to interpolate to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 247,
							"name": "inversion",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 960,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L960"
								}
							],
							"signatures": [
								{
									"id": 248,
									"name": "inversion",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Invert the previous chord in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set('Cmi7').inversion(1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 960,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L960"
										}
									],
									"parameters": [
										{
											"id": 249,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "inversion"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 229,
							"name": "invert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 890,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L890"
								}
							],
							"signatures": [
								{
									"id": 230,
									"name": "invert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Invert the previous value in the pattern chain - like a bitwise NOT.\nReturns a 0 if true, and a 1 if false."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 890,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L890"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 79,
							"name": "io",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 351,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L351"
								}
							],
							"signatures": [
								{
									"id": 80,
									"name": "io",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "On/off. Returns 1 when on, 0 when off.\nTrue values passed to the first argument will turn the pattern on, false values are ignored.\nTrue values passed to the second argument will turn the pattern off, false values are ignored."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.io(s1.e, s2.e)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 351,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L351"
										}
									],
									"parameters": [
										{
											"id": 81,
											"name": "i",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										},
										{
											"id": 82,
											"name": "o",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 288,
							"name": "layer",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1104,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1104"
								}
							],
							"signatures": [
								{
									"id": 289,
									"name": "layer",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Layer a value on top of the previous value in the pattern chain, forming an array of values"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set('Ddor%16..*16').layer(62)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1104,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1104"
										}
									],
									"parameters": [
										{
											"id": 290,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 316,
							"name": "log",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1223,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1223"
								}
							],
							"signatures": [
								{
									"id": 317,
									"name": "log",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the natural log of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1223,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1223"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 214,
							"name": "lt",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 824,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L824"
								}
							],
							"signatures": [
								{
									"id": 215,
									"name": "lt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is less than a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 824,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L824"
										}
									],
									"parameters": [
										{
											"id": 216,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to test against"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 220,
							"name": "lte",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 851,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L851"
								}
							],
							"signatures": [
								{
									"id": 221,
									"name": "lte",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is less than or equal to a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 851,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L851"
										}
									],
									"parameters": [
										{
											"id": 222,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to test against"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 258,
							"name": "map",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1036,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1036"
								}
							],
							"signatures": [
								{
									"id": 259,
									"name": "map",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Map - apply a function to each value in the previous value in the pattern chain"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1036,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1036"
										}
									],
									"parameters": [
										{
											"id": 260,
											"name": "cb",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "callback function to apply to each value"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 261,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "classes/Pattern.ts",
															"line": 1036,
															"character": 12,
															"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1036"
														}
													],
													"signatures": [
														{
															"id": 262,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "classes/Pattern.ts",
																	"line": 1036,
																	"character": 13,
																	"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1036"
																}
															],
															"parameters": [
																{
																	"id": 263,
																	"name": "x",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zen",
																			"packagePath": "src/lib/zen/types.ts",
																			"qualifiedName": "patternValue"
																		},
																		"name": "patternValue",
																		"package": "zen"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zen",
																	"packagePath": "src/lib/zen/types.ts",
																	"qualifiedName": "patternValue"
																},
																"name": "patternValue",
																"package": "zen"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 343,
							"name": "markov",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1345,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1345"
								}
							],
							"signatures": [
								{
									"id": 344,
									"name": "markov",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Markov pattern generator"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.set({inst: 1})\ns0.p.bank.set(['bd', 'sd', 'hh']).at(\nmarkov(\n[[0,0.1,0.9], [0.25,0.1,0.9], [0.5,0.25,0.5]]),\n64,\n0.25\n)\ns0.e.set(1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1345,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1345"
										}
									],
									"parameters": [
										{
											"id": 345,
											"name": "matrix",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "transition matrix"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											}
										},
										{
											"id": 346,
											"name": "states",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of states to generate in the pattern. If 0, uses z.q. Default is 0."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 347,
											"name": "frequency",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "frequency - number of patterns to generate per cycle. Default is 1."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 318,
							"name": "max",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1233,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1233"
								}
							],
							"signatures": [
								{
									"id": 319,
									"name": "max",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the maximum of the previous value in the pattern chain and a given value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1233,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1233"
										}
									],
									"parameters": [
										{
											"id": 320,
											"name": "compare",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to compare to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 348,
							"name": "midicc",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1365,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1365"
								}
							],
							"signatures": [
								{
									"id": 349,
									"name": "midicc",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Use a midi cc on the selected device"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.vol.midicc(1,0.5,0)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1365,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1365"
										}
									],
									"parameters": [
										{
											"id": 350,
											"name": "cc",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "control change number"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										},
										{
											"id": 351,
											"name": "device",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "midi device index (default is 0)"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 352,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "initial value (default is 1)"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 356,
							"name": "midifile",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1394,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1394"
								}
							],
							"signatures": [
								{
									"id": 357,
									"name": "midifile",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Use the notes from a midi file"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.midifile('path/to/midi.mid', 'n')\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.dur.midifile('path/to/midi.mid', 'dur').btms()\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.midifile('path/to/midi.mid', 'e')\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1394,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1394"
										}
									],
									"parameters": [
										{
											"id": 358,
											"name": "path",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "url path to midi file, must be available to the browser"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 359,
											"name": "param",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "e | n | dur. Default n."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'n'"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 353,
							"name": "midinote",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1380,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1380"
								}
							],
							"signatures": [
								{
									"id": 354,
									"name": "midinote",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Use the currently pressed key(s) on the selected device"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.midinote()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1380,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1380"
										}
									],
									"parameters": [
										{
											"id": 355,
											"name": "device",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "midi device index (default is 0)"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 321,
							"name": "min",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1243,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1243"
								}
							],
							"signatures": [
								{
									"id": 322,
									"name": "min",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the minimum of the previous value in the pattern chain and a given value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1243,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1243"
										}
									],
									"parameters": [
										{
											"id": 323,
											"name": "compare",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to compare to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 117,
							"name": "mod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 498,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L498"
								}
							],
							"signatures": [
								{
									"id": 118,
									"name": "mod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Modulo the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.n.set(t).mod(12).add(36)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 498,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L498"
										}
									],
									"parameters": [
										{
											"id": 119,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 93,
							"name": "mtr",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 418,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L418"
								}
							],
							"signatures": [
								{
									"id": 94,
									"name": "mtr",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Map the preceding value in the chain to a new range."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 418,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L418"
										}
									],
									"parameters": [
										{
											"id": 95,
											"name": "outMin",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the new minimum value"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										},
										{
											"id": 96,
											"name": "outMax",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the new maximum value"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										},
										{
											"id": 97,
											"name": "inMin",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the minimum value of the input range. Default is 0."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 98,
											"name": "inMax",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the maximum value of the input range. Default is 1."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 108,
							"name": "mul",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 465,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L465"
								}
							],
							"signatures": [
								{
									"id": 109,
									"name": "mul",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Multiply the previous value in the pattern chain by a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).mul(2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 465,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L465"
										}
									],
									"parameters": [
										{
											"id": 110,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 226,
							"name": "neq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 877,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L877"
								}
							],
							"signatures": [
								{
									"id": 227,
									"name": "neq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is not equal to a value using !=."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 877,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L877"
										}
									],
									"parameters": [
										{
											"id": 228,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to test against"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 176,
							"name": "noise",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 683,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L683"
								}
							],
							"signatures": [
								{
									"id": 177,
									"name": "noise",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a number between lo and hi, using a simplex noise function."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.pan.noise(0, 1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 683,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L683"
										}
									],
									"parameters": [
										{
											"id": 178,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 179,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 180,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 181,
											"name": "cycles",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of cycles of the pattern. Default is 4."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "4"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 73,
							"name": "not",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 315,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L315"
								}
							],
							"signatures": [
								{
									"id": 74,
									"name": "not",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Negate the value passed as the first argument"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3)\ns1.e.not(s0.e)\ns3.e.every(1).and(not(s0.e)).and(not(s1.e))\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 315,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L315"
										}
									],
									"parameters": [
										{
											"id": 75,
											"name": "x",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 189,
							"name": "ntbin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 724,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L724"
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "ntbin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert a number to binary string, then passes it to .bin()."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.ntbin(9, 8) // 9 in binary is 1001, padded out to 8 digits. Passes 00001001 to .bin()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 724,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L724"
										}
									],
									"parameters": [
										{
											"id": 191,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a number"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 192,
											"name": "q",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the length of the binary string"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "8"
										},
										{
											"id": 193,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 231,
							"name": "odd",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 899,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L899"
								}
							],
							"signatures": [
								{
									"id": 232,
									"name": "odd",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if the previous value in the pattern chain is an odd number"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 899,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L899"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 341,
							"name": "often",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1325,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1325"
								}
							],
							"signatures": [
								{
									"id": 342,
									"name": "often",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "75/25 chance of returning a 1 or 0"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.often()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1325,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1325"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 360,
							"name": "once",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1419,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1419"
								}
							],
							"signatures": [
								{
									"id": 361,
									"name": "once",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a 1 the first time it is called, and 0 thereafter"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.once()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1419,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1419"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 123,
							"name": "or",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 524,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L524"
								}
							],
							"signatures": [
								{
									"id": 124,
									"name": "or",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Compare the previous value in the pattern chain with a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3).or(t().mod(2))\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 524,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L524"
										}
									],
									"parameters": [
										{
											"id": 125,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 369,
							"name": "pack",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1488,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1488"
								}
							],
							"signatures": [
								{
									"id": 370,
									"name": "pack",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Pack all arguments into an array\nArguments can be a value, instance of Pattern, or Zen pattern string\nEach will be evaluated and packed into an array"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.x.sine()\ns0.y.noise()\ns0.p.pack(s0.x, s0.y).print().fn(([x, y]) => ...)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1488,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1488"
										}
									],
									"parameters": [
										{
											"id": 371,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"packageName": "zen",
														"packagePath": "src/lib/zen/types.ts",
														"qualifiedName": "patternable"
													},
													"name": "patternable",
													"package": "zen"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 362,
							"name": "persist",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1433,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1433"
								}
							],
							"signatures": [
								{
									"id": 363,
									"name": "persist",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Modify the value returned by a previous iteration of the pattern"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nz.grid.persist((t, prev) => prev ? [...prev, Math.random()] : [])\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1433,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1433"
										}
									],
									"parameters": [
										{
											"id": 364,
											"name": "fn",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Function"
												},
												"name": "Function",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 324,
							"name": "pow",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1253,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1253"
								}
							],
							"signatures": [
								{
									"id": 325,
									"name": "pow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The previous value in the pattern chain to the power of a given value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1253,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1253"
										}
									],
									"parameters": [
										{
											"id": 326,
											"name": "exponent",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "2"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 389,
							"name": "print",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1594,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1594"
								}
							],
							"signatures": [
								{
									"id": 390,
									"name": "print",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Post the current value to the console"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set('Cmi7').print('s0.p.n')\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1594,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1594"
										}
									],
									"parameters": [
										{
											"id": 391,
											"name": "prefix",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "optional prefix to the message"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 160,
							"name": "pulse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 638,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L638"
								}
							],
							"signatures": [
								{
									"id": 161,
									"name": "pulse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a pulse wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.pulse(0, 10, 0.25)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 638,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L638"
										}
									],
									"parameters": [
										{
											"id": 162,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 163,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 164,
											"name": "width",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "width of the pulse. Default is 0.5, which means a square wave."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0.5"
										},
										{
											"id": 165,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 47,
							"name": "q",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 187,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L187"
								}
							],
							"signatures": [
								{
									"id": 48,
									"name": "q",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return the current divisions per cycle"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 187,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L187"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 372,
							"name": "qmeasurement",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1499,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1499"
								}
							],
							"signatures": [
								{
									"id": 373,
									"name": "qmeasurement",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return the value of the measured qubit"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.measurement(0)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1499,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1499"
										}
									],
									"parameters": [
										{
											"id": 374,
											"name": "qubit",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "qubit to measure"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 375,
							"name": "qmeasurements",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1512,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1512"
								}
							],
							"signatures": [
								{
									"id": 376,
									"name": "qmeasurements",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return all measurements of the system as an array"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.measurements()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1512,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1512"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 382,
							"name": "qphase",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1556,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1556"
								}
							],
							"signatures": [
								{
									"id": 383,
									"name": "qphase",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the phase of a given state of the quantum system. \nAssuming that this value is between -PI and +PI, the result is normalised"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.phase.qphase(0).print()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1556,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1556"
										}
									],
									"parameters": [
										{
											"id": 384,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "state to get phase of, as an integer"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 385,
							"name": "qphases",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1570,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1570"
								}
							],
							"signatures": [
								{
									"id": 386,
									"name": "qphases",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns an array of phases for all basis states of the quantum system"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.phases.qphases().print()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1570,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1570"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 380,
							"name": "qprobabilities",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1537,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1537"
								}
							],
							"signatures": [
								{
									"id": 381,
									"name": "qprobabilities",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns an array of probabilities (squared amplitude coefficients) for all possible states of the quantum system"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.probs.qprobabilities().print()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1537,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1537"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 377,
							"name": "qprobability",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1523,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1523"
								}
							],
							"signatures": [
								{
									"id": 378,
									"name": "qprobability",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return the probability (squared amplitude coefficient) for a given state of the quantum system"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.amplitude(0).print()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1523,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1523"
										}
									],
									"parameters": [
										{
											"id": 379,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "state to get amplitude of, as an integer"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 387,
							"name": "qresult",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1584,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1584"
								}
							],
							"signatures": [
								{
									"id": 388,
									"name": "qresult",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the measured state as an integer - \nie. in a 2-qubit system, 00 = 0, 01 = 1, 10 = 2, 11 = 3"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.res.qresult().print()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1584,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1584"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 171,
							"name": "random",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 667,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L667"
								}
							],
							"signatures": [
								{
									"id": 172,
									"name": "random",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a random number between lo and hi."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.random(60,72,1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 667,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L667"
										}
									],
									"parameters": [
										{
											"id": 173,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 174,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 175,
											"name": "step",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "step size to round the output. Default is 0, which means no rounding."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 129,
							"name": "range",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 549,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L549"
								}
							],
							"signatures": [
								{
									"id": 130,
									"name": "range",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a range of values between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.range(0, 10, 1, 2)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 549,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L549"
										}
									],
									"parameters": [
										{
											"id": 131,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 132,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 133,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 339,
							"name": "rarely",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1314,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1314"
								}
							],
							"signatures": [
								{
									"id": 340,
									"name": "rarely",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "25/75 chance of returning 1 or 0"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.rarely()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1314,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1314"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 264,
							"name": "reduce",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1050,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1050"
								}
							],
							"signatures": [
								{
									"id": 265,
									"name": "reduce",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reduce - reduce the previous value in the pattern chain to a single value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1050,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1050"
										}
									],
									"parameters": [
										{
											"id": 266,
											"name": "cb",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "callback function to apply to each value"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 267,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "classes/Pattern.ts",
															"line": 1050,
															"character": 15,
															"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1050"
														}
													],
													"signatures": [
														{
															"id": 268,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "classes/Pattern.ts",
																	"line": 1050,
																	"character": 16,
																	"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1050"
																}
															],
															"parameters": [
																{
																	"id": 269,
																	"name": "acc",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zen",
																			"packagePath": "src/lib/zen/types.ts",
																			"qualifiedName": "patternValue"
																		},
																		"name": "patternValue",
																		"package": "zen"
																	}
																},
																{
																	"id": 270,
																	"name": "x",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zen",
																			"packagePath": "src/lib/zen/types.ts",
																			"qualifiedName": "patternValue"
																		},
																		"name": "patternValue",
																		"package": "zen"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zen",
																	"packagePath": "src/lib/zen/types.ts",
																	"qualifiedName": "patternValue"
																},
																"name": "patternValue",
																"package": "zen"
															}
														}
													]
												}
											}
										},
										{
											"id": 271,
											"name": "initial",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "initial value to start the reduction"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternValue"
												},
												"name": "patternValue",
												"package": "zen"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 26,
							"name": "rng",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 89,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L89"
								}
							],
							"signatures": [
								{
									"id": 27,
									"name": "rng",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 89,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L89"
										}
									],
									"parameters": [
										{
											"id": 28,
											"name": "t",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 312,
							"name": "round",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1205,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1205"
								}
							],
							"signatures": [
								{
									"id": 313,
									"name": "round",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Round the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1205,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1205"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 144,
							"name": "saw",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 594,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L594"
								}
							],
							"signatures": [
								{
									"id": 145,
									"name": "saw",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a saw wave between lo and hi. Alias of range. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.saw(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 594,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L594"
										}
									],
									"parameters": [
										{
											"id": 146,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										},
										{
											"id": 147,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										},
										{
											"id": 148,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 194,
							"name": "seq",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 735,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L735"
								}
							],
							"signatures": [
								{
									"id": 195,
									"name": "seq",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Choose from a sequence of values. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.seq([60,72,74,76])\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 735,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L735"
										}
									],
									"parameters": [
										{
											"id": 196,
											"name": "values",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "an array of values"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											"defaultValue": "[]"
										},
										{
											"id": 197,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the sequence, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 52,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 211,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L211"
								}
							],
							"signatures": [
								{
									"id": 53,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set a single value"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.set(1)\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns1.e.set(s0.e)\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.set('1?0*16')\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.x.set(t => t) // run a function, with the first argument being the current time\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 211,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L211"
										}
									],
									"parameters": [
										{
											"id": 54,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a single string or number or array of strings or numbers, or a Pattern, or a Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 291,
							"name": "sin",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1114,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1114"
								}
							],
							"signatures": [
								{
									"id": 292,
									"name": "sin",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the sine of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1114,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1114"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 134,
							"name": "sine",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 562,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L562"
								}
							],
							"signatures": [
								{
									"id": 135,
									"name": "sine",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a sine wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.sine(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 562,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L562"
										}
									],
									"parameters": [
										{
											"id": 136,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 137,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 138,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 256,
							"name": "size",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1022,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1022"
								}
							],
							"signatures": [
								{
									"id": 257,
									"name": "size",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Size - number of values in the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set([0,1,2,3]).size() // returns 4\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set('Cmaj7').size() // returns 4\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.set('Cmaj7..*16').size() // returns 1\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1022,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1022"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 278,
							"name": "slice",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1077,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1077"
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "slice",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Slice - slice the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1077,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1077"
										}
									],
									"parameters": [
										{
											"id": 280,
											"name": "start",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "start index of the slice"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 281,
											"name": "end",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "end index of the slice"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "Infinity"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 201,
							"name": "snap",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 759,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L759"
								}
							],
							"signatures": [
								{
									"id": 202,
									"name": "snap",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Snap the previous value in the pattern chain to the nearest value in an array."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.x.random(0,1).snap([0,0.25,0.5,0.75])\ns0.e.set(1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 759,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L759"
										}
									],
									"parameters": [
										{
											"id": 203,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of values to snap to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 282,
							"name": "some",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1090,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1090"
								}
							],
							"signatures": [
								{
									"id": 283,
									"name": "some",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some - test if some values in the previous value in the pattern chain pass a test"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1090,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1090"
										}
									],
									"parameters": [
										{
											"id": 284,
											"name": "cb",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "callback function to apply to each value"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 285,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "classes/Pattern.ts",
															"line": 1090,
															"character": 13,
															"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1090"
														}
													],
													"signatures": [
														{
															"id": 286,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "classes/Pattern.ts",
																	"line": 1090,
																	"character": 14,
																	"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1090"
																}
															],
															"parameters": [
																{
																	"id": 287,
																	"name": "x",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zen",
																			"packagePath": "src/lib/zen/types.ts",
																			"qualifiedName": "patternValue"
																		},
																		"name": "patternValue",
																		"package": "zen"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 335,
							"name": "sometimes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1295,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1295"
								}
							],
							"signatures": [
								{
									"id": 336,
									"name": "sometimes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "50/50 chance of returning 1 or 0. Also, use "
											},
											{
												"kind": "code",
												"text": "`coin()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.sometimes()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1295,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1295"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 327,
							"name": "sqrt",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1262,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1262"
								}
							],
							"signatures": [
								{
									"id": 328,
									"name": "sqrt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the square root of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1262,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1262"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 166,
							"name": "square",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 654,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L654"
								}
							],
							"signatures": [
								{
									"id": 167,
									"name": "square",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a square wave between lo and hi. Use as the first call in a pattern chain. See also pulse."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.modi.square(0, 10)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 654,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L654"
										}
									],
									"parameters": [
										{
											"id": 168,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 169,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 170,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 198,
							"name": "step",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 747,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L747"
								}
							],
							"signatures": [
								{
									"id": 199,
									"name": "step",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Round the previous value in the pattern chain to the step value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 747,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L747"
										}
									],
									"parameters": [
										{
											"id": 200,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to round to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 102,
							"name": "sub",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 443,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L443"
								}
							],
							"signatures": [
								{
									"id": 103,
									"name": "sub",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Subtract a value from the previous value in the pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(60,72,1).sub(12)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 443,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L443"
										}
									],
									"parameters": [
										{
											"id": 104,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 105,
							"name": "subr",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 454,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L454"
								}
							],
							"signatures": [
								{
									"id": 106,
									"name": "subr",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reverse subtract. Subtract the previous value in the pattern chain from a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.noise(0.5,0.25).subr(1)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 454,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L454"
										}
									],
									"parameters": [
										{
											"id": 107,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 43,
							"name": "t",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 166,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L166"
								}
							],
							"signatures": [
								{
									"id": 44,
									"name": "t",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return the current time"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.x.t().mul(2)\n```"
													}
												]
											},
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 166,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L166"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 295,
							"name": "tan",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 1132,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1132"
								}
							],
							"signatures": [
								{
									"id": 296,
									"name": "tan",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get the tangent of the previous value in the pattern chain"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 1132,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1132"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 76,
							"name": "toggle",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 333,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L333"
								}
							],
							"signatures": [
								{
									"id": 77,
									"name": "toggle",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Toggle on or off using the value passed as the first argument\nA true value will toggle the pattern on, a false value will toggle it off"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(8)\ns1.e.toggle(s0.e)\ns1.y.set(0.5)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 333,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L333"
										}
									],
									"parameters": [
										{
											"id": 78,
											"name": "x",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 155,
							"name": "tri",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 621,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L621"
								}
							],
							"signatures": [
								{
									"id": 156,
									"name": "tri",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a triangle wave between lo and hi. Use as the first call in a pattern chain."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.harm.tri(0, 4, 0.25)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 621,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L621"
										}
									],
									"parameters": [
										{
											"id": 157,
											"name": "lo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "lowest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "0"
										},
										{
											"id": 158,
											"name": "hi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "highest value in range"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										},
										{
											"id": 159,
											"name": "freq",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of iterations of the pattern, either per cycle or per canvas. Default is 1, which means once per cycle."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 239,
							"name": "ttms",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 938,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L938"
								}
							],
							"signatures": [
								{
									"id": 240,
									"name": "ttms",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Convert the previous value from divisions of a bar to seconds, scaling by bpm"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.q().ttms()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 938,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L938"
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 204,
							"name": "tune",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 774,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L774"
								}
							],
							"signatures": [
								{
									"id": 205,
									"name": "tune",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Round the previous value in the pattern chain to the nearest value in an array."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.n.noise(0,12).tune([0,2,4,5,7,9,11,12]).add(36)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 774,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L774"
										}
									],
									"parameters": [
										{
											"id": 206,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of values to round to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 68,
							"name": "use",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 293,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L293"
								}
							],
							"signatures": [
								{
									"id": 69,
									"name": "use",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Inset another pattern's stack into the current pattern's stack"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.p.amp.sine()\ns1.p.pan.use(s0.p.amp);\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 293,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L293"
										}
									],
									"parameters": [
										{
											"id": 70,
											"name": "pattern",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "an instance of another pattern"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2,
												"name": "Pattern",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 126,
							"name": "xor",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Pattern.ts",
									"line": 535,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L535"
								}
							],
							"signatures": [
								{
									"id": 127,
									"name": "xor",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Compare the previous value in the pattern chain with a value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.e.every(3).xor(t().mod(2))\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Pattern.ts",
											"line": 535,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L535"
										}
									],
									"parameters": [
										{
											"id": 128,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a value, instance of Pattern, or Zen pattern string"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "patternable"
												},
												"name": "patternable",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Pattern",
										"package": "zen"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17
							]
						},
						{
							"title": "Methods",
							"children": [
								306,
								299,
								99,
								120,
								297,
								250,
								301,
								303,
								253,
								185,
								237,
								235,
								45,
								365,
								308,
								207,
								337,
								293,
								139,
								58,
								61,
								149,
								332,
								111,
								114,
								90,
								223,
								233,
								182,
								314,
								272,
								310,
								241,
								211,
								217,
								65,
								87,
								83,
								329,
								247,
								229,
								79,
								288,
								316,
								214,
								220,
								258,
								343,
								318,
								348,
								356,
								353,
								321,
								117,
								93,
								108,
								226,
								176,
								73,
								189,
								231,
								341,
								360,
								123,
								369,
								362,
								324,
								389,
								160,
								47,
								372,
								375,
								382,
								385,
								380,
								377,
								387,
								171,
								129,
								339,
								264,
								26,
								312,
								144,
								194,
								52,
								291,
								134,
								256,
								278,
								201,
								282,
								335,
								327,
								166,
								198,
								102,
								105,
								43,
								295,
								76,
								155,
								239,
								204,
								68,
								126
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Pattern.ts",
							"line": 31,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L31"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"target": {
								"packageName": "zen",
								"packagePath": "src/lib/zen/types.ts",
								"qualifiedName": "Dictionary"
							},
							"name": "Dictionary",
							"package": "zen"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Pattern.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Pattern.ts#L1"
				}
			]
		},
		{
			"id": 548,
			"name": "Stream",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 549,
					"name": "Stream",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A stream is a musical layer. You can use a stream to map musical parameters across time and space. \nWhen a stream triggers an event, musical parameters are determined by the stream's position in time and space.\nWhen a stream triggers a mutation, all active events are mutated based on the stream's position in time and space.\n\nStreams are available within Zen as "
							},
							{
								"kind": "code",
								"text": "`s0`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s1`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s2`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s3`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s4`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s5`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s6`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`s7`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ns0.set({inst: 'synth', n: 60}) // set the stream's default parameters\ns0.p.lag.set(1).btms()\ns0.px._modi.saw(1,10) // map the synth's modulation index across the x axis\ns0.py._harm.range(0,10,1) // map the synth's harmonic series across the y axis\ns0.x.saw() // move the stream across the x axis of the canvas\ns0.y.noise(0,1,0,0.5) // move the stream across the y axis of the canvas\ns0.e.every(4) // trigger an event every 4 divisions\ns0.m.not(s0.e)\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 591,
							"name": "map",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to map parameter names to different keys. Useful for mapping to MIDI controllers"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.map = {amp: 'cc1', cutoff: 'cc74'}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 194,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L194"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 592,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 194,
											"character": 10,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L194"
										}
									]
								}
							},
							"defaultValue": "{}"
						},
						{
							"id": 558,
							"name": "p",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across time"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.p.amp.range(0,1) // ramp amp from 0 to 1 across the cycle\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 44,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L44"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "zen",
									"packagePath": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen"
							}
						},
						{
							"id": 605,
							"name": "ps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@alias",
										"content": [
											{
												"kind": "text",
												"text": "for "
											},
											{
												"kind": "code",
												"text": "`params`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 243,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L243"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 606,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 235,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
										}
									],
									"signatures": [
										{
											"id": 607,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Set multiple stream parameter using key/value pairs"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": []
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 235,
													"character": 4,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
												}
											],
											"parameters": [
												{
													"id": 608,
													"name": "ps",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "key/value pairs"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zen",
															"packagePath": "src/lib/zen/types.ts",
															"qualifiedName": "Dictionary"
														},
														"name": "Dictionary",
														"package": "zen"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "this"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 559,
							"name": "px",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the x axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.px.amp.range(0,1) // ramp amp from 0 to 1 across the x axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 51,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "zen",
									"packagePath": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen"
							}
						},
						{
							"id": 560,
							"name": "py",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the y axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.py.amp.range(0,1) // ramp amp from 0 to 1 across the y axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 58,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L58"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "zen",
									"packagePath": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen"
							}
						},
						{
							"id": 561,
							"name": "pz",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the z axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.pz.amp.range(0,1) // ramp amp from 0 to 1 across the z axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 65,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L65"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "zen",
									"packagePath": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen"
							}
						},
						{
							"id": 609,
							"name": "set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@alias",
										"content": [
											{
												"kind": "text",
												"text": "for "
											},
											{
												"kind": "code",
												"text": "`params`"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "use "
											},
											{
												"kind": "code",
												"text": "`params`"
											},
											{
												"kind": "text",
												"text": " or  "
											},
											{
												"kind": "code",
												"text": "`ps`"
											},
											{
												"kind": "text",
												"text": " instead - kept for backwards compatibility"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 249,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L249"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 610,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 235,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
										}
									],
									"signatures": [
										{
											"id": 611,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Set multiple stream parameter using key/value pairs"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": []
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 235,
													"character": 4,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
												}
											],
											"parameters": [
												{
													"id": 612,
													"name": "ps",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "key/value pairs"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zen",
															"packagePath": "src/lib/zen/types.ts",
															"qualifiedName": "Dictionary"
														},
														"name": "Dictionary",
														"package": "zen"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "this"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 578,
							"name": "e",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 136,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L136"
								}
							],
							"getSignature": {
								"id": 579,
								"name": "e",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether the stream should trigger an event"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.set(1) // trigger an event every division\ns0.e.every(4) // trigger an event every 4 divisions\ns0.e.bin('1000 1001') // use a binary pattern to trigger events\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 136,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L136"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 589,
							"name": "i",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 185,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L185"
								}
							],
							"getSignature": {
								"id": 590,
								"name": "i",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The stream's index number"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.id // 0\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 185,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L185"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 581,
							"name": "m",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 149,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L149"
								}
							],
							"getSignature": {
								"id": 582,
								"name": "m",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to mutate all active events in the stream. Only mutates parameters prefixed with "
										},
										{
											"kind": "code",
											"text": "`_`"
										},
										{
											"kind": "text",
											"text": ", e.g. "
										},
										{
											"kind": "code",
											"text": "`_amp`"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.m.set(1) // mutate all active events every division\ns0.m.every(4) // mutate all active events every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 149,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L149"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 584,
							"name": "mute",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 162,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L162"
								}
							],
							"getSignature": {
								"id": 585,
								"name": "mute",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to mute the stream"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.mute.set(1) // mute the stream every division\ns0.mute.every(4) // mute the stream every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 162,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L162"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 587,
							"name": "solo",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 175,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L175"
								}
							],
							"getSignature": {
								"id": 588,
								"name": "solo",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to solo the stream. If true, mutes all other streams"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.solo.set(1) // solo the stream every division\ns0.solo.every(4) // solo the stream every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 175,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L175"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 563,
							"name": "t",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 74,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L74"
								}
							],
							"getSignature": {
								"id": 564,
								"name": "t",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in time"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.t.sine(0,16,1) // override the global t with a sine wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 74,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L74"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 566,
							"name": "x",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 86,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L86"
								}
							],
							"getSignature": {
								"id": 567,
								"name": "x",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.x.saw() // move the stream across the x axis of the canvas with a saw wave\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 86,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L86"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 575,
							"name": "xyz",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 122,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L122"
								}
							],
							"getSignature": {
								"id": 576,
								"name": "xyz",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting all axes of the stream's position at the same time. Expects an array of values"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.xyz.set([0,0.5,0])\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 122,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L122"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 569,
							"name": "y",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 98,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L98"
								}
							],
							"getSignature": {
								"id": 570,
								"name": "y",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.y.saw() // move the stream across the y axis of the canvas with a saw wave\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 98,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L98"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 572,
							"name": "z",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 110,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L110"
								}
							],
							"getSignature": {
								"id": 573,
								"name": "z",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.z.saw() // move the stream across the z axis of the canvas with a saw wave\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 110,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L110"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 602,
							"name": "params",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 235,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
								}
							],
							"signatures": [
								{
									"id": 603,
									"name": "params",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set multiple stream parameter using key/value pairs"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 235,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
										}
									],
									"parameters": [
										{
											"id": 604,
											"name": "ps",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "key/value pairs"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "Dictionary"
												},
												"name": "Dictionary",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								591,
								558,
								605,
								559,
								560,
								561,
								609
							]
						},
						{
							"title": "Accessors",
							"children": [
								578,
								589,
								581,
								584,
								587,
								563,
								566,
								575,
								569,
								572
							]
						},
						{
							"title": "Methods",
							"children": [
								602
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Stream.ts",
							"line": 23,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L23"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 404,
							"name": "Zen"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						549
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Stream.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L1"
				}
			]
		},
		{
			"id": 636,
			"name": "Wire",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 637,
					"name": "Wire",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Wire class represents a single wire in a quantum circuit. They are represented in Zen as q0, q1, q2, etc. \nIt uses the Quantum Circuit package to implement quantum gates. \nSome gates are documented here. See https://www.npmjs.com/package/quantum-circuit#implemented-gates for a list of all implemented gates."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nq0.h().cx([1])\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 687,
							"name": "ccx",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 208,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L208"
								}
							],
							"signatures": [
								{
									"id": 688,
									"name": "ccx",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Toffoli gate, or CCNOT gate"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 208,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L208"
										}
									],
									"parameters": [
										{
											"id": 689,
											"name": "connectedQubits",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "index or array of indexes"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											"defaultValue": "[]"
										},
										{
											"id": 690,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 683,
							"name": "cx",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 199,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L199"
								}
							],
							"signatures": [
								{
									"id": 684,
									"name": "cx",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Controlled NOT gate, or CNOT gate"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 199,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L199"
										}
									],
									"parameters": [
										{
											"id": 685,
											"name": "connectedQubits",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "index or array of indexes"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											"defaultValue": "[]"
										},
										{
											"id": 686,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 695,
							"name": "fb",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 225,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L225"
								}
							],
							"signatures": [
								{
									"id": 696,
									"name": "fb",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Use the last measure as the initial state of the qubit"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 225,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L225"
										}
									],
									"parameters": [
										{
											"id": 697,
											"name": "stream",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "index of the stream to use"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 668,
							"name": "h",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 163,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L163"
								}
							],
							"signatures": [
								{
									"id": 669,
									"name": "h",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hadamard gate"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 163,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L163"
										}
									],
									"parameters": [
										{
											"id": 670,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 702,
							"name": "import",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 250,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L250"
								}
							],
							"signatures": [
								{
									"id": 703,
									"name": "import",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "import a circuit from QASM code"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 250,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L250"
										}
									],
									"parameters": [
										{
											"id": 704,
											"name": "code",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 698,
							"name": "random",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 242,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L242"
								}
							],
							"signatures": [
								{
									"id": 699,
									"name": "random",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Generate a random circuit"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 242,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L242"
										}
									],
									"parameters": [
										{
											"id": 700,
											"name": "numQubits",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of qubits"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "4"
										},
										{
											"id": 701,
											"name": "numGates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of gates"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "8"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 671,
							"name": "rx",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 172,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L172"
								}
							],
							"signatures": [
								{
									"id": 672,
									"name": "rx",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around the X-axis by given angle"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 172,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L172"
										}
									],
									"parameters": [
										{
											"id": 673,
											"name": "theta",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "multiple of PI"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 674,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 675,
							"name": "ry",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 181,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L181"
								}
							],
							"signatures": [
								{
									"id": 676,
									"name": "ry",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around the Y-axis by given angle"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 181,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L181"
										}
									],
									"parameters": [
										{
											"id": 677,
											"name": "theta",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "multiple of PI"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 678,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 679,
							"name": "rz",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 190,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L190"
								}
							],
							"signatures": [
								{
									"id": 680,
									"name": "rz",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around the Z-axis by given angle"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 190,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L190"
										}
									],
									"parameters": [
										{
											"id": 681,
											"name": "phi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "multiple of PI"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 682,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 691,
							"name": "u3",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 217,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L217"
								}
							],
							"signatures": [
								{
									"id": 692,
									"name": "u3",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Single qubit rotation with 3 Euler angles"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 217,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L217"
										}
									],
									"parameters": [
										{
											"id": 693,
											"name": "angles",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "[theta, phi, lambda] - multiples of PI"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 694,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 705,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 263,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L263"
								}
							],
							"signatures": [
								{
									"id": 706,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a gate parameter outside of a gate method"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nq0.update('r2.2.0', $noise())\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 263,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L263"
										}
									],
									"parameters": [
										{
											"id": 707,
											"name": "param",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "id of the parameter to update. Should be 'gateName.gateIndex.paramIndex' as in 'rx.0.0'"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 708,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value to set. Can be a number of an instance of a pattern"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": 637,
												"name": "Wire",
												"package": "zen"
											}
										]
									}
								}
							]
						},
						{
							"id": 659,
							"name": "x",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 139,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L139"
								}
							],
							"signatures": [
								{
									"id": 660,
									"name": "x",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PI rotation over X-axis, also known as NOT gate"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 139,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L139"
										}
									],
									"parameters": [
										{
											"id": 661,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 662,
							"name": "y",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 147,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L147"
								}
							],
							"signatures": [
								{
									"id": 663,
									"name": "y",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PI rotation over Y-axis"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 147,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L147"
										}
									],
									"parameters": [
										{
											"id": 664,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						},
						{
							"id": 665,
							"name": "z",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Wire.ts",
									"line": 155,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L155"
								}
							],
							"signatures": [
								{
									"id": 666,
									"name": "z",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PI rotation over Z-axis"
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Wire.ts",
											"line": 155,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L155"
										}
									],
									"parameters": [
										{
											"id": 667,
											"name": "offset",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number of columns to skip"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": 637,
										"name": "Wire",
										"package": "zen"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								687,
								683,
								695,
								668,
								702,
								698,
								671,
								675,
								679,
								691,
								705,
								659,
								662,
								665
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Wire.ts",
							"line": 14,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L14"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						637
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Wire.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Wire.ts#L1"
				}
			]
		},
		{
			"id": 403,
			"name": "Zen",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 404,
					"name": "Zen",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Zen class allows you to set global parameters. It is available within Zen as "
							},
							{
								"kind": "code",
								"text": "`z`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nz.t.range(0, 16, 1) // pattern time\nz.bpm.range(60, 120, 1) // pattern bpm\nz.s = 16 // size of canvas\nz.q = 16 // frames per cycle\nz.update = 1 // when to update the executed code, 1 is on the next division, q is on the next cycle etc.\nz.set({reverb: 1, rsize: 0.5}) // set global parameters for all streams. Can be overwritten by stream parameters\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 503,
							"name": "map",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to map parameter names to different keys. Useful for mapping to MIDI controllers"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.map = {amp: 'cc1', cutoff: 'cc74'}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 194,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L194"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 504,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 194,
											"character": 10,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L194"
										}
									]
								}
							},
							"defaultValue": "{}",
							"inheritedFrom": {
								"type": "reference",
								"target": 591,
								"name": "Stream.map"
							}
						},
						{
							"id": 473,
							"name": "p",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across time"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.p.amp.range(0,1) // ramp amp from 0 to 1 across the cycle\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 44,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L44"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "zen",
									"packagePath": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 558,
								"name": "Stream.p"
							}
						},
						{
							"id": 517,
							"name": "ps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@alias",
										"content": [
											{
												"kind": "text",
												"text": "for "
											},
											{
												"kind": "code",
												"text": "`params`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 243,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L243"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 518,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 235,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
										}
									],
									"signatures": [
										{
											"id": 519,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Set multiple stream parameter using key/value pairs"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": []
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 235,
													"character": 4,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
												}
											],
											"parameters": [
												{
													"id": 520,
													"name": "ps",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "key/value pairs"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zen",
															"packagePath": "src/lib/zen/types.ts",
															"qualifiedName": "Dictionary"
														},
														"name": "Dictionary",
														"package": "zen"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "this"
											}
										}
									]
								}
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 605,
								"name": "Stream.ps"
							}
						},
						{
							"id": 474,
							"name": "px",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the x axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.px.amp.range(0,1) // ramp amp from 0 to 1 across the x axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 51,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "zen",
									"packagePath": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 559,
								"name": "Stream.px"
							}
						},
						{
							"id": 475,
							"name": "py",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the y axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.py.amp.range(0,1) // ramp amp from 0 to 1 across the y axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 58,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L58"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "zen",
									"packagePath": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 560,
								"name": "Stream.py"
							}
						},
						{
							"id": 476,
							"name": "pz",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Patterns to be mapped across the z axis"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ns0.pz.amp.range(0,1) // ramp amp from 0 to 1 across the z axis of the canvas\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 65,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L65"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "zen",
									"packagePath": "src/lib/zen/types.ts",
									"qualifiedName": "Dictionary"
								},
								"name": "Dictionary",
								"package": "zen"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 561,
								"name": "Stream.pz"
							}
						},
						{
							"id": 521,
							"name": "set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@alias",
										"content": [
											{
												"kind": "text",
												"text": "for "
											},
											{
												"kind": "code",
												"text": "`params`"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "use "
											},
											{
												"kind": "code",
												"text": "`params`"
											},
											{
												"kind": "text",
												"text": " or  "
											},
											{
												"kind": "code",
												"text": "`ps`"
											},
											{
												"kind": "text",
												"text": " instead - kept for backwards compatibility"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 249,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L249"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 522,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 235,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
										}
									],
									"signatures": [
										{
											"id": 523,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Set multiple stream parameter using key/value pairs"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": []
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "classes/Stream.ts",
													"line": 235,
													"character": 4,
													"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
												}
											],
											"parameters": [
												{
													"id": 524,
													"name": "ps",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "key/value pairs"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zen",
															"packagePath": "src/lib/zen/types.ts",
															"qualifiedName": "Dictionary"
														},
														"name": "Dictionary",
														"package": "zen"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "this"
											}
										}
									]
								}
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"target": 609,
								"name": "Stream.set"
							}
						},
						{
							"id": 411,
							"name": "bpm",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 40,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L40"
								}
							],
							"getSignature": {
								"id": 412,
								"name": "bpm",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the global bpm"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.bpm.saw(60,120,0.5) // set the global bpm with a saw wave between 60 and 120, over 2 cycles\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 40,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L40"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 443,
							"name": "c",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 172,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L172"
								}
							],
							"getSignature": {
								"id": 444,
								"name": "c",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Get the current cycle. This is available within your code as "
										},
										{
											"kind": "code",
											"text": "`c`"
										},
										{
											"kind": "text",
											"text": "."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.every(c%2 ? 1 : 4) // every 1 frame on odd cycles, every 4 frames on even cycles\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 172,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L172"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 429,
							"name": "clock",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 114,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L114"
								}
							],
							"getSignature": {
								"id": 430,
								"name": "clock",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the clock source. Either 'internal' or a MIDI device index\nIt's a pattern, but you should only use the set method"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.clock.set({src: 'internal'}) // set the clock source to internal\nz.clock.set({src: 'midi', device: 0}) // set the clock source to MIDI device 0\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 114,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L114"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 490,
							"name": "e",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 136,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L136"
								}
							],
							"getSignature": {
								"id": 491,
								"name": "e",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether the stream should trigger an event"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.e.set(1) // trigger an event every division\ns0.e.every(4) // trigger an event every 4 divisions\ns0.e.bin('1000 1001') // use a binary pattern to trigger events\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 136,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L136"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.e"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 578,
								"name": "Stream.e"
							}
						},
						{
							"id": 426,
							"name": "grid",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 100,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L100"
								}
							],
							"getSignature": {
								"id": 427,
								"name": "grid",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for displaying data on the grid. Expects an array of numbers between 0 and 1"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.grid.set(Array.from({length: 16*16}, () => Math.random())) // random values between 0 and 1\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 100,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L100"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 501,
							"name": "i",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 185,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L185"
								}
							],
							"getSignature": {
								"id": 502,
								"name": "i",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The stream's index number"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.id // 0\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 185,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L185"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.i"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 589,
								"name": "Stream.i"
							}
						},
						{
							"id": 423,
							"name": "latency",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 88,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L88"
								}
							],
							"getSignature": {
								"id": 424,
								"name": "latency",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the global latency"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.latency.set(500) // set the global latency to 500ms\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 88,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L88"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 493,
							"name": "m",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 149,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L149"
								}
							],
							"getSignature": {
								"id": 494,
								"name": "m",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to mutate all active events in the stream. Only mutates parameters prefixed with "
										},
										{
											"kind": "code",
											"text": "`_`"
										},
										{
											"kind": "text",
											"text": ", e.g. "
										},
										{
											"kind": "code",
											"text": "`_amp`"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.m.set(1) // mutate all active events every division\ns0.m.every(4) // mutate all active events every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 149,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L149"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.m"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 581,
								"name": "Stream.m"
							}
						},
						{
							"id": 432,
							"name": "mode",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 130,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L130"
								}
							],
							"getSignature": {
								"id": 433,
								"name": "mode",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the mode.\nIt's a pattern, but you should only use the set method"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.mode.set({trigger: 'division'}) // this is the default. Evaluate the code on every division.\nz.mode.set({trigger: 'noteon', device: 0}) // evaluate the code on every note on event on MIDI device 0\nz.mode.set({trigger: 'noteoff', device: 0}) // evaluate the code on every note off event on MIDI device 0\nz.mode.set({trigger: 'cc', device: 0}) // evaluate the code on every CC event on MIDI device 0\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 130,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L130"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 496,
							"name": "mute",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 162,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L162"
								}
							],
							"getSignature": {
								"id": 497,
								"name": "mute",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to mute the stream"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.mute.set(1) // mute the stream every division\ns0.mute.every(4) // mute the stream every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 162,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L162"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.mute"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 584,
								"name": "Stream.mute"
							}
						},
						{
							"id": 439,
							"name": "q",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 163,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L163"
								}
							],
							"setSignature": {
								"id": 441,
								"name": "q",
								"variant": "signature",
								"kind": 1048576,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set the number of divisions per cycle. Changing this value updates the variable "
										},
										{
											"kind": "code",
											"text": "`q`"
										},
										{
											"kind": "text",
											"text": " within your code."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.q = 16 // set the number of divisions per cycle to 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 163,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L163"
									}
								],
								"parameters": [
									{
										"id": 442,
										"name": "value",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						},
						{
							"id": 435,
							"name": "s",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 149,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L149"
								}
							],
							"setSignature": {
								"id": 437,
								"name": "s",
								"variant": "signature",
								"kind": 1048576,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set the size of the canvas. Changing this value updates the variable "
										},
										{
											"kind": "code",
											"text": "`s`"
										},
										{
											"kind": "text",
											"text": " within your code."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.s = 16 // set the size of the canvas to 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 149,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L149"
									}
								],
								"parameters": [
									{
										"id": 438,
										"name": "value",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						},
						{
							"id": 420,
							"name": "seed",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 76,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L76"
								}
							],
							"getSignature": {
								"id": 421,
								"name": "seed",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the global seeding"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.seed.saw(0,1,0.5) // set the global seed with a saw wave between 0 and 1, over 2 cycles\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 76,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L76"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 499,
							"name": "solo",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 175,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L175"
								}
							],
							"getSignature": {
								"id": 500,
								"name": "solo",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for determining whether to solo the stream. If true, mutes all other streams"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.solo.set(1) // solo the stream every division\ns0.solo.every(4) // solo the stream every 4 divisions\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 175,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L175"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.solo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 587,
								"name": "Stream.solo"
							}
						},
						{
							"id": 414,
							"name": "swing",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 52,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L52"
								}
							],
							"getSignature": {
								"id": 415,
								"name": "swing",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the global swing. A value between 0 and 1"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.swing.set(0.1)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 52,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L52"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 417,
							"name": "swingn",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 64,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L64"
								}
							],
							"getSignature": {
								"id": 418,
								"name": "swingn",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the global swing subdivision, e.g. 8 for 1/8th notes, 16 for 1/16ths"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.swingn.set(8)\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 64,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L64"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								}
							}
						},
						{
							"id": 408,
							"name": "t",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 28,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L28"
								}
							],
							"getSignature": {
								"id": 409,
								"name": "t",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the global time. The outcome of the pattern updates the variable "
										},
										{
											"kind": "code",
											"text": "`t`"
										},
										{
											"kind": "text",
											"text": " within your code."
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.t.sine(0,16,1) // set the global t with a sine wave between 0 and 16\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 28,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L28"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								},
								"overwrites": {
									"type": "reference",
									"target": -1,
									"name": "Stream.t"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 563,
								"name": "Stream.t"
							}
						},
						{
							"id": 445,
							"name": "update",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 190,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L190"
								}
							],
							"setSignature": {
								"id": 447,
								"name": "update",
								"variant": "signature",
								"kind": 1048576,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set when to update the executed code"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\nz.update = 1 // update on every frame\nz.update = 4 // update on every 4th frame\nz.update = q // update on the next cycle\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Zen.ts",
										"line": 190,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L190"
									}
								],
								"parameters": [
									{
										"id": 448,
										"name": "value",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						},
						{
							"id": 478,
							"name": "x",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 86,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L86"
								}
							],
							"getSignature": {
								"id": 479,
								"name": "x",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.x.saw() // move the stream across the x axis of the canvas with a saw wave\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 86,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L86"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.x"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 566,
								"name": "Stream.x"
							}
						},
						{
							"id": 487,
							"name": "xyz",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 122,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L122"
								}
							],
							"getSignature": {
								"id": 488,
								"name": "xyz",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting all axes of the stream's position at the same time. Expects an array of values"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.xyz.set([0,0.5,0])\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 122,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L122"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.xyz"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 575,
								"name": "Stream.xyz"
							}
						},
						{
							"id": 481,
							"name": "y",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 98,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L98"
								}
							],
							"getSignature": {
								"id": 482,
								"name": "y",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.y.saw() // move the stream across the y axis of the canvas with a saw wave\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 98,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L98"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.y"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 569,
								"name": "Stream.y"
							}
						},
						{
							"id": 484,
							"name": "z",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 110,
									"character": 8,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L110"
								}
							],
							"getSignature": {
								"id": 485,
								"name": "z",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A Pattern for setting the stream's position in space"
										}
									],
									"blockTags": [
										{
											"tag": "@example",
											"content": [
												{
													"kind": "code",
													"text": "```ts\ns0.z.saw() // move the stream across the z axis of the canvas with a saw wave\n```"
												}
											]
										}
									]
								},
								"sources": [
									{
										"fileName": "classes/Stream.ts",
										"line": 110,
										"character": 8,
										"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L110"
									}
								],
								"type": {
									"type": "reference",
									"target": 2,
									"name": "Pattern",
									"package": "zen"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Stream.z"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 572,
								"name": "Stream.z"
							}
						},
						{
							"id": 458,
							"name": "getSwing",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 218,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L218"
								}
							],
							"signatures": [
								{
									"id": 459,
									"name": "getSwing",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Zen.ts",
											"line": 218,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L218"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 460,
							"name": "getSwingN",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "classes/Zen.ts",
									"line": 223,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L223"
								}
							],
							"signatures": [
								{
									"id": 461,
									"name": "getSwingN",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "classes/Zen.ts",
											"line": 223,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L223"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 514,
							"name": "params",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "classes/Stream.ts",
									"line": 235,
									"character": 4,
									"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
								}
							],
							"signatures": [
								{
									"id": 515,
									"name": "params",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set multiple stream parameter using key/value pairs"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ns0.set({amp: 1, n: 60, reverb: 0.5})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "classes/Stream.ts",
											"line": 235,
											"character": 4,
											"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Stream.ts#L235"
										}
									],
									"parameters": [
										{
											"id": 516,
											"name": "ps",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "key/value pairs"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "zen",
													"packagePath": "src/lib/zen/types.ts",
													"qualifiedName": "Dictionary"
												},
												"name": "Dictionary",
												"package": "zen"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 603,
										"name": "Stream.params"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 602,
								"name": "Stream.params"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								503,
								473,
								517,
								474,
								475,
								476,
								521
							]
						},
						{
							"title": "Accessors",
							"children": [
								411,
								443,
								429,
								490,
								426,
								501,
								423,
								493,
								432,
								496,
								439,
								435,
								420,
								499,
								414,
								417,
								408,
								445,
								478,
								487,
								481,
								484
							]
						},
						{
							"title": "Methods",
							"children": [
								458,
								460,
								514
							]
						}
					],
					"sources": [
						{
							"fileName": "classes/Zen.ts",
							"line": 15,
							"character": 13,
							"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L15"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 549,
							"name": "Stream",
							"package": "zen"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						404
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/Zen.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/cephasteom/zen-3/blob/3c1c527a4ebb6143ef5839e3da0b45ce8d2c7d0c/src/lib/zen/classes/Zen.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				548,
				636,
				403
			]
		}
	],
	"packageName": "zen",
	"readme": [
		{
			"kind": "text",
			"text": "# Zen\n\nZen is a live coding environment for the browser, with an emphasis on the use of quantum algorithms for music generation. You can use it at [https://zen.cephasteom.co.uk/](https://zen.cephasteom.co.uk/) or download a version for desktop at [https://github.com/cephasteom/zen-electron](https://github.com/cephasteom/zen-electron).\n\nThis project was built with, amongst other things, SvelteKit.\n\n## Developing\n\nInstall dependencies with "
		},
		{
			"kind": "code",
			"text": "`npm install`"
		},
		{
			"kind": "text",
			"text": " (or "
		},
		{
			"kind": "code",
			"text": "`pnpm install`"
		},
		{
			"kind": "text",
			"text": " or "
		},
		{
			"kind": "code",
			"text": "`yarn`"
		},
		{
			"kind": "text",
			"text": "), start a development server:\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\nnpm run dev\n\n# or start the server and open the app in a new browser tab\nnpm run dev -- --open\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Building\n\nTo create a production version of the app:\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\nnpm run build\n```"
		},
		{
			"kind": "text",
			"text": "\n\nYou can preview the production build with "
		},
		{
			"kind": "code",
			"text": "`npm run preview`"
		},
		{
			"kind": "text",
			"text": ".\n\n## Docs\nWe use TSDocs to generate documentation for all Zen classes and synths. These generate each time you run a build. If you want to refresh them manually see the scripts in "
		},
		{
			"kind": "code",
			"text": "`package.json`"
		},
		{
			"kind": "text",
			"text": "."
		}
	],
	"symbolIdMap": {
		"1": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": ""
		},
		"2": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern"
		},
		"17": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.aliases"
		},
		"18": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object"
		},
		"19": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.qm"
		},
		"20": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.qms"
		},
		"21": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.qpb"
		},
		"22": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.qpbs"
		},
		"23": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.qph"
		},
		"24": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.qphs"
		},
		"25": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__object.qr"
		},
		"26": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.rng"
		},
		"27": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.rng"
		},
		"28": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "t"
		},
		"43": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.t"
		},
		"44": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.t"
		},
		"45": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.c"
		},
		"46": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.c"
		},
		"47": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.q"
		},
		"48": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.q"
		},
		"52": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.set"
		},
		"53": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.set"
		},
		"54": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"58": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.count"
		},
		"59": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.count"
		},
		"60": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "event"
		},
		"61": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.counter"
		},
		"62": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.counter"
		},
		"63": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"64": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "reset"
		},
		"65": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.hold"
		},
		"66": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.hold"
		},
		"67": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "trigger"
		},
		"68": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.use"
		},
		"69": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.use"
		},
		"70": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "pattern"
		},
		"73": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.not"
		},
		"74": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.not"
		},
		"75": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"76": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.toggle"
		},
		"77": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.toggle"
		},
		"78": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"79": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.io"
		},
		"80": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.io"
		},
		"81": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "i"
		},
		"82": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "o"
		},
		"83": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ifelse"
		},
		"84": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ifelse"
		},
		"85": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "ifValue"
		},
		"86": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "elseValue"
		},
		"87": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.if"
		},
		"88": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.if"
		},
		"89": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"90": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.else"
		},
		"91": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.else"
		},
		"92": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"93": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mtr"
		},
		"94": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mtr"
		},
		"95": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "outMin"
		},
		"96": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "outMax"
		},
		"97": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "inMin"
		},
		"98": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "inMax"
		},
		"99": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.add"
		},
		"100": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.add"
		},
		"101": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"102": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sub"
		},
		"103": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sub"
		},
		"104": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"105": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.subr"
		},
		"106": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.subr"
		},
		"107": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"108": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mul"
		},
		"109": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mul"
		},
		"110": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"111": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.div"
		},
		"112": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.div"
		},
		"113": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"114": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.divr"
		},
		"115": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.divr"
		},
		"116": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"117": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mod"
		},
		"118": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.mod"
		},
		"119": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"120": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.and"
		},
		"121": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.and"
		},
		"122": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"123": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.or"
		},
		"124": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.or"
		},
		"125": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"126": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.xor"
		},
		"127": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.xor"
		},
		"128": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"129": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.range"
		},
		"130": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.range"
		},
		"131": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"132": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"133": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"134": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sine"
		},
		"135": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sine"
		},
		"136": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"137": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"138": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"139": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cosine"
		},
		"140": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cosine"
		},
		"141": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"142": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"143": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"144": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.saw"
		},
		"145": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.saw"
		},
		"146": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"147": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"148": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"149": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.curve"
		},
		"150": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.curve"
		},
		"151": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"152": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"153": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "curve"
		},
		"154": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"155": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tri"
		},
		"156": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tri"
		},
		"157": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"158": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"159": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"160": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pulse"
		},
		"161": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pulse"
		},
		"162": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"163": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"164": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "width"
		},
		"165": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"166": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.square"
		},
		"167": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.square"
		},
		"168": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"169": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"170": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"171": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.random"
		},
		"172": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.random"
		},
		"173": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"174": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"175": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "step"
		},
		"176": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.noise"
		},
		"177": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.noise"
		},
		"178": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "lo"
		},
		"179": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "hi"
		},
		"180": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"181": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "cycles"
		},
		"182": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.every"
		},
		"183": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.every"
		},
		"184": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"185": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bin"
		},
		"186": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bin"
		},
		"187": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"188": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"189": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ntbin"
		},
		"190": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ntbin"
		},
		"191": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"192": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "q"
		},
		"193": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"194": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.seq"
		},
		"195": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.seq"
		},
		"196": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "values"
		},
		"197": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "freq"
		},
		"198": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.step"
		},
		"199": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.step"
		},
		"200": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"201": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.snap"
		},
		"202": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.snap"
		},
		"203": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "array"
		},
		"204": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tune"
		},
		"205": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tune"
		},
		"206": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "array"
		},
		"207": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.clamp"
		},
		"208": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.clamp"
		},
		"209": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "min"
		},
		"210": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "max"
		},
		"211": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gt"
		},
		"212": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gt"
		},
		"213": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"214": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lt"
		},
		"215": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lt"
		},
		"216": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"217": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gte"
		},
		"218": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.gte"
		},
		"219": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"220": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lte"
		},
		"221": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.lte"
		},
		"222": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"223": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eq"
		},
		"224": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.eq"
		},
		"225": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"226": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.neq"
		},
		"227": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.neq"
		},
		"228": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"229": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.invert"
		},
		"230": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.invert"
		},
		"231": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.odd"
		},
		"232": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.odd"
		},
		"233": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.even"
		},
		"234": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.even"
		},
		"235": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bts"
		},
		"236": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.bts"
		},
		"237": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.btms"
		},
		"238": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.btms"
		},
		"239": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ttms"
		},
		"240": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ttms"
		},
		"241": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.fn"
		},
		"242": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.fn"
		},
		"243": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "cb"
		},
		"244": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"245": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"246": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"247": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.inversion"
		},
		"248": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.inversion"
		},
		"249": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"250": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.at"
		},
		"251": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.at"
		},
		"252": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "i"
		},
		"253": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atr"
		},
		"254": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atr"
		},
		"255": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "array"
		},
		"256": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.size"
		},
		"257": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.size"
		},
		"258": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.map"
		},
		"259": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.map"
		},
		"260": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "cb"
		},
		"261": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"262": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"263": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"264": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.reduce"
		},
		"265": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.reduce"
		},
		"266": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "cb"
		},
		"267": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"268": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"269": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "acc"
		},
		"270": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"271": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "initial"
		},
		"272": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.filter"
		},
		"273": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.filter"
		},
		"274": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "cb"
		},
		"275": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"276": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"277": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"278": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.slice"
		},
		"279": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.slice"
		},
		"280": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "start"
		},
		"281": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "end"
		},
		"282": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.some"
		},
		"283": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.some"
		},
		"284": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "cb"
		},
		"285": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"286": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "__type"
		},
		"287": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "x"
		},
		"288": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.layer"
		},
		"289": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.layer"
		},
		"290": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "n"
		},
		"291": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sin"
		},
		"292": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sin"
		},
		"293": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cos"
		},
		"294": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cos"
		},
		"295": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tan"
		},
		"296": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.tan"
		},
		"297": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.asin"
		},
		"298": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.asin"
		},
		"299": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.acos"
		},
		"300": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.acos"
		},
		"301": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan"
		},
		"302": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan"
		},
		"303": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan2"
		},
		"304": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.atan2"
		},
		"305": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "y"
		},
		"306": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.abs"
		},
		"307": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.abs"
		},
		"308": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ceil"
		},
		"309": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.ceil"
		},
		"310": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.floor"
		},
		"311": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.floor"
		},
		"312": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.round"
		},
		"313": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.round"
		},
		"314": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.exp"
		},
		"315": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.exp"
		},
		"316": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.log"
		},
		"317": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.log"
		},
		"318": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.max"
		},
		"319": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.max"
		},
		"320": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "compare"
		},
		"321": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.min"
		},
		"322": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.min"
		},
		"323": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "compare"
		},
		"324": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pow"
		},
		"325": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pow"
		},
		"326": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "exponent"
		},
		"327": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sqrt"
		},
		"328": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sqrt"
		},
		"329": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.interpolate"
		},
		"330": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.interpolate"
		},
		"331": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "val"
		},
		"332": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.degrade"
		},
		"333": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.degrade"
		},
		"334": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "amt"
		},
		"335": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sometimes"
		},
		"336": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.sometimes"
		},
		"337": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.coin"
		},
		"338": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.coin"
		},
		"339": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.rarely"
		},
		"340": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.rarely"
		},
		"341": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.often"
		},
		"342": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.often"
		},
		"343": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.markov"
		},
		"344": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.markov"
		},
		"345": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "matrix"
		},
		"346": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "states"
		},
		"347": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "frequency"
		},
		"348": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.midicc"
		},
		"349": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.midicc"
		},
		"350": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "cc"
		},
		"351": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "device"
		},
		"352": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "value"
		},
		"353": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.midinote"
		},
		"354": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.midinote"
		},
		"355": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "device"
		},
		"356": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.midifile"
		},
		"357": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.midifile"
		},
		"358": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "path"
		},
		"359": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "param"
		},
		"360": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.once"
		},
		"361": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.once"
		},
		"362": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.persist"
		},
		"363": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.persist"
		},
		"364": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "fn"
		},
		"365": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cache"
		},
		"366": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.cache"
		},
		"367": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "size"
		},
		"368": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "repeats"
		},
		"369": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pack"
		},
		"370": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.pack"
		},
		"371": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "args"
		},
		"372": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qmeasurement"
		},
		"373": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qmeasurement"
		},
		"374": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "qubit"
		},
		"375": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qmeasurements"
		},
		"376": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qmeasurements"
		},
		"377": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qprobability"
		},
		"378": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qprobability"
		},
		"379": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "state"
		},
		"380": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qprobabilities"
		},
		"381": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qprobabilities"
		},
		"382": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qphase"
		},
		"383": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qphase"
		},
		"384": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "state"
		},
		"385": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qphases"
		},
		"386": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qphases"
		},
		"387": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qresult"
		},
		"388": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.qresult"
		},
		"389": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.print"
		},
		"390": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "Pattern.print"
		},
		"391": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Pattern.ts",
			"qualifiedName": "prefix"
		},
		"403": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": ""
		},
		"404": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen"
		},
		"408": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.t"
		},
		"409": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.t"
		},
		"411": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.bpm"
		},
		"412": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.bpm"
		},
		"414": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.swing"
		},
		"415": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.swing"
		},
		"417": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.swingn"
		},
		"418": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.swingn"
		},
		"420": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.seed"
		},
		"421": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.seed"
		},
		"423": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.latency"
		},
		"424": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.latency"
		},
		"426": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.grid"
		},
		"427": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.grid"
		},
		"429": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.clock"
		},
		"430": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.clock"
		},
		"432": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.mode"
		},
		"433": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.mode"
		},
		"435": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.s"
		},
		"437": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.s"
		},
		"438": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "value"
		},
		"439": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.q"
		},
		"441": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.q"
		},
		"442": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "value"
		},
		"443": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.c"
		},
		"444": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.c"
		},
		"445": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.update"
		},
		"447": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.update"
		},
		"448": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "value"
		},
		"458": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.getSwing"
		},
		"459": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.getSwing"
		},
		"460": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.getSwingN"
		},
		"461": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Zen.ts",
			"qualifiedName": "Zen.getSwingN"
		},
		"473": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.p"
		},
		"474": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.px"
		},
		"475": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.py"
		},
		"476": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.pz"
		},
		"478": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"479": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"481": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"482": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"484": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"485": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"487": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"488": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"490": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"491": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"493": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"494": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"496": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"497": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"499": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"500": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"501": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.i"
		},
		"502": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.i"
		},
		"503": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.map"
		},
		"504": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object"
		},
		"514": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"515": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"516": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		},
		"517": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.ps"
		},
		"518": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"519": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"520": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		},
		"521": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"522": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"523": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"524": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		},
		"548": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": ""
		},
		"549": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream"
		},
		"558": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.p"
		},
		"559": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.px"
		},
		"560": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.py"
		},
		"561": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.pz"
		},
		"563": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.t"
		},
		"564": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.t"
		},
		"566": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"567": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.x"
		},
		"569": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"570": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.y"
		},
		"572": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"573": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.z"
		},
		"575": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"576": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.xyz"
		},
		"578": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"579": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.e"
		},
		"581": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"582": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.m"
		},
		"584": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"585": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.mute"
		},
		"587": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"588": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.solo"
		},
		"589": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.i"
		},
		"590": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.i"
		},
		"591": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.map"
		},
		"592": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "__object"
		},
		"602": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"603": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"604": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		},
		"605": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.ps"
		},
		"606": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"607": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"608": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		},
		"609": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.set"
		},
		"610": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"611": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "Stream.params"
		},
		"612": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Stream.ts",
			"qualifiedName": "ps"
		},
		"636": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": ""
		},
		"637": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire"
		},
		"659": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.x"
		},
		"660": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.x"
		},
		"661": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"662": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.y"
		},
		"663": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.y"
		},
		"664": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"665": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.z"
		},
		"666": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.z"
		},
		"667": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"668": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.h"
		},
		"669": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.h"
		},
		"670": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"671": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.rx"
		},
		"672": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.rx"
		},
		"673": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "theta"
		},
		"674": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"675": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.ry"
		},
		"676": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.ry"
		},
		"677": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "theta"
		},
		"678": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"679": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.rz"
		},
		"680": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.rz"
		},
		"681": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "phi"
		},
		"682": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"683": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.cx"
		},
		"684": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.cx"
		},
		"685": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "connectedQubits"
		},
		"686": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"687": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.ccx"
		},
		"688": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.ccx"
		},
		"689": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "connectedQubits"
		},
		"690": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"691": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.u3"
		},
		"692": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.u3"
		},
		"693": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "angles"
		},
		"694": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "offset"
		},
		"695": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.fb"
		},
		"696": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.fb"
		},
		"697": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "stream"
		},
		"698": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.random"
		},
		"699": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.random"
		},
		"700": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "numQubits"
		},
		"701": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "numGates"
		},
		"702": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.import"
		},
		"703": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.import"
		},
		"704": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "code"
		},
		"705": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.update"
		},
		"706": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "Wire.update"
		},
		"707": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "param"
		},
		"708": {
			"packageName": "zen",
			"packagePath": "src/lib/zen/classes/Wire.ts",
			"qualifiedName": "value"
		}
	},
	"files": {
		"entries": {
			"1": "src/lib/zen/classes/Pattern.ts",
			"2": "src/lib/zen/classes/Zen.ts",
			"3": "src/lib/zen/classes/Stream.ts",
			"4": "src/lib/zen/classes/Wire.ts"
		},
		"reflections": {
			"1": 1,
			"2": 403,
			"3": 548,
			"4": 636
		}
	}
}
